[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-F11-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S1-CS2103T-F11-2/tp/actions/workflows/gradle.yml)[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F11-2/tp/graph/badge.svg?token\u003d6VNUBS5EZI)](https://codecov.io/gh/AY2324S1-CS2103T-F11-2/tp)","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"# WedLog","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"## Description","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"While it has a Graphical User Interface (GUI), most of the user interactions occur through the Command Line Interface (CLI).","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"## Features","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"- Add \u0026 delete guest information.","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"- Add \u0026 delete vendor information.","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"- View the full list of guests and vendors.","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"- View a single guest/ vendor information.","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"- Know the names and other information of guests and vendors.","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"## Site Map","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"- [Project Website](https://ay2324s1-cs2103t-f11-2.github.io/tp)","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"- [User Guide](https://ay2324s1-cs2103t-f11-2.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"- [Developer Guide](https://ay2324s1-cs2103t-f11-2.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"- [About Us](https://ay2324s1-cs2103t-f11-2.github.io/tp/AboutUs.html)","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"## Credits \u0026 Acknowledgements","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"- This project was made as part of CS2103T in AY23/24 S1.","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"samuelim01":3,"wasjoe1":17,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"mainClassName \u003d \u0027wedlog.address.Main\u0027","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    archiveFileName \u003d \u0027wedlog.jar\u0027","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"samuelim01":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"### Keagan Pang","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"\u003cimg src\u003d\"images/keaganpzh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"[[github](https://github.com/keaganpzh)] [[portfolio](team/keaganpzh.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"-   Role: Git expert","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"-   Responsibilities: Integration","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"### Pan Xinping","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"\u003cimg src\u003d\"images/p-xp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"[[github](http://github.com/p-xp)]","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"[[portfolio](team/p-xp.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"-   Role: Team Lead","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"-   Responsibilities: Deliverables \u0026 Deadlines","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"### Joe Chua","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"\u003cimg src\u003d\"images/wasjoe1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"[[github](http://github.com/wasjoe1)] [[portfolio](team/wasjoe1.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"- Role: Developer","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"- Responsibilities: Documentation","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"### Samuel Lim","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"\u003cimg src\u003d\"images/samuelim01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"[[github](http://github.com/samuelim01)]","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"[[portfolio](team/samuelim01.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"- Role: IDE/Java expert","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"- Responsibilities: Code Quality","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"### Shannon Tsou","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"\u003cimg src\u003d\"images/tllshan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"[[github](http://github.com/tllshan)]","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"[[portfolio](team/tllshan.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"- Role: Code Tester","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"- Responsibilities: Scheduling \u0026 Tracking","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"tllshan":11,"samuelim01":1,"p-xp":11,"wasjoe1":1,"keaganpzh":4,"-":30}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/MainApp.java).","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"samuelim01":1,"-":81}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"# WedLog Developer Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `guest delete 1`.","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/ui/Ui.java)","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/logic/Logic.java)","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"guest delete 1\")` API call as an example.","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `guest delete 1` Command\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"**Note:** The lifeline for `GuestCommandParser` and `GuestDeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a general parser that matches the command (e.g., `GuestCommandParser`).","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"2. In turn, the general parser creates a parser that matches the command (e.g., `GuestDeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"3. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `GuestDeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"4. The command can communicate with the `Model` when it is executed (e.g. to delete a guest).","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"5. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates a `GuestCommandParser` or `VendorCommandParser` depending on the command. This class then creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `GuestAddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `GuestAddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"* All `XYZCommandParser` classes (e.g., `GuestAddCommandParser`, `VendorDeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/model/Model.java)","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"* stores the address book data e.g., all `Guest` objects (which are contained in a `UniqueGuestList` object).","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"* stores the currently \u0027selected\u0027 `Guest` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cGuest\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-F11-2/tp/tree/master/src/main/java/wedlog/address/storage/Storage.java)","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"Classes used by multiple components are in the `wedlog.addressbook.commons` package.","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"p-xp"},"content":"A bride or groom who","lastModifiedDate":"2023-10-05"},{"lineNumber":273,"author":{"gitId":"p-xp"},"content":"* Is tech-savvy and is comfortable using CLI","lastModifiedDate":"2023-10-05"},{"lineNumber":274,"author":{"gitId":"p-xp"},"content":"* Can type fast","lastModifiedDate":"2023-10-05"},{"lineNumber":275,"author":{"gitId":"p-xp"},"content":"* Prefers working on a desktop","lastModifiedDate":"2023-10-05"},{"lineNumber":276,"author":{"gitId":"p-xp"},"content":"* Wants to plan their own wedding","lastModifiedDate":"2023-10-05"},{"lineNumber":277,"author":{"gitId":"p-xp"},"content":"* Has a partner who is uninvolved in the planning process","lastModifiedDate":"2023-10-05"},{"lineNumber":278,"author":{"gitId":"p-xp"},"content":"* Values efficiency and having a consolidated wedding planning platform","lastModifiedDate":"2023-10-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"p-xp"},"content":"**Value proposition**: consolidate all information related to wedding guests and vendors into 1 platform for ","lastModifiedDate":"2023-10-05"},{"lineNumber":281,"author":{"gitId":"p-xp"},"content":"streamlined planning.","lastModifiedDate":"2023-10-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"| Priority | As a …​                         | I want to …​                                          | So that I can…​                                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"tllshan"},"content":"|----------|---------------------------------|-------------------------------------------------------|----------------------------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":290,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | add new guests with name and contact                  | keep track of the people whom I invited to the wedding         |","lastModifiedDate":"2023-10-05"},{"lineNumber":291,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | remove existing guests                                | remove guests I erroneously added                              |","lastModifiedDate":"2023-10-05"},{"lineNumber":292,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | record down dietary requirements for guests           | cater correct types of meals for my guests                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":293,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | update RSVP status of a guest                         | track who is coming                                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":294,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | save data into local storage                          | keep my data even after I exit the app                         |","lastModifiedDate":"2023-10-05"},{"lineNumber":295,"author":{"gitId":"tllshan"},"content":"| `* * *`  | new user                        | retrieve data from local storage                      | access past data that I have inputed                           |","lastModifiedDate":"2023-10-05"},{"lineNumber":296,"author":{"gitId":"tllshan"},"content":"| `* * *`  | user liaising with many vendors | add new vendor with name and contact                  | keep track of which vendors I am currently in contact with     |","lastModifiedDate":"2023-10-05"},{"lineNumber":297,"author":{"gitId":"tllshan"},"content":"| `* * *`  | user liaising with many vendors | remove existing vendors                               | remove vendors I erroneously added                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":298,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | view how many guests have RSVP\u0027d                      | know how many guests are confirmed to be coming                |","lastModifiedDate":"2023-10-05"},{"lineNumber":299,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | add a note for a guest                                | take note of any miscellaneous information about a guest       |","lastModifiedDate":"2023-10-05"},{"lineNumber":300,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | view a specific guest\u0027s details                       | understand the arrangements I\u0027ve made for a particular guest   |","lastModifiedDate":"2023-10-05"},{"lineNumber":301,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | view the total number of each type of diet            | cater the appropriate number and types of meals                |","lastModifiedDate":"2023-10-05"},{"lineNumber":302,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | filter guests with dietary restrictions               | cater alternate meals for them                                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":303,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | assign a guest to a table number                      | keep track of seating arrangements                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":304,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | filter guests by table                                | see who is sitting at each table                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":305,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | add guests to a group                                 | know which group a guest belongs to                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":306,"author":{"gitId":"tllshan"},"content":"| `* *`    | user with many guests           | filter guests by groups (eg family, friends)          | access and manage relevant information for each group          |","lastModifiedDate":"2023-10-05"},{"lineNumber":307,"author":{"gitId":"tllshan"},"content":"| `*`      | financially savvy user          | track my total expenses                               | stay within budget                                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":308,"author":{"gitId":"tllshan"},"content":"| `*`      | financially savvy user          | keep track of the costs associated with each vendor   | track how much I have spent on the wedding                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":309,"author":{"gitId":"tllshan"},"content":"| `*`      | financially savvy user          | record gift registry                                  | take note of which gifts are already bought, and by who        |","lastModifiedDate":"2023-10-05"},{"lineNumber":310,"author":{"gitId":"tllshan"},"content":"| `*`      | financially savvy user          | keep track of red packets received from guests        | keep future references on gift exchange                        |","lastModifiedDate":"2023-10-05"},{"lineNumber":311,"author":{"gitId":"tllshan"},"content":"| `*`      | financially savvy user          | view total amount I collected from wedding presents   | know how much cash I have                                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":312,"author":{"gitId":"tllshan"},"content":"| `*`      | user finding a wedding location | record pros and cons of possible locations            | choose the best location                                       |","lastModifiedDate":"2023-10-05"},{"lineNumber":313,"author":{"gitId":"tllshan"},"content":"| `*`      | task-oriented user              | add tasks and track roadmap                           | keep track of the wedding planning progress                    |","lastModifiedDate":"2023-10-05"},{"lineNumber":314,"author":{"gitId":"tllshan"},"content":"| `*`      | task-oriented user              | get reminders to do tasks when deadlines are nearing  | not miss important deadlines                                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":315,"author":{"gitId":"tllshan"},"content":"| `*`      | task-oriented user              | assign tasks and deadlines to guests                  | keep track of when I need to follow-up with them               |","lastModifiedDate":"2023-10-05"},{"lineNumber":316,"author":{"gitId":"samuelim01"},"content":"| `*`      | task-oriented user              | assign tasks and deadlines to vendors                 | keep track of when I need to follow-up with them               |","lastModifiedDate":"2023-10-08"},{"lineNumber":317,"author":{"gitId":"tllshan"},"content":"| `*`      | task-oriented user              | view all the deadlines that have passed               | identify the actions that I need to prioritise                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":318,"author":{"gitId":"tllshan"},"content":"| `*`      | task-oriented user              | view countdown to wedding                             | know the time I have left till the wedding                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":319,"author":{"gitId":"tllshan"},"content":"| `*`      | user planning my reception      | plan the flow of events during the reception          | know when to do what                                           |","lastModifiedDate":"2023-10-05"},{"lineNumber":320,"author":{"gitId":"tllshan"},"content":"| `*`      | experienced user                | view most recent commands                             | look back on what was recorded previously                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":321,"author":{"gitId":"samuelim01"},"content":"| `*`      | experienced user                | undo the last command                                 | undo accidental or erroneous commands                          |","lastModifiedDate":"2023-10-08"},{"lineNumber":322,"author":{"gitId":"tllshan"},"content":"| `*`      | experienced user                | import data from a csv file format onto this platform | easily transfer existing information from other sources        |","lastModifiedDate":"2023-10-06"},{"lineNumber":323,"author":{"gitId":"tllshan"},"content":"| `*`      | experienced user                | export data into an excel format                      | easily send data to vendors                                    |","lastModifiedDate":"2023-10-06"},{"lineNumber":324,"author":{"gitId":"tllshan"},"content":"| `*`      | experienced user                | share my address book with another user               | plan the wedding together with my partner                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":325,"author":{"gitId":"tllshan"},"content":"| `*`      | experienced user                | add custom fields for guests                          | keep track of miscellaneous information specific to my wedding |","lastModifiedDate":"2023-10-06"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":329,"author":{"gitId":"wasjoe1"},"content":"(For all use cases below, the **System** is the `WedLog` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":330,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":331,"author":{"gitId":"wasjoe1"},"content":"\u003cbox\u003eUse case: UC1 - Add a guest\u003c/box\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":332,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":333,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":334,"author":{"gitId":"wasjoe1"},"content":"1. User provides guest details.","lastModifiedDate":"2023-10-05"},{"lineNumber":335,"author":{"gitId":"wasjoe1"},"content":"2. WedLog adds the guest to the guest list.","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":339,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1a. The given input format is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":340,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":341,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a2. User provides guest details in a different format.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Steps 1a1-1a2 are repeated until the User input format is valid.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":343,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes from step 2.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1b. The guest list has reached maximum capacity.","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1b1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":346,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case ends.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1c. The guest already exists in the guest list.","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1c1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case ends.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":352,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"wasjoe1"},"content":"\u003cbox\u003eUse case: UC2 - Delete a guest\u003c/box\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":354,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":355,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"wasjoe1"},"content":"1. User requests to list all guests","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"wasjoe1"},"content":"2. WedLog shows a list of guests","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"wasjoe1"},"content":"3. User requests to delete a specific guest in the list via its index","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"wasjoe1"},"content":"4. WedLog deletes the guest","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"wasjoe1"},"content":"   \u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":364,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":365,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a2. User requests to delete the guest using a different index\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":366,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Steps 3a1-3a2 are repeated until the User provides a valid index.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":367,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes from step 4.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":368,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax","lastModifiedDate":"2023-10-05"},{"lineNumber":369,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":370,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":371,"author":{"gitId":"wasjoe1"},"content":"\u003cbox\u003eUse case: UC3 - View all guests\u003c/box\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":372,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":373,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"wasjoe1"},"content":"1. User requests to list all guests","lastModifiedDate":"2023-10-05"},{"lineNumber":375,"author":{"gitId":"wasjoe1"},"content":"2. WedLog displays a list of guests","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":377,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":379,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax","lastModifiedDate":"2023-10-05"},{"lineNumber":380,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"wasjoe1"},"content":"\u003cbox\u003eUse case: UC4 - View a specific guest\u003c/box\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":385,"author":{"gitId":"wasjoe1"},"content":"1. User requests to list all guests","lastModifiedDate":"2023-10-05"},{"lineNumber":386,"author":{"gitId":"wasjoe1"},"content":"2. WedLog displays a list of guests","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"samuelim01"},"content":"3. User requests to view a specific guest in the list","lastModifiedDate":"2023-10-19"},{"lineNumber":388,"author":{"gitId":"samuelim01"},"content":"4. WedLog displays the guest’s details","lastModifiedDate":"2023-10-19"},{"lineNumber":389,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":392,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":394,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes at step 2.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"wasjoe1"},"content":"\u003cbox\u003eUse case: UC5 - Add a vendor\u003c/box\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":401,"author":{"gitId":"wasjoe1"},"content":"1. User provides vendor details.","lastModifiedDate":"2023-10-05"},{"lineNumber":402,"author":{"gitId":"wasjoe1"},"content":"2. WedLog adds the vendor to the vendor list.","lastModifiedDate":"2023-10-05"},{"lineNumber":403,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1a. The given input format is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":407,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1a2. User provides vendor details in a different format.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":409,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Steps 1a1-1a2 are repeated until the User input format is valid.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":410,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes from step 2.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":411,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1b. The vendor list has reached maximum capacity.","lastModifiedDate":"2023-10-05"},{"lineNumber":412,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1b1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":413,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case ends.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":414,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e1c. The guest already exists in the vendor list.","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1c1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case ends.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":419,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":420,"author":{"gitId":"wasjoe1"},"content":"\u003cbox\u003eUse case: UC6 - Delete a vendor\u003c/box\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":421,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":423,"author":{"gitId":"wasjoe1"},"content":"1. User requests to list all vendor","lastModifiedDate":"2023-10-05"},{"lineNumber":424,"author":{"gitId":"wasjoe1"},"content":"2. WedLog shows a list of vendors","lastModifiedDate":"2023-10-05"},{"lineNumber":425,"author":{"gitId":"wasjoe1"},"content":"3. User requests to delete a specific vendor in the list via its index","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"wasjoe1"},"content":"4. WedLog deletes the vendor","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":430,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":431,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a2. User requests to delete the vendor using a different index\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":433,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Steps 3a1-3a2 are repeated until the User provides a valid index.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":434,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes from step 4.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":435,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax","lastModifiedDate":"2023-10-05"},{"lineNumber":436,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"wasjoe1"},"content":"\u003cbox\u003eUse case: UC7 - View all vendors\u003c/box\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":439,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":440,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":441,"author":{"gitId":"wasjoe1"},"content":"1. User requests to list all vendors","lastModifiedDate":"2023-10-05"},{"lineNumber":442,"author":{"gitId":"wasjoe1"},"content":"2. WedLog displays a list of vendors","lastModifiedDate":"2023-10-05"},{"lineNumber":443,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":446,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax","lastModifiedDate":"2023-10-05"},{"lineNumber":447,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"wasjoe1"},"content":"\u003cbox\u003eUse case: UC8 - View a specific vendor\u003c/box\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"wasjoe1"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":452,"author":{"gitId":"wasjoe1"},"content":"1. User requests to list all vendors","lastModifiedDate":"2023-10-05"},{"lineNumber":453,"author":{"gitId":"wasjoe1"},"content":"2. WedLog displays a list of vendors","lastModifiedDate":"2023-10-05"},{"lineNumber":454,"author":{"gitId":"samuelim01"},"content":"3. User requests to view a specific vendor in the list","lastModifiedDate":"2023-10-19"},{"lineNumber":455,"author":{"gitId":"samuelim01"},"content":"4. WedLog displays the vendor’s details","lastModifiedDate":"2023-10-19"},{"lineNumber":456,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003eUse case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"wasjoe1"},"content":"**Extensions:**","lastModifiedDate":"2023-10-05"},{"lineNumber":459,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":460,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":461,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Use case resumes at step 2.\u003c/span\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":462,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e*a. At any time, user inputs an invalid command/syntax","lastModifiedDate":"2023-10-05"},{"lineNumber":463,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e\u003cspan\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;*a1. WedLog shows an error message.\u003c/span\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse. ","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"samuelim01"},"content":"4. Should work without internet connection ","lastModifiedDate":"2023-10-05"},{"lineNumber":471,"author":{"gitId":"samuelim01"},"content":"5. For any command, the system should respond within 2 seconds. ","lastModifiedDate":"2023-10-05"},{"lineNumber":472,"author":{"gitId":"samuelim01"},"content":"6. Should be usable for colour-blind users. ","lastModifiedDate":"2023-10-05"},{"lineNumber":473,"author":{"gitId":"samuelim01"},"content":"7. Should provide comprehensive documentation for users to learn how to use the command-line interface effectively. ","lastModifiedDate":"2023-10-05"},{"lineNumber":474,"author":{"gitId":"samuelim01"},"content":"8. Should provide clear and user-friendly error messages, guiding users on how to rectify issues. ","lastModifiedDate":"2023-10-05"},{"lineNumber":475,"author":{"gitId":"samuelim01"},"content":"9. Should log errors for analysis and debugging.","lastModifiedDate":"2023-10-05"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"keaganpzh"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2023-10-06"},{"lineNumber":480,"author":{"gitId":"keaganpzh"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2023-10-06"},{"lineNumber":481,"author":{"gitId":"keaganpzh"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2023-10-06"},{"lineNumber":482,"author":{"gitId":"keaganpzh"},"content":"* **JSON**: [JavaScript Object Notation](https://www.json.org/json-en.html)","lastModifiedDate":"2023-10-06"},{"lineNumber":483,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":493,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":494,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"keaganpzh"},"content":"   1. Download the `.jar` file and copy into an empty folder","lastModifiedDate":"2023-10-06"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"keaganpzh"},"content":"   1. Double-click the `.jar` file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-10-06"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"keaganpzh"},"content":"   1. Re-launch the app by double-clicking the `.jar` file.\u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":511,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"keaganpzh"},"content":"Coming soon","lastModifiedDate":"2023-10-06"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"keaganpzh"},"content":"Coming soon","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"tllshan":35,"samuelim01":32,"p-xp":9,"wasjoe1":120,"keaganpzh":9,"-":316}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"   1. Run the `wedlog.address.Main` and try a few commands.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"samuelim01":1,"-":60}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Testing guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Testing guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"   e.g. `wedlog.address.commons.StringUtilTest`","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"   e.g. `wedlog.address.storage.StorageManagerTest`","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"   e.g. `wedlog.address.logic.LogicManagerTest`","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"samuelim01":3,"-":38}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"# WedLog User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"1. Download the latest `wedlog.jar` from [here](https://github.com/AY2324S1-CS2103T-F11-2/tp/releases).","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your WedLog.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar wedlog.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window. ","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"**Notes about the command format:** \u003cbr /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"### Viewing help: `help`","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"```text","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"help","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"### Adding a guest: `guest add`","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"Adds a guest to WedLog.","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"```text","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"guest add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [r/RSVP_STATUS] [d/DIETARY REQUIREMENTS] [t/TAG...]","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"A guest must have the following tags: `n/NAME`","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"The following tags are optional: `p/PHONE_NUMBER e/EMAIL a/ADDRESS r/RSVP_STATUS d/DIETARY_REQUIREMENTS t/TAG...`","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"Acceptable values for `n/NAME`:","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"- Alphanumeric word with or without spaces","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"Acceptable values for `n/PHONE_NUMBER`:","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"- Numbers with no spaces or special characters","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"Acceptable values for `e/EMAIL`:","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"- `local-part@domain`","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"  - the `local-part` must:","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"    - contain alphanumeric characters and these special characters, excluding the parentheses (+_.-)","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"    - not start or end with any special characters","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"  - the `domain` must:","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"    - consist of domain labels separated by periods","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"    - end with a domain label at least 2 characters long","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"    - have each domain label start and end with alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"Acceptable values for `a/ADDRESS`:","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"- Word with or without spaces","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"Acceptable values for `r/RSVP_STATUS`:","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"- `yes`","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"- `no`","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"- `unknown`","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"- Inputs with no values (e.g. `r/`) signify that RSVP status should be stored as `unknown`","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"Acceptable values for `d/DIETARY_REQUIREMENTS`:","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"- Word with or without spaces","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"- Inputs with no values (e.g. `d/`) signify no dietary requirements  ","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"Acceptable values for `t/tag`:","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"- Alphanumeric word without spaces","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"\u003eTips:","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"\u003e\u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"\u003e- Parameters can be in any order","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"\u003e\u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"\u003e- A guest can have any number of tags (including 0)","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"- `guest add n/Bob p/91234567 a/Blk 123 r/no`","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"- `guest add n/Keith p/92354567 d/ r/`: Will be interpreted as Keith having no dietary requirements and unknown RSVP status.","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"- `guest add n/John Doe p/98765432 e/john@doe.com a/Street 456 r/unknown d/vegetarian t/friend`","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"- `guest add n/Jane Tan e/jane@example.com r/yes d/halal t/family t/bridesmaid`","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"- Adds the guest","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"- Displays a message showing the added guest.","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"- No name specified: Displays error message “Please specify the guest’s name using the format `n/NAME`”","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"- Phone number format invalid: Displays error message “Please specify the guest’s phone number with only numbers with no spaces or special characters”.","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"- `r/` tag uses an invalid value: Displays error message “RSVP status can only be `yes`, `no` or `unknown`”.","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"### Deleting a guest: `guest delete`","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"Deletes the specified guest from WedLog.","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"```text","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"guest delete INDEX","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"tllshan"},"content":"Acceptable values for `INDEX`:","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"tllshan"},"content":"- A positive integer","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"- `guest delete 2` deletes the 2nd guest on the guest list","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"- `guest find Betsy` followed by `guest delete 1` deletes the 1st guest in the results of the `find` command","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"tllshan"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"- Deletes the person at the specified `INDEX`","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"  - If the previous command was `guest filter KEY_WORDS`, the `INDEX` refers to the index number shown in the filtered guest list","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"  - Otherwise, the `INDEX` refers to the index number on the unfiltered guest list","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"tllshan"},"content":"- Displays a message telling user which guest has been deleted","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"- Number out of index range, not a number, or no number: Displays error message “Please input a positive integer as the index.”","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"- Number does not correspond to any guest: Displays error message “The index you have provided does not correspond to any guest.”","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"- No input index: Displays error message “Please input an index.”","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"wasjoe1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"### Adding a vendor : `vendor add`","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"Adds a vendor to WedLog.","lastModifiedDate":"2023-10-05"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"```text","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"vendor add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG...]","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"A guest must have the following tags: `n/NAME`","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"The following tags are optional: `p/PHONE_NUMBER e/EMAIL a/ADDRESS r/RSVP_STATUS d/DIETARY_REQUIREMENTS t/TAG...`","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"Acceptable values for `n/NAME`:","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"- Alphanumeric word with or without spaces","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"Acceptable values for `n/PHONE_NUMBER`:","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"tllshan"},"content":"- Numbers with no spaces or special characters","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"Acceptable values for `e/EMAIL`:","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"- `local-part@domain`","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"  - the `local-part` must:","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"    - contain alphanumeric characters and these special characters, excluding the parentheses (+_.-)","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"    - not start or end with any special characters","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"  - the `domain` must:","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"    - consist of domain labels separated by periods","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"    - end with a domain label at least 2 characters long","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"    - have each domain label start and end with alphanumeric characters","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"Acceptable values for `a/ADDRESS`:","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"- Word with or without spaces","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"Acceptable values for `t/tag`:","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"- Alphanumeric word without spaces","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"\u003eTips:","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"\u003e\u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"\u003e- Parameters can be in any order","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"   \u003e\u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"\u003e- A guest can have any number of tags (including 0)","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":198,"author":{"gitId":"tllshan"},"content":"- `vendor add n/Betsy Crowe`","lastModifiedDate":"2023-10-07"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"- `vendor add n/John Doe p/91234567`","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"- `vendor add n/John Doe p/91234567 e/johndflowers@email.com a/123 Flower Lane t/florist t/photographer`","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-05"},{"lineNumber":203,"author":{"gitId":"tllshan"},"content":"- Adds a vendor to the vendor list","lastModifiedDate":"2023-10-07"},{"lineNumber":204,"author":{"gitId":"tllshan"},"content":"- Displays the vendor that has been added","lastModifiedDate":"2023-10-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":207,"author":{"gitId":"tllshan"},"content":"- No name: Displays error message \"Please specify the vendor’s name using the format n/name.\"","lastModifiedDate":"2023-10-07"},{"lineNumber":208,"author":{"gitId":"tllshan"},"content":"- Phone number format invalid: Displays error message “Please specify the vendor’s phone number with only numbers with no spaces or special characters”.","lastModifiedDate":"2023-10-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":210,"author":{"gitId":"samuelim01"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-06"},{"lineNumber":211,"author":{"gitId":"samuelim01"},"content":"### Deleting a vendor : `vendor delete`","lastModifiedDate":"2023-10-05"},{"lineNumber":212,"author":{"gitId":"samuelim01"},"content":"Deletes the specified vendor from WedLog.","lastModifiedDate":"2023-10-05"},{"lineNumber":213,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"samuelim01"},"content":"```text","lastModifiedDate":"2023-10-05"},{"lineNumber":215,"author":{"gitId":"samuelim01"},"content":"vendor delete INDEX","lastModifiedDate":"2023-10-05"},{"lineNumber":216,"author":{"gitId":"samuelim01"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"samuelim01"},"content":"Acceptable values for INDEX","lastModifiedDate":"2023-10-05"},{"lineNumber":219,"author":{"gitId":"tllshan"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":222,"author":{"gitId":"tllshan"},"content":"- `vendor list` followed by `vendor delete 2` deletes the 2nd vendor in WedLog.","lastModifiedDate":"2023-10-07"},{"lineNumber":223,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":224,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-05"},{"lineNumber":225,"author":{"gitId":"tllshan"},"content":"- Deletes the person at the specified `INDEX`. ","lastModifiedDate":"2023-10-07"},{"lineNumber":226,"author":{"gitId":"tllshan"},"content":"- The index refers to the index number shown in the displayed vendor list.","lastModifiedDate":"2023-10-07"},{"lineNumber":227,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":228,"author":{"gitId":"samuelim01"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":229,"author":{"gitId":"tllshan"},"content":"- Number out of index range, not a number, or no number: Displays error message \"Please input a positive integer as the index.\"","lastModifiedDate":"2023-10-07"},{"lineNumber":230,"author":{"gitId":"tllshan"},"content":"- Number does not correspond to any vendor: Displays error message \"The number you have provided does not correspond to any vendor.\"","lastModifiedDate":"2023-10-07"},{"lineNumber":231,"author":{"gitId":"tllshan"},"content":"- No input number: Displays error message \"Please input an index\"","lastModifiedDate":"2023-10-07"},{"lineNumber":232,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":233,"author":{"gitId":"keaganpzh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":234,"author":{"gitId":"keaganpzh"},"content":"### Viewing all guests: `guest list`","lastModifiedDate":"2023-10-05"},{"lineNumber":235,"author":{"gitId":"keaganpzh"},"content":"View all guests in a list format.","lastModifiedDate":"2023-10-05"},{"lineNumber":236,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":237,"author":{"gitId":"keaganpzh"},"content":"```text","lastModifiedDate":"2023-10-05"},{"lineNumber":238,"author":{"gitId":"keaganpzh"},"content":"guest list","lastModifiedDate":"2023-10-05"},{"lineNumber":239,"author":{"gitId":"keaganpzh"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":241,"author":{"gitId":"keaganpzh"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-05"},{"lineNumber":242,"author":{"gitId":"keaganpzh"},"content":"- Displays a list of all guest names and their respective indexes. (Example: 1. Marcus Tan, 2. Jane Lim)","lastModifiedDate":"2023-10-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"keaganpzh"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":245,"author":{"gitId":"keaganpzh"},"content":"\u003cbr\u003e(refer to Appendix A: Expected behaviour upon general failure)","lastModifiedDate":"2023-10-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":247,"author":{"gitId":"keaganpzh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":248,"author":{"gitId":"keaganpzh"},"content":"### Viewing a specific guest: `guest view`","lastModifiedDate":"2023-10-06"},{"lineNumber":249,"author":{"gitId":"keaganpzh"},"content":"View a specific guest using a specified index.","lastModifiedDate":"2023-10-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":251,"author":{"gitId":"keaganpzh"},"content":"```text","lastModifiedDate":"2023-10-05"},{"lineNumber":252,"author":{"gitId":"keaganpzh"},"content":"guest view INDEX","lastModifiedDate":"2023-10-05"},{"lineNumber":253,"author":{"gitId":"keaganpzh"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":254,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":255,"author":{"gitId":"keaganpzh"},"content":"Acceptable values for INDEX","lastModifiedDate":"2023-10-05"},{"lineNumber":256,"author":{"gitId":"keaganpzh"},"content":"- A positive integer","lastModifiedDate":"2023-10-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":259,"author":{"gitId":"keaganpzh"},"content":"`guest view 1`","lastModifiedDate":"2023-10-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":261,"author":{"gitId":"keaganpzh"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-05"},{"lineNumber":262,"author":{"gitId":"keaganpzh"},"content":"- Displays a guest and all the information associated with it. (Example: 1. Marcus Tan)","lastModifiedDate":"2023-10-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":264,"author":{"gitId":"keaganpzh"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":265,"author":{"gitId":"keaganpzh"},"content":"- Number out of index range, not a number, or no number: Displays error message “Please input a positive integer as the index.”","lastModifiedDate":"2023-10-05"},{"lineNumber":266,"author":{"gitId":"keaganpzh"},"content":"- Number does not correspond to any guest: Displays error message “The number you have provided does not correspond to any guest.”","lastModifiedDate":"2023-10-05"},{"lineNumber":267,"author":{"gitId":"keaganpzh"},"content":"- No input number: Displays error message “Please input an index”","lastModifiedDate":"2023-10-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":269,"author":{"gitId":"wasjoe1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":270,"author":{"gitId":"keaganpzh"},"content":"### Viewing all vendors: `vendor list`","lastModifiedDate":"2023-10-05"},{"lineNumber":271,"author":{"gitId":"wasjoe1"},"content":"View all vendors in a list format.","lastModifiedDate":"2023-10-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"keaganpzh"},"content":"```text","lastModifiedDate":"2023-10-05"},{"lineNumber":274,"author":{"gitId":"keaganpzh"},"content":"vendor list","lastModifiedDate":"2023-10-05"},{"lineNumber":275,"author":{"gitId":"keaganpzh"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"wasjoe1"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-04"},{"lineNumber":278,"author":{"gitId":"wasjoe1"},"content":"- Displays a list of all vendor names and their respective indexes. (Example: 1. John FLORAL, 2. Sally Anne PHOTOGRAPHER)","lastModifiedDate":"2023-10-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"wasjoe1"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-04"},{"lineNumber":281,"author":{"gitId":"wasjoe1"},"content":"\u003cbr\u003e(refer to Appendix A: Expected behaviour upon general failure)","lastModifiedDate":"2023-10-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"wasjoe1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":284,"author":{"gitId":"keaganpzh"},"content":"### Viewing a specific vendor: `vendor view`","lastModifiedDate":"2023-10-06"},{"lineNumber":285,"author":{"gitId":"wasjoe1"},"content":"View a specific vendor using a specified index.","lastModifiedDate":"2023-10-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"keaganpzh"},"content":"```text","lastModifiedDate":"2023-10-05"},{"lineNumber":288,"author":{"gitId":"keaganpzh"},"content":"vendor view INDEX","lastModifiedDate":"2023-10-05"},{"lineNumber":289,"author":{"gitId":"keaganpzh"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"wasjoe1"},"content":"Acceptable values for INDEX","lastModifiedDate":"2023-10-05"},{"lineNumber":292,"author":{"gitId":"wasjoe1"},"content":"- A positive integer","lastModifiedDate":"2023-10-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"keaganpzh"},"content":"`vendor view 1`","lastModifiedDate":"2023-10-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":297,"author":{"gitId":"wasjoe1"},"content":"Expected behaviour upon success:","lastModifiedDate":"2023-10-04"},{"lineNumber":298,"author":{"gitId":"keaganpzh"},"content":"- Displays a vendor and all the information associated with it. (Example: 1. John FLORAL)","lastModifiedDate":"2023-10-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":300,"author":{"gitId":"wasjoe1"},"content":"Expected behaviour upon failure:","lastModifiedDate":"2023-10-04"},{"lineNumber":301,"author":{"gitId":"wasjoe1"},"content":"- Number out of index range, not a number, or no number: Displays error message “Please input a positive integer as the index.”","lastModifiedDate":"2023-10-04"},{"lineNumber":302,"author":{"gitId":"wasjoe1"},"content":"- Number does not correspond to any vendor: Displays error message “The number you have provided does not correspond to any vendor.”","lastModifiedDate":"2023-10-04"},{"lineNumber":303,"author":{"gitId":"wasjoe1"},"content":"- No input number: Displays error message “Please input an index”","lastModifiedDate":"2023-10-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"samuelim01"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-18"},{"lineNumber":306,"author":{"gitId":"samuelim01"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2023-10-18"},{"lineNumber":307,"author":{"gitId":"samuelim01"},"content":"Exits the program.","lastModifiedDate":"2023-10-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":309,"author":{"gitId":"samuelim01"},"content":"```text","lastModifiedDate":"2023-10-18"},{"lineNumber":310,"author":{"gitId":"samuelim01"},"content":"exit","lastModifiedDate":"2023-10-18"},{"lineNumber":311,"author":{"gitId":"samuelim01"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"keaganpzh"},"content":"| Action                   | Format                                                                                                        | Example                                                                                       |","lastModifiedDate":"2023-10-05"},{"lineNumber":330,"author":{"gitId":"tllshan"},"content":"|--------------------------|:--------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-06"},{"lineNumber":331,"author":{"gitId":"samuelim01"},"content":"| **View help**            | `help`                                                                                                        |                                                                                               |","lastModifiedDate":"2023-10-18"},{"lineNumber":332,"author":{"gitId":"tllshan"},"content":"| **Add a guest**          | `guest add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [r/RSVP_STATUS] [d/DIETARY REQUIREMENTS] [t/TAG...]` | `guest add n/John Doe p/98765432 e/john@doe.com a/Street 456 r/unknown d/vegetarian t/friend` |","lastModifiedDate":"2023-10-06"},{"lineNumber":333,"author":{"gitId":"tllshan"},"content":"| **Delete a guest**       | `guest delete INDEX`                                                                                          | `guest delete 1`                                                                              |","lastModifiedDate":"2023-10-06"},{"lineNumber":334,"author":{"gitId":"samuelim01"},"content":"| **Add a vendor**         | `vendor add n/NAME [p/PHONE_NUMBER]`                                                                          | `vendor add n/Betsy p/91234567`                                                               |","lastModifiedDate":"2023-10-06"},{"lineNumber":335,"author":{"gitId":"samuelim01"},"content":"| **Delete a vendor**      | `vendor delete INDEX`                                                                                         | `vendor delete 2`                                                                             |","lastModifiedDate":"2023-10-06"},{"lineNumber":336,"author":{"gitId":"keaganpzh"},"content":"| **View all guests**      | `guest list`                                                                                                  |                                                                                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"keaganpzh"},"content":"| **View specific guest**  | `guest view INDEX`                                                                                            | `guest view 1`                                                                                |","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"keaganpzh"},"content":"| **View all vendors**     | `vendor list`                                                                                                 |                                                                                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":339,"author":{"gitId":"keaganpzh"},"content":"| **View specific vendor** | `vendor view INDEX`                                                                                           | `vendor view 1`                                                                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":340,"author":{"gitId":"samuelim01"},"content":"| **Exit program**         | `exit`                                                                                                        |","lastModifiedDate":"2023-10-18"},{"lineNumber":341,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"p-xp"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-05"},{"lineNumber":343,"author":{"gitId":"p-xp"},"content":"## Appendix A: Miscellaneous error messages","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"p-xp"},"content":"User input is completely invalid (e.g. `abc` or `vsdf`):","lastModifiedDate":"2023-10-05"},{"lineNumber":346,"author":{"gitId":"p-xp"},"content":"- Display error message \"No such command exists.\"","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"tllshan"},"content":"User input begins with `vendor` or `guest`, but does not include a valid command word (e.g. `vendor abc` or `guest adddd`):","lastModifiedDate":"2023-10-07"},{"lineNumber":349,"author":{"gitId":"p-xp"},"content":"- Display error message \"Please specify a command.\"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"tllshan":97,"samuelim01":38,"p-xp":41,"wasjoe1":17,"keaganpzh":49,"-":107}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eWedLog\u003c/a\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-F11-2/tp/\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"keaganpzh":1,"-":65}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"user -[USER_COLOR]\u003e ui : \"guest delete 1\"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"guest delete 1\")","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteGuest(g)","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":3,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"AddressBook *-right-\u003e \"1\" UniqueGuestList","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"UniqueTagList -[hidden]down- UniqueGuestList","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"UniqueGuestList -right-\u003e Guest","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"Guest -right-|\u003e Person","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"Guest *--\u003e DietaryRequirements","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"Guest *--\u003e RsvpStatus","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":7,"-":17}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"participant \":GuestCommandParser\" as GuestCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"participant \":GuestDeleteCommandParser\" as GuestDeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"participant \"d:GuestDeleteCommand\" as GuestDeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"[-\u003e LogicManager : execute(\"guest delete 1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"guest delete 1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"create GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"AddressBookParser -\u003e GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"activate GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"deactivate GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"AddressBookParser -\u003e GuestCommandParser : parse(\"delete 1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"activate GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"create GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser -\u003e GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"activate GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommandParser --\u003e GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"deactivate GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser -\u003e GuestDeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"activate GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"create GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommandParser -\u003e GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"activate GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommand --\u003e GuestDeleteCommandParser : d","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"deactivate GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommandParser --\u003e GuestCommandParser : d","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"deactivate GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommandParser -[hidden]-\u003e GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"destroy GuestDeleteCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"deactivate GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"destroy GuestCommandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"LogicManager -\u003e GuestDeleteCommand : execute()","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"activate GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"Model --\u003e GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommand -\u003e CommandResult","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"CommandResult --\u003e GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"GuestDeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"deactivate GuestDeleteCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":45,"-":42}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"Class GuestCommmandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"Class VendorCommmandParser","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"AddressBookParser ..\u003e GuestCommmandParser : creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"AddressBookParser ..\u003e VendorCommmandParser : creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"GuestCommmandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"VendorCommmandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"note right of XYZCommand: XYZCommand \u003d GuestAddCommand, \\nVendorListCommand, etc","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":8,"-":44}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"Class UniqueGuestList","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"Class UniqueVendorList","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"Class Guest","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"Class Vendor","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"Class DietaryRequirements","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"Class RsvpStatus","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"AddressBook *--\u003e \"1\" UniqueGuestList","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"AddressBook *--\u003e \"1\" UniqueVendorList","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"UniqueGuestList --\u003e \"*\" Guest","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"UniqueVendorList --\u003e \"*\" Vendor","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"Guest --|\u003e Person","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"Vendor --|\u003e Person","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"Person *--\u003e \"0..1\" Phone","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"Person *--\u003e \"0..1\" Email","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"Person *--\u003e \"0..1\" Address","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"Guest *--\u003e \"1\" DietaryRequirements","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"Guest *--\u003e \"1\" RsvpStatus","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"Email -[hidden]right-\u003e Tag","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"Tag -[hidden]right-\u003e RsvpStatus","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"RsvpStatus -[hidden]right-\u003e DietaryRequirements","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"ModelManager --\u003e \"*\" Guest : filtered list","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"ModelManager --\u003e \"*\" Vendor : filtered list","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":27,"-":42}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"Class GuestCommandParser","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"Class VendorCommandParser","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"AddressBookParser .down.\u003e GuestCommandParser: creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"AddressBookParser .down.\u003e VendorCommandParser: creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"GuestCommandParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"VendorCommandParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"samuelim01":7,"-":37}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"Class JsonAdaptedGuest","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"Class JsonAdaptedVendor","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedGuest","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedVendor","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"JsonAdaptedGuest --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"JsonAdaptedVendor --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samuelim01":6,"-":40}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"  title: \"WedLog\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"# WedLog","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-F11-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S1-CS2103T-F11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F11-2/tp/graph/badge.svg?token\u003d6VNUBS5EZI)](https://codecov.io/gh/AY2324S1-CS2103T-F11-2/tp)","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"**WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding.**","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"While it has a Graphical User Interface (GUI), most of the user interactions occur through the Command Line Interface (CLI).","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"* If you are interested in using WedLog, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"* If you are interested about developing WedLog, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"samuelim01":9,"-":14}},{"path":"docs/team/keaganpzh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"### Project: WedLog","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding. While it has a Graphical User Interface (GUI), most of the user interactions occur through the Command Line Interface (CLI).","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"\u003e To be added soon!","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"#### Code Contributed","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"#### Enhancements Implemented","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"#### Contributions to team tasks","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"#### Reviewing/Mentoring Contributions","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"#### Contributions beyond the Project Team","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"keaganpzh":20}},{"path":"docs/team/p-xp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"# Overview","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding.","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"While it has a Graphical User Interface (GUI), most of the user interactions occur through the Command Line Interface (CLI).","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"# Summary of Contributions","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"## Code contributed","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"TBC.","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"## Enhancements implemented","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"TBC.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"## Contributions to the UG","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"TBC.","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"## Contributions to the DG","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"TBC.","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"## Contributions to team tasks","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"TBC.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"## Reviewing/Mentoring Contributions","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"TBC.","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"## Contributions beyond the Project Team","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"TBC.","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"p-xp":35}},{"path":"docs/team/samuelim01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"  layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"  title: \"Samuel Lim\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"### Project: WedLog","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on [AddressBook - Level 3](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsamuelim01\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"* **Project management**: `to be added soon`","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"* **Enhancements to existing features**: `to be added soon`","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"  * User Guide: `to be added soon`","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"  * Developer Guide: `to be added soon`","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"* **Community**: `to be added soon`","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"* **Tools**: `to be added soon`","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"samuelim01":26}},{"path":"docs/team/tllshan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"  title: \"Shannon Tsou\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"### Project: WedLog","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on [AddressBook - Level 3](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dtllshan\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"* **Project management**: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"* **Enhancements to existing features**: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    * User Guide: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    * Developer Guide: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"* **Community**: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"* **Tools**: `to be added soon`","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"tllshan":26}},{"path":"docs/team/wasjoe1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"# Overview","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"WedLog is a desktop application created for partners getting married that helps them manage the guests and vendors involved in the wedding.","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"While it has a Graphical User Interface (GUI), most of the user interactions occur through the Command Line Interface (CLI).","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"`to be added soon`","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"## Code contributed","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"`to be added soon`","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"## Enhancements implemented","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"`to be added soon`","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"## Contributions to the UG","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"- Contributed to 2 vendor commands in the UG","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"## Contributions to the DG","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"- Contributed to the use cases section of the DG","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"## Contributions to team tasks","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"`to be added soon`","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"## Reviewing/Mentoring Contributions","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"`to be added soon`","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"## Contributions beyond the Project Team","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"`to be added soon`","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"wasjoe1":29}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/wedlog/address/logic/command` directory.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"Create a `RemarkCommandParser` class in the `wedlog.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"samuelim01"},"content":"Create a new `Remark` in `wedlog.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"samuelim01"},"content":"Simply add the following to [`wedlog.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"samuelim01":7,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"The `address` field in `Person` is actually an instance of the `wedlog.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"samuelim01":1,"-":114}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `wedlog.address.logic.Logic`.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"A quick look at the `wedlog.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"samuelim01":2,"-":309}},{"path":"src/main/java/wedlog/address/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"samuelim01":4,"-":69}},{"path":"src/main/java/wedlog/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"samuelim01":2,"-":39}},{"path":"src/main/java/wedlog/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.Config;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.Version;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.LogicManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.AddressBookStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.Storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.StorageManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.ui.Ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.ui.UiManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 0, false);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing WedLog ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"        logger.info(\"Starting WedLog \" + MainApp.VERSION);","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"keaganpzh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping WedLog ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":25,"keaganpzh":3,"-":158}},{"path":"src/main/java/wedlog/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"-":64}},{"path":"src/main/java/wedlog/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"    private static final double DEFAULT_WIDTH \u003d 1200;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"keaganpzh":1,"-":79}},{"path":"src/main/java/wedlog/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":105}},{"path":"src/main/java/wedlog/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":120}},{"path":"src/main/java/wedlog/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core.index;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"samuelim01":2,"-":67}},{"path":"src/main/java/wedlog/address/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"samuelim01":1,"-":10}},{"path":"src/main/java/wedlog/address/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":1,"-":20}},{"path":"src/main/java/wedlog/address/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":2,"-":40}},{"path":"src/main/java/wedlog/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":1,"-":34}},{"path":"src/main/java/wedlog/address/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.Config;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":3,"-":20}},{"path":"src/main/java/wedlog/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":82}},{"path":"src/main/java/wedlog/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":3,"-":141}},{"path":"src/main/java/wedlog/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"-":66}},{"path":"src/main/java/wedlog/address/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"samuelim01":1,"-":52}},{"path":"src/main/java/wedlog/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"     * @see wedlog.address.model.Model#getAddressBook()","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    /** Returns an unmodifiable view of the filtered list of guests */","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"    ObservableList\u003cGuest\u003e getFilteredGuestList();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    /** Returns an unmodifiable view of the filtered list of vendors */","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    ObservableList\u003cVendor\u003e getFilteredVendorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"     * Returns a {@code RsvpStatistics} with information about the RSVP statuses of guests.","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"     * @return {@code RsvpStatistics}","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"    RsvpStatistics getRsvpStatistics();","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samuelim01":8,"keaganpzh":15,"-":42}},{"path":"src/main/java/wedlog/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.Storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"    public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"        return model.getFilteredGuestList();","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"    public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"keaganpzh"},"content":"        return model.getFilteredVendorList();","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatistics getRsvpStatistics() {","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"keaganpzh"},"content":"        return model.getRsvpStatistics();","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"samuelim01":12,"keaganpzh":19,"-":76}},{"path":"src/main/java/wedlog/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_INVALID_GUEST_DISPLAYED_INDEX \u003d \"The guest index provided is invalid\";","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX \u003d \"The vendor index provided is invalid\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"        final DisplayBuilder builder \u003d new DisplayBuilder(person.getName().fullName);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        builder.add(\"Phone\", person.getPhone())","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"                .add(\"Email\", person.getEmail())","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"                .add(\"Address\", person.getAddress())","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"                .addTags(person.getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"     * Formats the {@code Guest} for display to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    public static String format(Guest guest) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        final DisplayBuilder builder \u003d new DisplayBuilder(guest.getName().fullName);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        builder.add(\"Phone\", guest.getPhone())","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"                .add(\"Email\", guest.getEmail())","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"                .add(\"Address\", guest.getAddress())","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"                .add(\"RSVP Status\", guest.getRsvpStatus())","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"                .add(\"Dietary Requirements\", guest.getDietaryRequirements())","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"                .addTags(guest.getTags());","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"    public static String format(Vendor vendor) {","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        final DisplayBuilder builder \u003d new DisplayBuilder(vendor.getName().fullName);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        builder.add(\"Phone\", vendor.getPhone())","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"                .add(\"Email\", vendor.getEmail())","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"                .add(\"Address\", vendor.getAddress())","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"                .addTags(vendor.getTags());","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"    private static class DisplayBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \":\";","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        DisplayBuilder(String objectName) {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"            stringBuilder.append(objectName);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        public DisplayBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"            if (fieldValue \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"                return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"            } else if (fieldValue.equals(null)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"                // Prevents null dietary requirements from being added","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"                return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"            stringBuilder.append(FIELD_SEPARATOR)","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"                    .append(fieldName)","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"                    .append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"            return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"        private DisplayBuilder addTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"            stringBuilder.append(FIELD_SEPARATOR).append(\"Tags\").append(FIELD_NAME_VALUE_SEPARATOR);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"            tags.forEach(stringBuilder::append);","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"            return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tllshan":2,"samuelim01":43,"p-xp":30,"-":38}},{"path":"src/main/java/wedlog/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":3,"-":20}},{"path":"src/main/java/wedlog/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":3,"-":17}},{"path":"src/main/java/wedlog/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":80}},{"path":"src/main/java/wedlog/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":7,"-":62}},{"path":"src/main/java/wedlog/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"samuelim01":19,"-":223}},{"path":"src/main/java/wedlog/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"samuelim01":2,"-":17}},{"path":"src/main/java/wedlog/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"samuelim01":5,"-":53}},{"path":"src/main/java/wedlog/address/logic/commands/GuestAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.GuestCommandParser.GUEST_COMMAND_WORD;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":" * Adds a Guest to WedLog.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"public class GuestAddCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_USAGE \u003d GUEST_COMMAND_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"            + \": Adds a guest to the address book. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"            + \"Compulsory Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"            + \"Optional Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"            + \"Example: \" + GUEST_COMMAND_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"            + PREFIX_RSVP + \"yes \"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"            + PREFIX_DIETARY + \"vegetarian \"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"            + PREFIX_TAG + \"friends\";","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New guest added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"This guest already exists in WedLog.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"    private final Guest toAdd;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"     * Creates a GuestAddCommand to add the specified {@code Guest}","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    public GuestAddCommand(Guest guest) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"        requireNonNull(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        this.toAdd \u003d guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        if (model.hasGuest(toAdd)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        model.addGuest(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"        // checks that Object is a GuestAddCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"        if (!(other instanceof GuestAddCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand otherGuestAddCommand \u003d (GuestAddCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        return toAdd.equals(otherGuestAddCommand.toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"                .add(\"toAddGuest\", toAdd)","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":3,"samuelim01":5,"p-xp":66,"wasjoe1":15}},{"path":"src/main/java/wedlog/address/logic/commands/GuestDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.GuestCommandParser.GUEST_COMMAND_WORD;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * Deletes a Guest from the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"public class GuestDeleteCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_USAGE \u003d GUEST_COMMAND_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"            + \": Deletes the guest identified by the index number used in the displayed guest list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            + \"Example: \" + GUEST_COMMAND_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_DELETE_GUEST_SUCCESS \u003d \"Deleted Guest: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    public GuestDeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        List\u003cGuest\u003e lastShownGuestList \u003d model.getFilteredGuestList();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownGuestList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        Guest guestToDelete \u003d lastShownGuestList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"        model.deleteGuest(guestToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GUEST_SUCCESS, Messages.format(guestToDelete)));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        if (!(other instanceof GuestDeleteCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand otherGuestDeleteCommand \u003d (GuestDeleteCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        return targetIndex.equals(otherGuestDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":45,"samuelim01":6,"wasjoe1":18}},{"path":"src/main/java/wedlog/address/logic/commands/GuestListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * Lists all Guests in the address book to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"public class GuestListCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all Guests\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_PERSONS); // predicate declared in Model.java class","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":2,"wasjoe1":20}},{"path":"src/main/java/wedlog/address/logic/commands/GuestViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * View\u0027s a specific Guest in the address book to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class GuestViewCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"            + \": Views the Guest identified by the index number used in the displayed guest list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public GuestViewCommand(Index index) {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        // temporary empty constructor","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"        throw new CommandException(\"Command not created yet, wait for evolve for better testing\");","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":18}},{"path":"src/main/java/wedlog/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":19}},{"path":"src/main/java/wedlog/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":3,"-":20}},{"path":"src/main/java/wedlog/address/logic/commands/VendorAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.VendorCommandParser.VENDOR_COMMAND_WORD;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":" * Adds a Vendor to Wedlog.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"public class VendorAddCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_USAGE \u003d VENDOR_COMMAND_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"            + \": Adds a vendor to the address book. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"            + \"Compulsory Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"            + \"Optional Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"            + \"Example: \" + VENDOR_COMMAND_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"            + PREFIX_TAG + \"florist\";","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New vendor added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    public static final String MESSAGE_DUPLICATE_VENDOR \u003d \"This vendor already exists in WedLog.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    private final Vendor toAdd;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"     * Adds a Vendor to WedLog.","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    public VendorAddCommand(Vendor vendor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        requireNonNull(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        this.toAdd \u003d vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"        if (model.hasVendor(toAdd)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        model.addVendor(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        // checks that Object is a VendorAddCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        if (!(other instanceof VendorAddCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand otherCommand \u003d (VendorAddCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        return toAdd.equals(otherCommand.toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"                .add(\"toAddVendor\", toAdd)","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":3,"samuelim01":5,"p-xp":61,"wasjoe1":15}},{"path":"src/main/java/wedlog/address/logic/commands/VendorDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.VendorCommandParser.VENDOR_COMMAND_WORD;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * Deletes a Vendor from the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"public class VendorDeleteCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    public static final String MESSAGE_USAGE \u003d VENDOR_COMMAND_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"            + \": Deletes the vendor identified by the index number used in the displayed vendor list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            + \"Example: \" + VENDOR_COMMAND_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_DELETE_VENDOR_SUCCESS \u003d \"Deleted Vendor: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    public VendorDeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        List\u003cVendor\u003e lastShownVendorList \u003d model.getFilteredVendorList();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownVendorList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        Vendor vendorToDelete \u003d lastShownVendorList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"        model.deleteVendor(vendorToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_VENDOR_SUCCESS, Messages.format(vendorToDelete)));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        if (!(other instanceof VendorDeleteCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand otherVendorDeleteCommand \u003d (VendorDeleteCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        return targetIndex.equals(otherVendorDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":47,"samuelim01":6,"wasjoe1":16}},{"path":"src/main/java/wedlog/address/logic/commands/VendorListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * Lists all Vendors in the address book to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"public class VendorListCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all Vendors\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        model.updateFilteredVendorList(PREDICATE_SHOW_ALL_PERSONS); // predicate declared in Model.java class","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":2,"wasjoe1":20}},{"path":"src/main/java/wedlog/address/logic/commands/VendorViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * View\u0027s a specific vendor in the address book to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class VendorViewCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"            + \": Views the Vendor identified by the index number used in the displayed vendor list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    public VendorViewCommand(Index index) {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"        // temporary empty constructor","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        throw new CommandException(\"Command not created yet, wait for evolve for better testing\");","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":19}},{"path":"src/main/java/wedlog/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"samuelim01":1,"-":16}},{"path":"src/main/java/wedlog/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * Parses user input into guest and vendor commands for execution.","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * Old commands are parsed as well to keep the program intact.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim()); // trims the back and end of the string","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"        // old switch commands are included for now to not break the program","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"        // change it from here to split between vendor","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"        case \"vendor\": // there shouldn\u0027t be a need to create an entire new vendor/guest command class","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"            return new VendorCommandParser().parseCommand(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"        case \"guest\":","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"            return new GuestCommandParser().parseCommand(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":13,"wasjoe1":9,"-":65}},{"path":"src/main/java/wedlog/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        // creates an ArrayList of all the values inside that prefix","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"samuelim01":3,"wasjoe1":1,"-":75}},{"path":"src/main/java/wedlog/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"samuelim01":1,"-":147}},{"path":"src/main/java/wedlog/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    public static final Prefix PREFIX_RSVP \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"    public static final Prefix PREFIX_DIETARY \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"samuelim01":1,"keaganpzh":2,"-":13}},{"path":"src/main/java/wedlog/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"samuelim01":5,"-":24}},{"path":"src/main/java/wedlog/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"samuelim01":12,"-":72}},{"path":"src/main/java/wedlog/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"samuelim01":5,"-":28}},{"path":"src/main/java/wedlog/address/logic/parser/GuestAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestAddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.DietaryRequirements;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":" * Parses user input for GuestAdd commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"public class GuestAddCommandParser implements Parser\u003cGuestAddCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the GuestAddCommand","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * and returns an GuestAddCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    public GuestAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"                        PREFIX_RSVP, PREFIX_DIETARY, PREFIX_TAG);","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        // check compulsory fields; only name is compulsory","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"            // message usage is a generic message about how to use the add command for guests","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        // throws parse exception if name is inputted twice","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"        // marks the optional fields null if they are empty","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        Phone phone \u003d argMultimap.getValue(PREFIX_PHONE).isEmpty()","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"                ? null","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"                : ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"        Email email \u003d argMultimap.getValue(PREFIX_EMAIL).isEmpty()","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"                ? null","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"                : ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        Address address \u003d argMultimap.getValue(PREFIX_ADDRESS).isEmpty()","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"                ? null","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"                : ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        RsvpStatus rsvpStatus \u003d argMultimap.getValue(PREFIX_RSVP).isEmpty()","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"                ? RsvpStatus.unknown() // no input defaults to Status stored as unknown","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"                : ParserUtil.parseRsvp(argMultimap.getValue(PREFIX_RSVP).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        DietaryRequirements dietaryRequirements \u003d argMultimap.getValue(PREFIX_DIETARY).isEmpty()","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"                ? new DietaryRequirements(null)","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"                : ParserUtil.parseDietary(argMultimap.getValue(PREFIX_DIETARY).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        Guest guest \u003d new Guest(name, phone, email, address, rsvpStatus, dietaryRequirements, tagList);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        return new GuestAddCommand(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":18,"p-xp":13,"wasjoe1":49}},{"path":"src/main/java/wedlog/address/logic/parser/GuestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestAddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestViewCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for Guest commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"public class GuestCommandParser {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"    public static final String GUEST_COMMAND_WORD \u003d \"guest\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim()); // trims the back and end of the string","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        // any way the \"vendor\" command is removed, should have the same format as previous","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"        case GuestAddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"            return new GuestAddCommandParser().parse(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        case GuestDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"            return new GuestDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        case GuestListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"            return new GuestListCommand();","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        case GuestViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"            return new GuestViewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"        default:","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":11,"p-xp":2,"wasjoe1":54}},{"path":"src/main/java/wedlog/address/logic/parser/GuestDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for GuestDelete commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"public class GuestDeleteCommandParser implements Parser\u003cGuestDeleteCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    public GuestDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"            return new GuestDeleteCommand(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"tllshan":1,"samuelim01":5,"wasjoe1":22}},{"path":"src/main/java/wedlog/address/logic/parser/GuestViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestViewCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for GuestView commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"public class GuestViewCommandParser implements Parser\u003cGuestViewCommand\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    public GuestViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"            return new GuestViewCommand(index);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":22}},{"path":"src/main/java/wedlog/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"samuelim01":3,"-":13}},{"path":"src/main/java/wedlog/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.DietaryRequirements;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"     * Parses a {@code String rsvp} into a {@code RsvpStatus}.","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the given {@code rsvp} is invalid.","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"    public static RsvpStatus parseRsvp(String rsvp) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        // null inputs and empty string defaults to unknown status","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        if (rsvp \u003d\u003d null || rsvp \u003d\u003d \"\") {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"            return RsvpStatus.unknown();","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        requireNonNull(rsvp);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"wasjoe1"},"content":"        String trimmedRsvp \u003d rsvp.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        // checks that value is either \"yes\", \"no\", or \"unknown\"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"wasjoe1"},"content":"        if (!RsvpStatus.isValidRsvpStatus(trimmedRsvp)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(RsvpStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"wasjoe1"},"content":"        return new RsvpStatus(trimmedRsvp);","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"     * Parses a {@code String dietaryRequirements} into a {@code DietaryRequirements}.","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"wasjoe1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the given {@code rsvp} is invalid.","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"wasjoe1"},"content":"    public static DietaryRequirements parseDietary(String dietaryRequirements) {","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        if (dietaryRequirements \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"            return new DietaryRequirements(null);","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"        String trimmedDietaryRequirements \u003d dietaryRequirements.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"wasjoe1"},"content":"        return new DietaryRequirements(trimmedDietaryRequirements);","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"wasjoe1"},"content":"            tagSet.add(parseTag(tagName)); // takes in a list of strings \u0026 parse then put into a hashset","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"samuelim01":15,"p-xp":11,"wasjoe1":24,"-":114}},{"path":"src/main/java/wedlog/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"samuelim01":1,"-":41}},{"path":"src/main/java/wedlog/address/logic/parser/VendorAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorAddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for VendorAdd commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"public class VendorAddCommandParser implements Parser\u003cVendorAddCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the VendorAddCommand","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"     * and returns an VendorAddCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    public VendorAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"        // check compulsory fields; only name is compulsory","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME); // throws parse exception if have duplicates","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        Phone phone \u003d argMultimap.getValue(PREFIX_PHONE).isEmpty()","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"                ? null","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"                : ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        Email email \u003d argMultimap.getValue(PREFIX_EMAIL).isEmpty()","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"                ? null","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"                : ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"        Address address \u003d argMultimap.getValue(PREFIX_ADDRESS).isEmpty()","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"                ? null","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"                : ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        Vendor vendor \u003d new Vendor(name, phone, email, address, tagList);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        return new VendorAddCommand(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":11,"p-xp":15,"wasjoe1":41}},{"path":"src/main/java/wedlog/address/logic/parser/VendorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorAddCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorViewCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for Vendor commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"public class VendorCommandParser {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    public static final String VENDOR_COMMAND_WORD \u003d \"vendor\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim()); // trims the back and end of the string","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        // any way the \"vendor command is removed, should have the same format as previous\"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"        case VendorAddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"            return new VendorAddCommandParser().parse(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        case VendorDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"            return new VendorDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        case VendorListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"            return new VendorListCommand();","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        case VendorViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"            return new VendorViewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"        default:","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"tllshan":1,"samuelim01":11,"wasjoe1":55}},{"path":"src/main/java/wedlog/address/logic/parser/VendorDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for VendorDelete commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"public class VendorDeleteCommandParser implements Parser\u003cVendorDeleteCommand\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    public VendorDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"            return new VendorDeleteCommand(index);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":22}},{"path":"src/main/java/wedlog/address/logic/parser/VendorViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorViewCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * Parses user input specifically for VendorView commands.","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"public class VendorViewCommandParser implements Parser\u003cVendorViewCommand\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    public VendorViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"            return new VendorViewCommand(index);","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":23}},{"path":"src/main/java/wedlog/address/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"samuelim01":2,"-":15}},{"path":"src/main/java/wedlog/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.UniqueGuestList;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.UniquePersonList;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.UniqueVendorList;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    private final UniqueGuestList guests;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private final UniqueVendorList vendors;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"        guests \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        vendors \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"     * Replaces the contents of the guest list with {@code guests}.","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"     * {@code guests} must not contain duplicate guests.","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    public void setGuests(List\u003cGuest\u003e guests) {","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        this.guests.setGuests(guests);","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"     * Replaces the contents of the vendor list with {@code vendors}.","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"     * {@code vendors} must not contain duplicate vendors.","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    public void setVendors(List\u003cVendor\u003e vendors) {","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"        this.vendors.setVendors(vendors);","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        setGuests(newData.getGuestList());","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        setVendors(newData.getVendorList());","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"    //// guest-level operations","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"     * Returns true if a guest with the same identity as {@code guest} exists in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"    public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"        requireNonNull(guest);","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"        return guests.contains(guest);","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"     * Adds a guest to the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"     * The guest must not already exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"    public void addGuest(Guest g) {","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"        guests.add(g);","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"     * Replaces the given guest {@code target} in the list with {@code editedGuest}.","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"     * The guest identity of {@code editedGuest} must not be the same as another existing guest in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"        requireNonNull(editedGuest);","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"        guests.setGuest(target, editedGuest);","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"    public void removeGuest(Guest key) {","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"        guests.remove(key);","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"keaganpzh"},"content":"     * Returns a {@code RsvpStatistics} with information on the RSVP statuses of guests","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"keaganpzh"},"content":"     * @return {@code RsvpStatistics}","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatistics getRsvpStatistics() {","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"keaganpzh"},"content":"        return new RsvpStatistics(guests.getNumGuestsRsvpYes(), guests.getNumGuestsRsvpNo(),","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"keaganpzh"},"content":"                guests.getNumGuestsRsvpUnknown());","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"    //// vendor-level operations","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"     * Returns true if a vendor with the same identity as {@code vendor} exists in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":176,"author":{"gitId":"samuelim01"},"content":"    public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(vendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"        return vendors.contains(vendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"     * Adds a vendor to the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"     * The vendor must not already exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"    public void addVendor(Vendor v) {","lastModifiedDate":"2023-10-06"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"        vendors.add(v);","lastModifiedDate":"2023-10-06"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":189,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"     * Replaces the given vendor {@code target} in the list with {@code editedVendor}.","lastModifiedDate":"2023-10-06"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"     * The vendor identity of {@code editedVendor} must not be the same as another existing vendor in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"    public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(editedVendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"        vendors.setVendor(target, editedVendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-06"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"    public void removeVendor(Vendor key) {","lastModifiedDate":"2023-10-06"},{"lineNumber":205,"author":{"gitId":"samuelim01"},"content":"        vendors.remove(key);","lastModifiedDate":"2023-10-06"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":207,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"p-xp"},"content":"                .add(\"guests\", guests)","lastModifiedDate":"2023-10-07"},{"lineNumber":215,"author":{"gitId":"samuelim01"},"content":"                .add(\"vendors\", vendors)","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":224,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":225,"author":{"gitId":"p-xp"},"content":"    public ObservableList\u003cGuest\u003e getGuestList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":226,"author":{"gitId":"p-xp"},"content":"        return guests.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-07"},{"lineNumber":227,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":228,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":229,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":230,"author":{"gitId":"samuelim01"},"content":"    public ObservableList\u003cVendor\u003e getVendorList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":231,"author":{"gitId":"samuelim01"},"content":"        return vendors.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-06"},{"lineNumber":232,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":233,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":246,"author":{"gitId":"p-xp"},"content":"        return persons.equals(otherAddressBook.persons) \u0026\u0026 guests.equals(otherAddressBook.guests)","lastModifiedDate":"2023-10-11"},{"lineNumber":247,"author":{"gitId":"p-xp"},"content":"                \u0026\u0026 vendors.equals(otherAddressBook.vendors);","lastModifiedDate":"2023-10-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":252,"author":{"gitId":"p-xp"},"content":"        return Objects.hash(persons, guests, vendors);","lastModifiedDate":"2023-10-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":62,"p-xp":58,"keaganpzh":9,"-":125}},{"path":"src/main/java/wedlog/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"     * Returns true if a guest with the same identity as {@code guest} exists in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"    boolean hasGuest(Guest guest);","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"     * Deletes the given guest.","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"     * The guest must exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"    void deleteGuest(Guest target);","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"     * Adds the given guest.","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"     * {@code guest} must not already exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"    void addGuest(Guest guest);","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"     * Replaces the given guest {@code target} with {@code editedGuest}.","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"     * The guest identity of {@code editedGuest} must not be the same as another existing guest in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    void setGuest(Guest target, Guest editedGuest);","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"keaganpzh"},"content":"     * Returns a {@code RsvpStatistics} with information of the RSVP statuses of guests in {@code AddressBook}.","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"keaganpzh"},"content":"     * @return {@code RsvpStatistics} object.","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"keaganpzh"},"content":"    RsvpStatistics getRsvpStatistics();","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"     * Returns true if a vendor with the same identity as {@code vendor} exists in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"    boolean hasVendor(Vendor vendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"     * Deletes the given vendor.","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"     * The vendor must exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"    void deleteVendor(Vendor target);","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"     * Adds the given vendor.","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"     * {@code vendor} must not already exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"    void addVendor(Vendor vendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"     * Replaces the given vendor {@code target} with {@code editedVendor}.","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"     * The vendor identity of {@code editedVendor} must not be the same as another existing vendor in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"    void setVendor(Vendor target, Vendor editedVendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"    /** Returns an unmodifiable view of the filtered guest list */","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"    ObservableList\u003cGuest\u003e getFilteredGuestList();","lastModifiedDate":"2023-10-11"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"     * Updates the filter of the filtered guest list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-11"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"    void updateFilteredGuestList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"    /** Returns an unmodifiable view of the filtered vendor list */","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"    ObservableList\u003cVendor\u003e getFilteredVendorList();","lastModifiedDate":"2023-10-11"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"     * Updates the filter of the filtered vendor list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"    void updateFilteredVendorList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samuelim01":71,"keaganpzh":6,"-":84}},{"path":"src/main/java/wedlog/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    private final FilteredList\u003cGuest\u003e filteredGuests;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    private final FilteredList\u003cVendor\u003e filteredVendors;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        filteredGuests \u003d new FilteredList\u003c\u003e(this.addressBook.getGuestList());","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        filteredVendors \u003d new FilteredList\u003c\u003e(this.addressBook.getVendorList());","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"    public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(guest);","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        return addressBook.hasGuest(guest);","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"    public void deleteGuest(Guest target) {","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        addressBook.removeGuest(target);","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"    public void addGuest(Guest guest) {","lastModifiedDate":"2023-10-11"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"        addressBook.addGuest(guest);","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        updateFilteredGuestList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2023-10-11"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"        requireAllNonNull(target, editedGuest);","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        addressBook.setGuest(target, editedGuest);","lastModifiedDate":"2023-10-11"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatistics getRsvpStatistics() {","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"keaganpzh"},"content":"        return addressBook.getRsvpStatistics();","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"    public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-11"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(vendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"        return addressBook.hasVendor(vendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"    public void deleteVendor(Vendor target) {","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"        addressBook.removeVendor(target);","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"    public void addVendor(Vendor vendor) {","lastModifiedDate":"2023-10-11"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"        addressBook.addVendor(vendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"        updateFilteredVendorList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"    public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2023-10-11"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"        requireAllNonNull(target, editedVendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"        addressBook.setVendor(target, editedVendor);","lastModifiedDate":"2023-10-11"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"     * Returns an unmodifiable view of the list of {@code Guest} backed by the internal list of","lastModifiedDate":"2023-10-11"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-11"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"    public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"        return filteredGuests;","lastModifiedDate":"2023-10-11"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"    public void updateFilteredGuestList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"        filteredGuests.setPredicate(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":205,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"     * Returns an unmodifiable view of the list of {@code Vendor} backed by the internal list of","lastModifiedDate":"2023-10-11"},{"lineNumber":207,"author":{"gitId":"samuelim01"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-11"},{"lineNumber":208,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":209,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":210,"author":{"gitId":"samuelim01"},"content":"    public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":211,"author":{"gitId":"samuelim01"},"content":"        return filteredVendors;","lastModifiedDate":"2023-10-11"},{"lineNumber":212,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":213,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":214,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":215,"author":{"gitId":"samuelim01"},"content":"    public void updateFilteredVendorList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":216,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":217,"author":{"gitId":"samuelim01"},"content":"        filteredVendors.setPredicate(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":218,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":219,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":234,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-11"},{"lineNumber":235,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 filteredGuests.equals(otherModelManager.filteredGuests)","lastModifiedDate":"2023-10-11"},{"lineNumber":236,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 filteredVendors.equals(otherModelManager.filteredVendors);","lastModifiedDate":"2023-10-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":92,"keaganpzh":5,"-":142}},{"path":"src/main/java/wedlog/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"     * Returns an unmodifiable view of the guest list.","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"     * This list will not contain any duplicate guests.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"    ObservableList\u003cGuest\u003e getGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"     * Returns an unmodifiable view of the vendors list.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"     * This list will not contain any duplicate vendors.","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    ObservableList\u003cVendor\u003e getVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":9,"p-xp":6,"-":15}},{"path":"src/main/java/wedlog/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"samuelim01":2,"-":14}},{"path":"src/main/java/wedlog/address/model/RsvpStatistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates the RSVP statistics of the guests.","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"public class RsvpStatistics {","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"    private final int numGuestsTotal;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"    private final int numGuestsRsvpYes;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"    private final int numGuestsRsvpNo;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"    private final int numGuestsRsvpUnknown;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"    private final int percentGuestsRsvpYes;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"    private final int percentGuestsRsvpNo;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    private final int percentGuestsRsvpUnknown;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for a {@code RsvpStatistics} object.","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"     * @param numGuestsRsvpYes The number of guests with RSVP status \"yes\".","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"     * @param numGuestsRsvpNo The number of guests with RSVP status \"no\".","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"     * @param numGuestsRsvpUnknown The number of guests with RSVP status \"unknown\".","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatistics(int numGuestsRsvpYes, int numGuestsRsvpNo, int numGuestsRsvpUnknown) {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"        this.numGuestsRsvpYes \u003d numGuestsRsvpYes;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"        this.numGuestsRsvpNo \u003d numGuestsRsvpNo;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"        this.numGuestsRsvpUnknown \u003d numGuestsRsvpUnknown;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"        this.numGuestsTotal \u003d numGuestsRsvpYes + numGuestsRsvpNo + numGuestsRsvpUnknown;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"        this.percentGuestsRsvpYes \u003d (int) Math.round((double) numGuestsRsvpYes / numGuestsTotal * 100);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"        this.percentGuestsRsvpNo \u003d (int) Math.round((double) numGuestsRsvpNo / numGuestsTotal * 100);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        this.percentGuestsRsvpUnknown \u003d (int) Math.round((double) numGuestsRsvpUnknown / numGuestsTotal * 100);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"    public int getPercentGuestsRsvpYes() {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"        return percentGuestsRsvpYes;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    public int getPercentGuestsRsvpNo() {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        return percentGuestsRsvpNo;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    public int getPercentGuestsRsvpUnknown() {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"        return percentGuestsRsvpUnknown;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"        if (!(other instanceof RsvpStatistics)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"        RsvpStatistics otherRsvpStatistics \u003d (RsvpStatistics) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"        return this.numGuestsTotal \u003d\u003d otherRsvpStatistics.numGuestsTotal","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"                \u0026\u0026 this.numGuestsRsvpYes \u003d\u003d otherRsvpStatistics.numGuestsRsvpYes","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"                \u0026\u0026 this.numGuestsRsvpNo \u003d\u003d otherRsvpStatistics.numGuestsRsvpNo","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"                \u0026\u0026 this.numGuestsRsvpUnknown \u003d\u003d otherRsvpStatistics.numGuestsRsvpUnknown","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"                \u0026\u0026 this.percentGuestsRsvpYes \u003d\u003d otherRsvpStatistics.percentGuestsRsvpYes","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"                \u0026\u0026 this.percentGuestsRsvpNo \u003d\u003d otherRsvpStatistics.percentGuestsRsvpNo","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"                \u0026\u0026 this.percentGuestsRsvpUnknown \u003d\u003d otherRsvpStatistics.percentGuestsRsvpUnknown;","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"keaganpzh":63}},{"path":"src/main/java/wedlog/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"-":86}},{"path":"src/main/java/wedlog/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":63}},{"path":"src/main/java/wedlog/address/model/person/DietaryRequirements.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":" * Represents a Guest\u0027s dietary requirements in WedLog.","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"public class DietaryRequirements {","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"     * Dietary requirement status can only be one of the following values.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"    public enum Status {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"        NONE, NULL, PRESENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    public final String value;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"    public final Status status;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"     * Constructs a {@code DietaryRequirements}.","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     * @param remark A dietary requirement.","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"    public DietaryRequirements(String remark) {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"            status \u003d Status.NULL;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"            value \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"            return;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"        value \u003d remark.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"        if (value.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"            status \u003d Status.NONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"            status \u003d Status.PRESENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"     * Returns true if there are no dietary requirements.","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"    public boolean isNoneDietaryRequirement() {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        return status \u003d\u003d Status.NONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"     * Returns true if dietary requirements are unspecified.","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"    public boolean isNullDietaryRequirement() {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        return status \u003d\u003d Status.NULL;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"        return value;","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        // Dietary Requirement where Status.NULL is equal to null object","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        // See Messages.DisplayBuilder#add(String, Object) for usage","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"            return this.status.equals(Status.NULL);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        if (!(other instanceof DietaryRequirements)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements otherDr \u003d (DietaryRequirements) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        return status.equals(otherDr.status) \u0026\u0026 Objects.equals(value, otherDr.value);","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"keaganpzh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"samuelim01":31,"p-xp":14,"wasjoe1":11,"keaganpzh":32}},{"path":"src/main/java/wedlog/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":77}},{"path":"src/main/java/wedlog/address/model/person/Guest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":" * Represents a Guest in the address book. Inherits from Person.","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"public class Guest extends Person {","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    // Additional data fields","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    private final RsvpStatus rsvpStatus;","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"    private final DietaryRequirements dietaryRequirements;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"     * Name, rsvp status, dietary requirements and tags must be present and not null.","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    public Guest(Name name, Phone phone, Email email, Address address, RsvpStatus rsvpStatus,","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"                 DietaryRequirements dietaryRequirements, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"        requireAllNonNull(rsvpStatus);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        this.rsvpStatus \u003d rsvpStatus;","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"        this.dietaryRequirements \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"                Objects.requireNonNullElseGet(dietaryRequirements, () -\u003e new DietaryRequirements(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatus getRsvpStatus() {","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"        return rsvpStatus;","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    public DietaryRequirements getDietaryRequirements() {","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"        return dietaryRequirements;","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"     * Returns true if both guests have the same identity and data fields.","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"     * This defines a stronger notion of equality between two guests.","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"        if (!(other instanceof Guest)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"        Guest otherGuest \u003d (Guest) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"        return super.equals(otherGuest)","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 rsvpStatus.equals(otherGuest.rsvpStatus)","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 dietaryRequirements.equals(otherGuest.dietaryRequirements);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getAddress(), getTags(),","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"                rsvpStatus, dietaryRequirements);","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"keaganpzh"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"                .add(\"email\", getEmail())","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"                .add(\"address\", getAddress())","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"                .add(\"rsvpStatus\", getRsvpStatus())","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"                .add(\"dietaryRequirements\", getDietaryRequirements())","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"                .add(\"tags\", getTags())","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"                .toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"samuelim01":8,"keaganpzh":73}},{"path":"src/main/java/wedlog/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":65}},{"path":"src/main/java/wedlog/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"samuelim01":3,"-":41}},{"path":"src/main/java/wedlog/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"     * Name and tags must be present and not null.","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"        requireAllNonNull(name, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 Objects.equals(phone, otherPerson.phone)","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 Objects.equals(email, otherPerson.email)","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"                \u0026\u0026 Objects.equals(address, otherPerson.address)","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":9,"-":108}},{"path":"src/main/java/wedlog/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":59}},{"path":"src/main/java/wedlog/address/model/person/RsvpStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":" * Represents a Guest\u0027s RsvpStatus status in the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRsvpStatus(String)}","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"public class RsvpStatus {","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"            \"RsvpStatus Status should only have one of three values. yes, no, or unknown.\";","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     * RSVP status can only be one of the following values.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"    public enum Status {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"        YES, NO, UNKNOWN","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    /*","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     * RSVP status should only consist of yes, no, or unknown values. Not case-sensitive.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?i)(yes|no|unknown)$\";","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"    public static final String RSVP_YES_REGEX \u003d \"^(?i)(yes)$\";","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    public static final String RSVP_NO_REGEX \u003d \"^(?i)(no)$\";","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    public final Status status;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    /*","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"     * Value is stored in lower case.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * Possible values are: \"yes\", \"no\", \"unknown\".","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    public final String value;","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"     * Constructs a {@code RsvpStatus}.","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"     * @param rsvp A valid RSVP status.","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    public RsvpStatus(String rsvp) {","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        requireNonNull(rsvp);","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"        checkArgument(isValidRsvpStatus(rsvp), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        this.status \u003d rsvp.matches(RSVP_YES_REGEX)","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"            ? Status.YES","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"            : rsvp.matches(RSVP_NO_REGEX)","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"            ? Status.NO","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"            : Status.UNKNOWN;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"        this.value \u003d rsvp.toLowerCase();","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"     * Constructs a {@code RsvpStatus} with no value and","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"     * defaults to unknown.","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    private RsvpStatus() {","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        this.status \u003d Status.UNKNOWN;","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"        this.value \u003d \"unknown\";","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"    public static RsvpStatus unknown() {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        return new RsvpStatus();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"keaganpzh"},"content":"     * Returns true if a given string is a valid RSVP status.","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"    public static boolean isValidRsvpStatus(String test) {","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"keaganpzh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"        return this.value;","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"keaganpzh"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"keaganpzh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"        if (!(other instanceof RsvpStatus)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"keaganpzh"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"keaganpzh"},"content":"        RsvpStatus otherName \u003d (RsvpStatus) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        return status \u003d\u003d (otherName.status);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"samuelim01":22,"wasjoe1":1,"keaganpzh":73}},{"path":"src/main/java/wedlog/address/model/person/UniqueGuestList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateGuestException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.GuestNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":" * A list of guests that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":" * A guest is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":" * guests uses Person#isSamePerson(Person) for equality to ensure that the guest being added or updated is","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":" * unique in terms of identity in the UniqueGuestList. However, the removal of a guest uses Guest#equals(Object)","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":" * to ensure that the guest with exactly the same fields will be removed.","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":" *","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":" *","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"public class UniqueGuestList implements Iterable\u003cGuest\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"    private final ObservableList\u003cGuest\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    private final ObservableList\u003cGuest\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"     * Returns true if the list contains an equivalent guest as the given argument.","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    public boolean contains(Guest toCheck) {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"     * Adds a guest to the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"     * The guest must not already exist in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    public void add(Guest toAdd) {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"            throw new DuplicateGuestException();","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"     * Replaces the guest {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"     * The guest identity of {@code editedPerson} must not be the same as another existing guest in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    public void setGuest(Guest target, Guest editedPerson) {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"            throw new GuestNotFoundException();","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"            throw new DuplicateGuestException();","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"     * Removes the equivalent guest from the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"     * The guest must exist in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"    public void remove(Guest toRemove) {","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"            throw new GuestNotFoundException();","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    public void setGuests(UniqueGuestList replacement) {","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"     * Replaces the contents of this list with {@code guests}.","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"     * {@code guests} must not contain duplicate guests.","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    public void setGuests(List\u003cGuest\u003e guests) {","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        requireAllNonNull(guests);","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        if (!guestsAreUnique(guests)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"            throw new DuplicateGuestException();","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        internalList.setAll(guests);","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"keaganpzh"},"content":"     * Calculates the number of guests with an RSVP status of \"yes\".","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"keaganpzh"},"content":"     * @return number of guests with an RSVP status of \"yes\".","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"keaganpzh"},"content":"    public int getNumGuestsRsvpYes() {","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"keaganpzh"},"content":"        int numGuestsRsvpYes \u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"keaganpzh"},"content":"        for (Guest guest : internalList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"keaganpzh"},"content":"            if (guest.getRsvpStatus().value.equals(\"yes\")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"keaganpzh"},"content":"                numGuestsRsvpYes++;","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"keaganpzh"},"content":"        return numGuestsRsvpYes;","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"keaganpzh"},"content":"     * Calculates the number of guests with an RSVP status of \"no\".","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"keaganpzh"},"content":"     * @return number of guests with an RSVP status of \"no\".","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"keaganpzh"},"content":"    public int getNumGuestsRsvpNo() {","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"keaganpzh"},"content":"        int numGuestsRsvpNo \u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"keaganpzh"},"content":"        for (Guest guest : internalList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"keaganpzh"},"content":"            if (guest.getRsvpStatus().value.equals(\"no\")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"keaganpzh"},"content":"                numGuestsRsvpNo++;","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"keaganpzh"},"content":"        return numGuestsRsvpNo;","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"keaganpzh"},"content":"     * Calculates the number of guests with an RSVP status of \"unknown\".","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"keaganpzh"},"content":"     * @return number of guests with an RSVP status of \"unknown\".","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"keaganpzh"},"content":"    public int getNumGuestsRsvpUnknown() {","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"keaganpzh"},"content":"        int numGuestsRsvpUnknown \u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"keaganpzh"},"content":"        for (Guest guest : internalList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"keaganpzh"},"content":"            if (guest.getRsvpStatus().value.equals(\"unknown\")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"keaganpzh"},"content":"                numGuestsRsvpUnknown++;","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"keaganpzh"},"content":"        return numGuestsRsvpUnknown;","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"    public ObservableList\u003cGuest\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"    public Iterator\u003cGuest\u003e iterator() {","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"        if (!(other instanceof UniqueGuestList)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList otherUniqueGuestList \u003d (UniqueGuestList) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"        return internalList.equals(otherUniqueGuestList.internalList);","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"     * Returns true if {@code guests} contains only unique guests.","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"    private boolean guestsAreUnique(List\u003cGuest\u003e guests) {","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"        for (int i \u003d 0; i \u003c guests.size() - 1; i++) {","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"            for (int j \u003d i + 1; j \u003c guests.size(); j++) {","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"                if (guests.get(i).isSamePerson(guests.get(j))) {","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"                    return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"                }","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"        return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":4,"p-xp":146,"keaganpzh":42}},{"path":"src/main/java/wedlog/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    // use this observable list so that this list will notify the FX when changes are made and allow for event listeners","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":4,"wasjoe1":1,"-":146}},{"path":"src/main/java/wedlog/address/model/person/UniqueVendorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateVendorException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.VendorNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":" * A list of vendors that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":" * A vendor is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":" * vendors uses Person#isSamePerson(Person) for equality so as to ensure that the vendor being added or updated is","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":" * unique in terms of identity in the UniqueVendorList. However, the removal of a vendor uses Vendor#equals(Object) so","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":" * as to ensure that the vendor with exactly the same fields will be removed.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":" *","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":" *","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"public class UniqueVendorList implements Iterable\u003cVendor\u003e {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    private final ObservableList\u003cVendor\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    private final ObservableList\u003cVendor\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"     * Returns true if the list contains an equivalent vendor as the given argument.","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"    public boolean contains(Vendor toCheck) {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"     * Adds a vendor to the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"     * The vendor must not already exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    public void add(Vendor toAdd) {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"            throw new DuplicateVendorException();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"     * Replaces the vendor {@code target} in the list with {@code editedVendor}.","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"     * The vendor identity of {@code editedVendor} must not be the same as another existing vendor in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"    public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        requireAllNonNull(target, editedVendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"            throw new VendorNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        if (!target.isSamePerson(editedVendor) \u0026\u0026 contains(editedVendor)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"            throw new DuplicateVendorException();","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        internalList.set(index, editedVendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"     * Removes the equivalent vendor from the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"     * The vendor must exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"    public void remove(Vendor toRemove) {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"            throw new VendorNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    public void setVendors(UniqueVendorList replacement) {","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"     * Replaces the contents of this list with {@code vendors}.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"     * {@code vendors} must not contain duplicate vendors.","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    public void setVendors(List\u003cVendor\u003e vendors) {","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        requireAllNonNull(vendors);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        if (!vendorsAreUnique(vendors)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"            throw new DuplicateVendorException();","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        internalList.setAll(vendors);","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    public ObservableList\u003cVendor\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"    public Iterator\u003cVendor\u003e iterator() {","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"        if (!(other instanceof UniqueVendorList)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList otherUniqueVendorList \u003d (UniqueVendorList) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        return internalList.equals(otherUniqueVendorList.internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"     * Returns true if {@code vendors} contains only unique vendors.","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"    private boolean vendorsAreUnique(List\u003cVendor\u003e vendors) {","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        for (int i \u003d 0; i \u003c vendors.size() - 1; i++) {","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"            for (int j \u003d i + 1; j \u003c vendors.size(); j++) {","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"                if (vendors.get(i).isSamePerson(vendors.get(j))) {","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"                    return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":150}},{"path":"src/main/java/wedlog/address/model/person/Vendor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":" * Represents a Vendor in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":" * Guarantees: field values are validated, immutable.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"public class Vendor extends Person {","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"     * Name and tags must be present and not null.","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public Vendor(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     * Returns true if both vendors have the same identity and data fields.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"     * This defines a stronger notion of equality between two vendors.","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            return true;","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        if (!(other instanceof Vendor)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"            return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        Vendor otherVendor \u003d (Vendor) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        return super.equals(otherVendor);","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getAddress(), getTags());","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"                .add(\"name\", getName())","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"                .add(\"phone\", getPhone())","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"                .add(\"email\", getEmail())","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"                .add(\"address\", getAddress())","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"                .add(\"tags\", getTags())","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"                .toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"tllshan":53,"samuelim01":4,"p-xp":1}},{"path":"src/main/java/wedlog/address/model/person/exceptions/DuplicateGuestException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":" * Signals that the operation will result in duplicate Guests (Guests are considered duplicates if they have the same","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":" * identity).","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"public class DuplicateGuestException extends RuntimeException {","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"    public DuplicateGuestException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"        super(\"Operation would result in duplicate guests\");","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":1,"p-xp":11}},{"path":"src/main/java/wedlog/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"samuelim01":1,"-":10}},{"path":"src/main/java/wedlog/address/model/person/exceptions/DuplicateVendorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":" * Signals that the operation will result in duplicate Vendors (Vendors are considered duplicates if they have the same","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":" * identity).","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"public class DuplicateVendorException extends RuntimeException {","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"    public DuplicateVendorException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"        super(\"Operation would result in duplicate vendors\");","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":11}},{"path":"src/main/java/wedlog/address/model/person/exceptions/GuestNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"public class GuestNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":1,"p-xp":5}},{"path":"src/main/java/wedlog/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"samuelim01":1,"-":5}},{"path":"src/main/java/wedlog/address/model/person/exceptions/VendorNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":" * Signals that the operation is unable to find the specified vendor.","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"public class VendorNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":6}},{"path":"src/main/java/wedlog/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samuelim01":2,"-":60}},{"path":"src/main/java/wedlog/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"samuelim01":9,"-":51}},{"path":"src/main/java/wedlog/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":5,"-":41}},{"path":"src/main/java/wedlog/address/storage/JsonAdaptedGuest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.DietaryRequirements;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":" * Jackson-friendly version of {@link Guest}.","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"class JsonAdaptedGuest extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Guest\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    private final String rsvpStatus;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    private final String dietaryRequirements;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"     * Constructs a {@code JsonAdaptedGuest} with the given guest details.","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"    public JsonAdaptedGuest(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"                            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"                            @JsonProperty(\"rsvpStatus\") String rsvpStatus,","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"                            @JsonProperty(\"dietaryRequirements\") String dietaryRequirements,","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"                            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"        this.rsvpStatus \u003d rsvpStatus;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"        this.dietaryRequirements \u003d dietaryRequirements;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"     * Converts a given {@code Guest} into this class for Jackson use.","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"    public JsonAdaptedGuest(Guest source) {","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"        super(source);","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        rsvpStatus \u003d source.getRsvpStatus().value;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        dietaryRequirements \u003d source.getDietaryRequirements().value;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"     * Converts this Jackson-friendly adapted guest object into the model\u0027s {@code Guest} object.","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    public Guest toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        final List\u003cTag\u003e guestTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"            guestTags.add(tag.toModelType());","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        final Phone modelPhone;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        final Email modelEmail;","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        final Address modelAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        } else if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"        final RsvpStatus modelRsvpStatus;","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        if (rsvpStatus \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"                    RsvpStatus.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        } else if (!RsvpStatus.isValidRsvpStatus(rsvpStatus)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"            throw new IllegalValueException(RsvpStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"            modelRsvpStatus \u003d new RsvpStatus(rsvpStatus);","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        final DietaryRequirements modelDietaryRequirements;","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        if (dietaryRequirements \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"keaganpzh"},"content":"            modelDietaryRequirements \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"            // Dietary Requirements are always valid","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"            modelDietaryRequirements \u003d new DietaryRequirements(dietaryRequirements);","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(guestTags);","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        return new Guest(modelName, modelPhone, modelEmail, modelAddress, modelRsvpStatus,","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"                modelDietaryRequirements, modelTags);","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":37,"p-xp":87,"keaganpzh":1}},{"path":"src/main/java/wedlog/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    protected final String name;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    protected final String phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    protected final String email;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    protected final String address;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"    protected final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        phone \u003d Optional.ofNullable(source.getPhone()).map(p -\u003e p.value).orElse(null);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        email \u003d Optional.ofNullable(source.getEmail()).map(e -\u003e e.value).orElse(null);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        address \u003d Optional.ofNullable(source.getAddress()).map(a -\u003e a.value).orElse(null);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        final Phone modelPhone;","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        final Email modelEmail;","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        final Address modelAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        } else if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":32,"-":81}},{"path":"src/main/java/wedlog/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":3,"-":45}},{"path":"src/main/java/wedlog/address/storage/JsonAdaptedVendor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":" * Jackson-friendly version of {@link Vendor}.","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"class JsonAdaptedVendor extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Vendor\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"     * Constructs a {@code JsonAdaptedVendor} with the given person details.","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    public JsonAdaptedVendor(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"     * Converts a given {@code Vendor} into this class for Jackson use.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    public JsonAdaptedVendor(Vendor source) {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        super(source);","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Vendor} object.","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"    public Vendor toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        final Phone modelPhone;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        final Email modelEmail;","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        final Address modelAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        } else if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        return new Vendor(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":93}},{"path":"src/main/java/wedlog/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":7,"-":73}},{"path":"src/main/java/wedlog/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"Guests list contains duplicate guest(s).\";","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    public static final String MESSAGE_DUPLICATE_VENDOR \u003d \"Vendors list contains duplicate vendor(s).\";","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    private final List\u003cJsonAdaptedGuest\u003e guests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    private final List\u003cJsonAdaptedVendor\u003e vendors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons, guests and vendors.","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"                                       @JsonProperty(\"guests\") List\u003cJsonAdaptedGuest\u003e guests,","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"                                       @JsonProperty(\"vendors\") List\u003cJsonAdaptedVendor\u003e vendors) {","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        this.guests.addAll(guests);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        this.vendors.addAll(vendors);","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"        guests.addAll(source.getGuestList().stream().map(JsonAdaptedGuest::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        vendors.addAll(source.getVendorList().stream().map(JsonAdaptedVendor::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        for (JsonAdaptedGuest jsonAdaptedGuest : guests) {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"            Guest guest \u003d jsonAdaptedGuest.toModelType();","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"            if (addressBook.hasGuest(guest)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"            addressBook.addGuest(guest);","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        for (JsonAdaptedVendor jsonAdaptedVendor : vendors) {","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"            Vendor vendor \u003d jsonAdaptedVendor.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"            if (addressBook.hasVendor(vendor)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"            addressBook.addVendor(vendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":19,"p-xp":14,"-":53}},{"path":"src/main/java/wedlog/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":5,"-":42}},{"path":"src/main/java/wedlog/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samuelim01":5,"-":27}},{"path":"src/main/java/wedlog/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":6,"-":72}},{"path":"src/main/java/wedlog/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":6,"-":30}},{"path":"src/main/java/wedlog/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"         * @see wedlog.address.logic.Logic#execute(String)","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"samuelim01":5,"-":80}},{"path":"src/main/java/wedlog/address/ui/GuestCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":" * A UI component that displays information of a {@code Guest}.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"public class GuestCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    private static final String FXML \u003d \"GuestListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    private static final String RSVP_YES \u003d \"yes\";","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    private static final String RSVP_NO \u003d \"no\";","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"    public final Guest guest;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"    private Label name;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"    private Label id;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"    private Label phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    private Label address;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    private Label email;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"    private Label rsvpStatusPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"    private Label rsvpStatus;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"    private Label dietaryRequirements;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"     * Creates a {@code GuestCode} with the given {@code Guest} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"    public GuestCard(Guest guest, int displayedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"        this.guest \u003d guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"        name.setText(guest.getName().fullName);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"        phone.setText(Optional.ofNullable(guest.getPhone()).map(p -\u003e p.value).orElse(\"-\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"        address.setText(Optional.ofNullable(guest.getAddress()).map(a -\u003e a.value).orElse(\"-\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"        email.setText(Optional.ofNullable(guest.getEmail()).map(e -\u003e e.value).orElse(\"-\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"        // Setting the RSVP Label with conditional styling","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"        rsvpStatus.setText(Optional.ofNullable(guest.getRsvpStatus()).map(r -\u003e \"RSVP: \" + r.value).orElse(\"\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"        switch (guest.getRsvpStatus().value) {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"keaganpzh"},"content":"        case RSVP_YES:","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"            rsvpStatus.setStyle(\"-fx-background-color: green\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"            break;","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"keaganpzh"},"content":"        case RSVP_NO:","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"            rsvpStatus.setStyle(\"-fx-background-color: red\");","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"            break;","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"        default:","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"            rsvpStatus.setStyle(\"-fx-background-color: orange\");","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"        dietaryRequirements.setText(Optional.ofNullable(guest.getDietaryRequirements()).map(d -\u003e d.value)","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"                .orElse(\"-\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"        guest.getTags().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"keaganpzh"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"keaganpzh":86}},{"path":"src/main/java/wedlog/address/ui/GuestListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":" * Panel containing the list of guests.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"public class GuestListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    private static final String FXML \u003d \"GuestListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GuestListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"    private ListView\u003cGuest\u003e guestListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     * Creates a {@code GuestListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    public GuestListPanel(ObservableList\u003cGuest\u003e guestList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        guestListView.setItems(guestList);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"        guestListView.setCellFactory(listView -\u003e new GuestListViewCell());","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Guest} using a {@code GuestCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    class GuestListViewCell extends ListCell\u003cGuest\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"        protected void updateItem(Guest guest, boolean isEmpty) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"            super.updateItem(guest, isEmpty);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"            if (isEmpty || guest \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"                setGraphic(new GuestCard(guest, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"keaganpzh":48}},{"path":"src/main/java/wedlog/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-f11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":3,"-":99}},{"path":"src/main/java/wedlog/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    private GuestListPanel guestListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"    private VendorListPanel vendorListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    private StatisticsPanel statisticsPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"    private ImageView logoImage;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"    private StackPane guestListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"    private StackPane vendorListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"    private StackPane piechartPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"    private StackPane statisticsPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"keaganpzh"},"content":"        logoImage.setImage(new javafx.scene.image.Image(\"./images/WedLogLogo.png\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"keaganpzh"},"content":"        guestListPanel \u003d new GuestListPanel(logic.getFilteredGuestList());","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"keaganpzh"},"content":"        guestListPanelPlaceholder.getChildren().add(guestListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"keaganpzh"},"content":"        vendorListPanel \u003d new VendorListPanel(logic.getFilteredVendorList());","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"keaganpzh"},"content":"        vendorListPanelPlaceholder.getChildren().add(vendorListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"keaganpzh"},"content":"        populatePieChart();","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"keaganpzh"},"content":"        setStatisticsPanel();","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":197,"author":{"gitId":"keaganpzh"},"content":"    public GuestListPanel getGuestListPanel() {","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"keaganpzh"},"content":"        return guestListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"keaganpzh"},"content":"    public VendorListPanel getVendorListPanel() {","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"keaganpzh"},"content":"        return vendorListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"samuelim01"},"content":"     * @see wedlog.address.logic.Logic#execute(String)","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"keaganpzh"},"content":"            populatePieChart();","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"keaganpzh"},"content":"            setStatisticsPanel();","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"keaganpzh"},"content":"    private void populatePieChart() {","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"keaganpzh"},"content":"        piechartPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-19"},{"lineNumber":236,"author":{"gitId":"keaganpzh"},"content":"        RsvpStatistics rsvpStatistics \u003d logic.getRsvpStatistics();","lastModifiedDate":"2023-10-19"},{"lineNumber":237,"author":{"gitId":"keaganpzh"},"content":"        ObservableList\u003cPieChart.Data\u003e pieChartData \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"keaganpzh"},"content":"                FXCollections.observableArrayList(","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"keaganpzh"},"content":"                        new PieChart.Data(\"No\", rsvpStatistics.getPercentGuestsRsvpNo()),","lastModifiedDate":"2023-10-19"},{"lineNumber":240,"author":{"gitId":"keaganpzh"},"content":"                        new PieChart.Data(\"Unknown\", rsvpStatistics.getPercentGuestsRsvpUnknown()),","lastModifiedDate":"2023-10-19"},{"lineNumber":241,"author":{"gitId":"keaganpzh"},"content":"                        new PieChart.Data(\"Yes\", rsvpStatistics.getPercentGuestsRsvpYes()));","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"keaganpzh"},"content":"        final PieChart chart \u003d new PieChart(pieChartData);","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"keaganpzh"},"content":"        chart.setTitle(\"RSVP Status\");","lastModifiedDate":"2023-10-19"},{"lineNumber":244,"author":{"gitId":"keaganpzh"},"content":"        chart.setLegendVisible(true);","lastModifiedDate":"2023-10-19"},{"lineNumber":245,"author":{"gitId":"keaganpzh"},"content":"        piechartPlaceholder.getChildren().add(chart);","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"keaganpzh"},"content":"    private void setStatisticsPanel() {","lastModifiedDate":"2023-10-19"},{"lineNumber":249,"author":{"gitId":"keaganpzh"},"content":"        statisticsPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-19"},{"lineNumber":250,"author":{"gitId":"keaganpzh"},"content":"        statisticsPanel \u003d new StatisticsPanel(logic);","lastModifiedDate":"2023-10-19"},{"lineNumber":251,"author":{"gitId":"keaganpzh"},"content":"        statisticsPlaceholder.getChildren().add(statisticsPanel.getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":252,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":8,"keaganpzh":63,"-":183}},{"path":"src/main/java/wedlog/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":1,"-":27}},{"path":"src/main/java/wedlog/address/ui/StatisticsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.logic.Logic;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":" * A UI component that displays statistics of WedLog.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":" * To be updated in the future.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"public class StatisticsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"    private static final String FXML \u003d \"StatisticsPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"    private final Logic logic;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"    private Label guestsTrackedLabel;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    private Label vendorsTrackedLabel;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     * Creates a {@code StatisticsPanel}","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"     * Currently, this is a blank component.","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    public StatisticsPanel(Logic logic) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"        guestsTrackedLabel.setText(\"Guests tracked: \" + logic.getFilteredGuestList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"        vendorsTrackedLabel.setText(\"Vendors tracked: \" + logic.getFilteredVendorList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"keaganpzh":36}},{"path":"src/main/java/wedlog/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":27}},{"path":"src/main/java/wedlog/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samuelim01":1,"-":12}},{"path":"src/main/java/wedlog/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":5,"-":83}},{"path":"src/main/java/wedlog/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samuelim01":2,"-":86}},{"path":"src/main/java/wedlog/address/ui/VendorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":" * A UI component that displays information of a {@code Vendor}.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"public class VendorCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    private static final String FXML \u003d \"VendorListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    public final Vendor vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"     * Creates a {@code GuestCode} with the given {@code Vendor} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"    public VendorCard(Vendor vendor, int displayedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"        this.vendor \u003d vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"        name.setText(vendor.getName().fullName);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"        phone.setText(Optional.ofNullable(vendor.getPhone()).map(p -\u003e p.value).orElse(\"-\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"        address.setText(Optional.ofNullable(vendor.getAddress()).map(a -\u003e a.value).orElse(\"-\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"        email.setText(Optional.ofNullable(vendor.getEmail()).map(e -\u003e e.value).orElse(\"-\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"        vendor.getTags().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"samuelim01":2,"keaganpzh":13,"-":45}},{"path":"src/main/java/wedlog/address/ui/VendorListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":" * Panel containing the list of guests.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"public class VendorListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    private static final String FXML \u003d \"VendorListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(VendorListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"    private ListView\u003cVendor\u003e vendorListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     * Creates a {@code VendorListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    public VendorListPanel(ObservableList\u003cVendor\u003e vendorList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        vendorListView.setItems(vendorList);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"        vendorListView.setCellFactory(listView -\u003e new VendorListViewCell());","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Vendor} using a {@code VendorCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    class VendorListViewCell extends ListCell\u003cVendor\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"        protected void updateItem(Vendor vendor, boolean isEmpty) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"            super.updateItem(vendor, isEmpty);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"            if (isEmpty || vendor \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"                setGraphic(new VendorCard(vendor, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"keaganpzh":48}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    -fx-base: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"    -fx-control-inner-background: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: derive(#f9fafb, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #edede9;","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #edede9;","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #e3d5ca;","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #d6ccc2;","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffdde;","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"keaganpzh"},"content":"    -fx-border-color: #d4af37;","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"keaganpzh"},"content":".rsvpStatus {","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"keaganpzh"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"keaganpzh"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"keaganpzh"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":144,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #f0ebd8;","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"     -fx-background-color: #f9fafb;","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"keaganpzh"},"content":"     -fx-background-radius: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"keaganpzh"},"content":"     -fx-border-radius: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"keaganpzh"},"content":"     -fx-border-color: #d0d0d0;","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: linear-gradient(to top, darkgray, transparent);","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":173,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: linear-gradient(to top, darkgray, transparent);","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"keaganpzh"},"content":"    -fx-border-color: derive(#f9fafb, 25%);","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: derive(#f9fafb, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"keaganpzh"},"content":"    -fx-border-color: derive(#f9fafb, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":196,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: derive(#f9fafb, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: linear-gradient(to top, darkgray, transparent);","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"keaganpzh"},"content":"    -fx-border-width: 0 0 0.5 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":216,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"keaganpzh"},"content":"  -fx-background-color: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"keaganpzh"},"content":"  -fx-text-fill: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"keaganpzh"},"content":"    -fx-border-color: black, black;","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #fffeed;","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: derive(#fffeed, 25%);","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"keaganpzh"},"content":"    -fx-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":295,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #edede9;","lastModifiedDate":"2023-10-18"},{"lineNumber":300,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: #d0d0d0;","lastModifiedDate":"2023-10-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"keaganpzh"},"content":"    -fx-background-color: transparent, #edede9, transparent, #edede9;","lastModifiedDate":"2023-10-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"keaganpzh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"keaganpzh"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-10-19"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"keaganpzh"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2023-10-19"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"keaganpzh":65,"-":298}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"    -fx-background: #edede9;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"keaganpzh":1,"-":19}},{"path":"src/main/resources/view/GuestListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"rsvpStatus\" styleClass\u003d\"rsvpStatus\" text\u003d\"\\$RSVP\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"dietaryRequirements\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$Diet\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"keaganpzh":38}},{"path":"src/main/resources/view/GuestListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"    \u003cLabel alignment\u003d\"CENTER\" prefWidth\u003d\"350\" text\u003d\"Guests\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"    \u003cListView fx:id\u003d\"guestListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"keaganpzh":10}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"\u003cfx:root maxHeight\u003d\"650\" maxWidth\u003d\"850\" minHeight\u003d\"500\" minWidth\u003d\"700\" onCloseRequest\u003d\"#handleExit\" title\u003d\"WedLog\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"        \u003cHBox prefWidth\u003d\"400\" style\u003d\"-fx-background-color: #edede9\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"          \u003cVBox styleClass\u003d\"stack-pane\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"            \u003cAnchorPane styleClass\u003d\"split-pane\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"              \u003cImageView fx:id\u003d\"logoImage\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"50.0\" AnchorPane.rightAnchor\u003d\"50.0\" AnchorPane.topAnchor\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"            \u003cStackPane fx:id\u003d\"piechartPlaceholder\" prefHeight\u003d\"400\" prefWidth\u003d\"200.0\" styleClass\u003d\"split-pane\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"            \u003cStackPane fx:id\u003d\"statisticsPlaceholder\" prefHeight\u003d\"400\" prefWidth\u003d\"200.0\" styleClass\u003d\"split-pane\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"          \u003cVBox fx:id\u003d\"guestList\" prefWidth\u003d\"350\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"            \u003cStackPane fx:id\u003d\"guestListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"          \u003cVBox fx:id\u003d\"vendorList\" prefWidth\u003d\"350\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"            \u003cStackPane fx:id\u003d\"vendorListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"          \u003cVBox minWidth\u003d\"400.0\" prefWidth\u003d\"850.0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"              \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"200\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"                  \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"              \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"keaganpzh"},"content":"              \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"                  \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"              \u003c/StackPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" prefWidth\u003d\"405.0\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"keaganpzh":39,"-":46}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"keaganpzh":1,"-":8}},{"path":"src/main/resources/view/StatisticsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"\u003cHBox id\u003d\"statisticsPanel\" fx:id\u003d\"statisticsPanel\" prefWidth\u003d\"200\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"   \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"      \u003cLabel fx:id\u003d\"guestsTrackedLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$guests\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"      \u003cLabel fx:id\u003d\"vendorsTrackedLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefWidth\u003d\"200.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$vendors\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"   \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"keaganpzh":12}},{"path":"src/main/resources/view/VendorListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"keaganpzh":36}},{"path":"src/main/resources/view/VendorListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"    \u003cLabel alignment\u003d\"CENTER\" prefWidth\u003d\"350\" text\u003d\"Vendors\" textAlignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"    \u003cListView fx:id\u003d\"vendorListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"keaganpzh":3,"-":7}},{"path":"src/test/java/wedlog/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"samuelim01":1,"-":88}},{"path":"src/test/java/wedlog/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"samuelim01":1,"-":26}},{"path":"src/test/java/wedlog/address/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"samuelim01":1,"-":15}},{"path":"src/test/java/wedlog/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"-":133}},{"path":"src/test/java/wedlog/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.core.index;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"samuelim01":2,"-":65}},{"path":"src/test/java/wedlog/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"samuelim01":2,"-":34}},{"path":"src/test/java/wedlog/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"samuelim01":3,"-":105}},{"path":"src/test/java/wedlog/address/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.Config;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":4,"-":112}},{"path":"src/test/java/wedlog/address/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":2,"-":21}},{"path":"src/test/java/wedlog/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.SerializableTestClass;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TestUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":3,"-":42}},{"path":"src/test/java/wedlog/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.commons.util;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"samuelim01":2,"-":141}},{"path":"src/test/java/wedlog/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DIETARY_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.RSVP_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.logic.commands.GuestAddCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.storage.StorageManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"keaganpzh"},"content":"    public void getRsvpStatisticsTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"keaganpzh"},"content":"        model.addGuest(GINA);","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"keaganpzh"},"content":"        model.addGuest(GREG);","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new RsvpStatistics(1, 1, 0), logic.getRsvpStatistics());","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"keaganpzh"},"content":"        // Triggers the saveAddressBook method by executing a guest add command","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"keaganpzh"},"content":"        String guestAddCommand \u003d \"guest \" + GuestAddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"keaganpzh"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + RSVP_DESC_AMY + DIETARY_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"keaganpzh"},"content":"        Guest expectedGuest \u003d new GuestBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":189,"author":{"gitId":"keaganpzh"},"content":"        expectedModel.addGuest(expectedGuest);","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"keaganpzh"},"content":"        assertCommandFailure(guestAddCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"samuelim01":15,"keaganpzh":31,"-":146}},{"path":"src/test/java/wedlog/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"samuelim01":7,"-":25}},{"path":"src/test/java/wedlog/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"samuelim01":1,"-":62}},{"path":"src/test/java/wedlog/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_RSVP_STATUS_AMY \u003d \"no\";","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_RSVP_STATUS_BOB \u003d \"unknown\";","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_DIETARY_REQUIREMENTS_AMY \u003d \"none\";","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_DIETARY_REQUIREMENTS_BOB \u003d \"no beef\";","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_TAG_FLORIST \u003d \"florist\";","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    public static final String VALID_TAG_PHOTOGRAPHER \u003d \"photographer\";","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    public static final String RSVP_DESC_AMY \u003d \" \" + PREFIX_RSVP + VALID_RSVP_STATUS_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"    public static final String RSVP_DESC_BOB \u003d \" \" + PREFIX_RSVP + VALID_RSVP_STATUS_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    public static final String DIETARY_DESC_AMY \u003d \" \" + PREFIX_DIETARY + VALID_DIETARY_REQUIREMENTS_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    public static final String DIETARY_DESC_BOB \u003d \" \" + PREFIX_DIETARY + VALID_DIETARY_REQUIREMENTS_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    public static final String TAG_DESC_FLORIST \u003d \" \" + PREFIX_TAG + VALID_TAG_FLORIST;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    public static final String TAG_DESC_PHOTOGRAPHER \u003d \" \" + PREFIX_TAG + VALID_TAG_PHOTOGRAPHER;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"    public static final String INVALID_RSVP_DESC \u003d \" \" + PREFIX_RSVP + \"abcd\"; // not within range of accepted rsvp","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"     * Updates {@code model}\u0027s filtered guest list to show only the guest at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"tllshan"},"content":"    public static void showGuestAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredGuestList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"        Guest guest \u003d model.getFilteredGuestList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"        final String[] splitName \u003d guest.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"        model.updateFilteredGuestList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"        assertEquals(1, model.getFilteredGuestList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"tllshan"},"content":"    public static void showVendorAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"tllshan"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredVendorList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"tllshan"},"content":"        Vendor vendor \u003d model.getFilteredVendorList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"tllshan"},"content":"        final String[] splitName \u003d vendor.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"tllshan"},"content":"        model.updateFilteredVendorList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"tllshan"},"content":"        assertEquals(1, model.getFilteredVendorList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tllshan":28,"samuelim01":14,"p-xp":16,"wasjoe1":1,"-":113}},{"path":"src/test/java/wedlog/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"samuelim01":13,"-":107}},{"path":"src/test/java/wedlog/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"samuelim01":22,"-":162}},{"path":"src/test/java/wedlog/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"samuelim01":10,"-":61}},{"path":"src/test/java/wedlog/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"samuelim01":5,"-":15}},{"path":"src/test/java/wedlog/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"samuelim01":11,"-":80}},{"path":"src/test/java/wedlog/address/logic/commands/GuestAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalGuests.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":" * Contains integration tests (interaction with the Model) for {@code GuestAddCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"public class GuestAddCommandIntegrationTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    public void execute_newGuestIntoEmptyAddressBook_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"        expectedModel.addGuest(validGuest);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(new GuestAddCommand(validGuest), model,","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"                String.format(GuestAddCommand.MESSAGE_SUCCESS, Messages.format(validGuest)),","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"                expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    public void execute_newGuestIntoPrefilledAddressBook_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        expectedModel.addGuest(validGuest);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(new GuestAddCommand(validGuest), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"                String.format(GuestAddCommand.MESSAGE_SUCCESS, Messages.format(validGuest)),","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"                expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        Guest guestInList \u003d model.getAddressBook().getGuestList().get(0);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        assertCommandFailure(new GuestAddCommand(guestInList), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"                GuestAddCommand.MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"p-xp":61,"wasjoe1":1}},{"path":"src/test/java/wedlog/address/logic/commands/GuestAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"class GuestAddCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    public void constructor_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GuestAddCommand(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    public void execute_guestAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        ModelStubAcceptingGuestAdded modelStub \u003d new ModelStubAcceptingGuestAdded();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"        CommandResult commandResult \u003d new GuestAddCommand(validGuest).execute(modelStub);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        assertEquals(String.format(GuestAddCommand.MESSAGE_SUCCESS, Messages.format(validGuest)),","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        assertEquals(Arrays.asList(validGuest), modelStub.guestsAdded);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand guestAddCommand \u003d new GuestAddCommand(validGuest);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        ModelStub modelStub \u003d new ModelStubWithGuest(validGuest);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"                GuestAddCommand.MESSAGE_DUPLICATE_GUEST, () -\u003e guestAddCommand.execute(modelStub));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        Guest alice \u003d new GuestBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        Guest bob \u003d new GuestBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand addAliceCommand \u003d new GuestAddCommand(alice);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand addBobCommand \u003d new GuestAddCommand(bob);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand addAliceCommandCopy \u003d new GuestAddCommand(alice);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        // different guest -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand addCommand \u003d new GuestAddCommand(GINA);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        String expected \u003d GuestAddCommand.class.getCanonicalName() + \"{toAddGuest\u003d\" + GINA + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"        public void addGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"        public void deleteGuest(Guest target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"        public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"        public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"        public void deleteVendor(Vendor target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"        public void addVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"        public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"        public void updateFilteredGuestList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"p-xp"},"content":"        public void updateFilteredVendorList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"keaganpzh"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"keaganpzh"},"content":"        public RsvpStatistics getRsvpStatistics() {","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"keaganpzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"p-xp"},"content":"     * A Model stub that contains a single guest.","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"p-xp"},"content":"    private class ModelStubWithGuest extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"p-xp"},"content":"        private final Guest guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"p-xp"},"content":"        ModelStubWithGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"p-xp"},"content":"            requireNonNull(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"p-xp"},"content":"            this.guest \u003d guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"p-xp"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"p-xp"},"content":"            requireNonNull(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"p-xp"},"content":"            return this.guest.equals(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":250,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":251,"author":{"gitId":"p-xp"},"content":"     * A Model stub that always accept the guest being added.","lastModifiedDate":"2023-10-17"},{"lineNumber":252,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":253,"author":{"gitId":"p-xp"},"content":"    private class ModelStubAcceptingGuestAdded extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":254,"author":{"gitId":"p-xp"},"content":"        final ArrayList\u003cGuest\u003e guestsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"p-xp"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"p-xp"},"content":"            requireNonNull(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"p-xp"},"content":"            return guestsAdded.stream().anyMatch(guest::equals);","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":261,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"p-xp"},"content":"        public void addGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"p-xp"},"content":"            requireNonNull(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"p-xp"},"content":"            guestsAdded.add(guest);","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":267,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":268,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"p-xp"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":271,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"p-xp":267,"keaganpzh":6}},{"path":"src/test/java/wedlog/address/logic/commands/GuestDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showGuestAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalGuests.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":" * {@code GuestDeleteCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"public class GuestDeleteCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    public void execute_validIndexUnfilteredGuestList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        Guest guestToDelete \u003d model.getFilteredGuestList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteCommand \u003d new GuestDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        String expectedMessage \u003d String.format(GuestDeleteCommand.MESSAGE_DELETE_GUEST_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"                Messages.format(guestToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        expectedModel.deleteGuest(guestToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        assertCommandSuccess(guestDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    public void execute_invalidIndexUnfilteredGuestList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGuestList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteCommand \u003d new GuestDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        assertCommandFailure(guestDeleteCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    public void execute_validIndexFilteredGuestList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        showGuestAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        Guest guestToDelete \u003d model.getFilteredGuestList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteCommand \u003d new GuestDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        String expectedMessage \u003d String.format(GuestDeleteCommand.MESSAGE_DELETE_GUEST_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"                Messages.format(guestToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        expectedModel.deleteGuest(guestToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        assertCommandSuccess(guestDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"    public void execute_invalidIndexFilteredGuestList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        showGuestAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGuestList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteCommand \u003d new GuestDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        assertCommandFailure(guestDeleteCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteFirstCommand \u003d new GuestDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteSecondCommand \u003d new GuestDeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"        assertTrue(guestDeleteFirstCommand.equals(guestDeleteFirstCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteFirstCommandCopy \u003d new GuestDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        assertTrue(guestDeleteFirstCommand.equals(guestDeleteFirstCommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"        assertFalse(guestDeleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"        assertFalse(guestDeleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"        assertFalse(guestDeleteFirstCommand.equals(guestDeleteSecondCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"        GuestDeleteCommand guestDeleteCommand \u003d new GuestDeleteCommand(targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        String expected \u003d GuestDeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"        assertEquals(expected, guestDeleteCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"     * Updates {@code model}\u0027s filtered guest list to show no one.","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"        model.updateFilteredGuestList(p -\u003e false);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        assertTrue(model.getFilteredGuestList().isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"tllshan":120}},{"path":"src/test/java/wedlog/address/logic/commands/GuestListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.testutil.TypicalGuests.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * Contains integration tests (interaction with the Model) and unit tests for GuestListCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"public class GuestListCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    private Model model;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    public void execute_guestListIsNotFiltered_showsSameGuestList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"        assertCommandSuccess(new GuestListCommand(), model, GuestListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    // TODO: execute_listIsFiltered_showsEverything()","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"wasjoe1":33}},{"path":"src/test/java/wedlog/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"samuelim01":5,"-":15}},{"path":"src/test/java/wedlog/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"samuelim01":8,"-":31}},{"path":"src/test/java/wedlog/address/logic/commands/VendorAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalVendors.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":" * Contains integration tests (interaction with the Model) for {@code VendorAddCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"public class VendorAddCommandIntegrationTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"    public void execute_newVendorIntoEmptyAddressBook_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"        expectedModel.addVendor(validVendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(new VendorAddCommand(validVendor), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"                String.format(VendorAddCommand.MESSAGE_SUCCESS, Messages.format(validVendor)),","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"                expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"    public void execute_newVendorIntoPrefilledAddressBook_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        expectedModel.addVendor(validVendor);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"        assertCommandSuccess(new VendorAddCommand(validVendor), model,","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"                String.format(VendorAddCommand.MESSAGE_SUCCESS, Messages.format(validVendor)),","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"                expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    public void execute_duplicateVendor_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        Vendor vendorInList \u003d model.getAddressBook().getVendorList().get(0);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        assertCommandFailure(new VendorAddCommand(vendorInList), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"                VendorAddCommand.MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"p-xp":64}},{"path":"src/test/java/wedlog/address/logic/commands/VendorAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"p-xp"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalVendors.BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"import wedlog.address.model.RsvpStatistics;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"class VendorAddCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    public void constructor_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e new VendorAddCommand(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    public void execute_vendorAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        ModelStubAcceptingVendorAdded modelStub \u003d new ModelStubAcceptingVendorAdded();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"        CommandResult commandResult \u003d new VendorAddCommand(validVendor).execute(modelStub);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        assertEquals(String.format(VendorAddCommand.MESSAGE_SUCCESS, Messages.format(validVendor)),","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        assertEquals(Arrays.asList(validVendor), modelStub.vendorsAdded);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    public void execute_duplicateVendor_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand vendorAddCommand \u003d new VendorAddCommand(validVendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        ModelStub modelStub \u003d new ModelStubWithVendor(validVendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"                VendorAddCommand.MESSAGE_DUPLICATE_VENDOR, () -\u003e vendorAddCommand.execute(modelStub));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        Vendor alice \u003d new VendorBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"        Vendor bob \u003d new VendorBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand addAliceCommand \u003d new VendorAddCommand(alice);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand addBobCommand \u003d new VendorAddCommand(bob);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand addAliceCommandCopy \u003d new VendorAddCommand(alice);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        // different vendor -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand addCommand \u003d new VendorAddCommand(BOB);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        String expected \u003d VendorAddCommand.class.getCanonicalName() + \"{toAddVendor\u003d\" + BOB + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"        // add","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"        public void addGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"        public void addVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"        // has","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"        public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"        // delete","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"        public void deleteGuest(Guest guest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"        public void deleteVendor(Vendor target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"        // set","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"        public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"        public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"p-xp"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"p-xp"},"content":"        public void updateFilteredGuestList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"p-xp"},"content":"        public void updateFilteredVendorList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"p-xp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"keaganpzh"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"keaganpzh"},"content":"        public RsvpStatistics getRsvpStatistics() {","lastModifiedDate":"2023-10-19"},{"lineNumber":235,"author":{"gitId":"keaganpzh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"p-xp"},"content":"     * A Model stub that contains a single vendor.","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"p-xp"},"content":"    private class ModelStubWithVendor extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"p-xp"},"content":"        private final Vendor vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"p-xp"},"content":"        ModelStubWithVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"p-xp"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"p-xp"},"content":"            this.vendor \u003d vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":250,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":251,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":252,"author":{"gitId":"p-xp"},"content":"        public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":253,"author":{"gitId":"p-xp"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":254,"author":{"gitId":"p-xp"},"content":"            return this.vendor.equals(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":256,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"p-xp"},"content":"     * A Model stub that always accept the vendor being added.","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":261,"author":{"gitId":"p-xp"},"content":"    private class ModelStubAcceptingVendorAdded extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"p-xp"},"content":"        final ArrayList\u003cVendor\u003e vendorsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"p-xp"},"content":"        public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"p-xp"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":267,"author":{"gitId":"p-xp"},"content":"            return vendorsAdded.stream().anyMatch(vendor::equals);","lastModifiedDate":"2023-10-17"},{"lineNumber":268,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":271,"author":{"gitId":"p-xp"},"content":"        public void addVendor(Vendor vendor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"p-xp"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"p-xp"},"content":"            vendorsAdded.add(vendor);","lastModifiedDate":"2023-10-17"},{"lineNumber":274,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":276,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"p-xp"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":278,"author":{"gitId":"p-xp"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":279,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":280,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":281,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"p-xp":275,"keaganpzh":6}},{"path":"src/test/java/wedlog/address/logic/commands/VendorDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.showVendorAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalVendors.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":" * {@code GuestDeleteCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"public class VendorDeleteCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    public void execute_validIndexUnfilteredVendorList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        Vendor vendorToDelete \u003d model.getFilteredVendorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteCommand \u003d new VendorDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        String expectedMessage \u003d String.format(VendorDeleteCommand.MESSAGE_DELETE_VENDOR_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"                Messages.format(vendorToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        expectedModel.deleteVendor(vendorToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        assertCommandSuccess(vendorDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    public void execute_invalidIndexUnfilteredVendorList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredVendorList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteCommand \u003d new VendorDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        assertCommandFailure(vendorDeleteCommand, model, Messages.MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    public void execute_validIndexFilteredVendorList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        showVendorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        Vendor vendorToDelete \u003d model.getFilteredVendorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteCommand \u003d new VendorDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        String expectedMessage \u003d String.format(VendorDeleteCommand.MESSAGE_DELETE_VENDOR_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"                Messages.format(vendorToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        expectedModel.deleteVendor(vendorToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        assertCommandSuccess(vendorDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"    public void execute_invalidIndexFilteredVendorList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        showVendorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getVendorList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteCommand \u003d new VendorDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        assertCommandFailure(vendorDeleteCommand, model, Messages.MESSAGE_INVALID_VENDOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteFirstCommand \u003d new VendorDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteSecondCommand \u003d new VendorDeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"        assertTrue(vendorDeleteFirstCommand.equals(vendorDeleteFirstCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteFirstCommandCopy \u003d new VendorDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        assertTrue(vendorDeleteFirstCommand.equals(vendorDeleteFirstCommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendorDeleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendorDeleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendorDeleteFirstCommand.equals(vendorDeleteSecondCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"        VendorDeleteCommand vendorDeleteCommand \u003d new VendorDeleteCommand(targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        String expected \u003d VendorDeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"        assertEquals(expected, vendorDeleteCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"     * Updates {@code model}\u0027s filtered guest list to show no one.","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"        model.updateFilteredVendorList(p -\u003e false);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        assertTrue(model.getFilteredVendorList().isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"tllshan":120}},{"path":"src/test/java/wedlog/address/logic/commands/VendorListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package wedlog.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import static wedlog.address.testutil.TypicalVendors.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * Contains integration tests (interaction with the Model) and unit tests for VendorListCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"public class VendorListCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    private Model model;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    public void execute_vendorListIsNotFiltered_showsSameVendorList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"        assertCommandSuccess(new VendorListCommand(), model, VendorListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    // TODO: execute_listIsFiltered_showsEverything","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"wasjoe1":33}},{"path":"src/test/java/wedlog/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_vendor() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"vendor list\"; // a valid command","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        // no split between Vendor \u0026 Guest type, so just test that the output is a command","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(command instanceof Command, true);","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_guest() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"guest list\"; // a valid command","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        // no split between Vendor \u0026 Guest type, so just test that the output is a command","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(command instanceof Command, true);","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"samuelim01":20,"wasjoe1":10,"-":80}},{"path":"src/test/java/wedlog/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"samuelim01":1,"-":149}},{"path":"src/test/java/wedlog/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"samuelim01":3,"-":36}},{"path":"src/test/java/wedlog/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"samuelim01":6,"-":26}},{"path":"src/test/java/wedlog/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"samuelim01":43,"-":165}},{"path":"src/test/java/wedlog/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"samuelim01":6,"-":28}},{"path":"src/test/java/wedlog/address/logic/parser/GuestAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DIETARY_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.DIETARY_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_RSVP_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.RSVP_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.RSVP_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalGuests.AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalGuests.BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestAddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"public class GuestAddCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    private GuestAddCommandParser parser \u003d new GuestAddCommandParser();","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand guestAddCommand \u003d parser.parse(NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_AMY + RSVP_DESC_AMY + DIETARY_DESC_AMY + TAG_DESC_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"        assertEquals(guestAddCommand, new GuestAddCommand(AMY));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"    public void parse_onlyNamePresent_success() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        GuestAddCommand guestAddCommand \u003d parser.parse(NAME_DESC_AMY);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        assertEquals(new GuestAddCommand(expectedGuest), guestAddCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    public void parse_repeatedNameValue_failure() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(NAME_DESC_AMY + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    public void parse_invalidValues_failure() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_NAME_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_EMAIL_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_NAME_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_EMAIL_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        // invalid phone","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_PHONE_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        // invalid address","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_ADDRESS_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        // invalid rsvp","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_RSVP_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"    public void parse_missingTags_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        // zero tags","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"                        + RSVP_DESC_AMY + DIETARY_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"                new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"    public void parse_missingPhone_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(BOB).withoutPhone().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_BOB + DIETARY_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND, new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"    public void parse_missingEmail_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(BOB).withoutEmail().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_BOB + DIETARY_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND, new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"    public void parse_missingAddress_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(BOB).withoutAddress().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_BOB + DIETARY_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND, new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"    public void parse_missingRsvp_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(BOB).withUnknownRsvpStatus().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"                + DIETARY_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"    public void parse_missingDietaryRequirement_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"        Guest expectedGuest \u003d new GuestBuilder(BOB).withNullDietaryRequirements().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"                + RSVP_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, new GuestAddCommand(expectedGuest));","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"        // invalid phone","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"        // invalid address","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"        // invalid rsvp","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"                + INVALID_RSVP_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, RsvpStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"        // invalid tag","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"p-xp"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"p-xp"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GuestAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":1,"p-xp":195,"wasjoe1":5}},{"path":"src/test/java/wedlog/address/logic/parser/GuestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.GuestAddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestViewCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"public class GuestCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    private static final String GUEST_ADD_PARSE_EXCEPTION_MSG \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"            \"Guest not created in GuestAddCommand due to un-evolved classes\";","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    private GuestCommandParser parser \u003d new GuestCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"    public void parseCommand_guestAdd_success() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"add n/guest p/102391\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"        assertTrue(command instanceof GuestAddCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_guestDelete() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(command instanceof GuestDeleteCommand);","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_guestList() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(\"list\") instanceof GuestListCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(\"view 3\") instanceof GuestViewCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":10,"p-xp":4,"wasjoe1":44}},{"path":"src/test/java/wedlog/address/logic/parser/GuestDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" * outside of the GuestDeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * same path through the GuestDeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"public class GuestDeleteCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    private GuestDeleteCommandParser parser \u003d new GuestDeleteCommandParser();","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    public void parse_validArgs_returnsGuestDeleteCommand() throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        assertParseSuccess(parser, \"1\", new GuestDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"                GuestDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"tllshan":3,"samuelim01":5,"wasjoe1":26}},{"path":"src/test/java/wedlog/address/logic/parser/GuestViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.GuestViewCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * outside of the GuestViewCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" * same path through the GuestViewCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"public class GuestViewCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    private GuestViewCommandParser parser \u003d new GuestViewCommandParser();","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    public void parse_validArgs_returnsGuestViewCommand() throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parse(\"1\") instanceof GuestViewCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"        // code below invalid due to un-evolved VendorViewCommand (equals method)","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        // assertParseSuccess(parser, \"1\", new GuestViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"                GuestViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":31}},{"path":"src/test/java/wedlog/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.DietaryRequirements;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_RSVP \u003d \"gibberish\";","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    private static final String VALID_RSVP_YES \u003d \"yes\";","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    private static final String VALID_RSVP_NO \u003d \"no\";","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    private static final String VALID_RSVP_UNKNOWN \u003d \"unknown\";","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"    private static final String VALID_RSVP_EMPTY \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"    private static final String VALID_DIETARY_REQUIREMENT \u003d \"anything\";","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    private static final String VALID_DIETARY_REQUIREMENT_EMPTY \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"    public void parseRsvp_null_returnsRsvpUnknown() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"        RsvpStatus expectedRsvp \u003d RsvpStatus.unknown();","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedRsvp, ParserUtil.parseRsvp((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":143,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"    public void parseRsvp_emptyString_returnsRsvpUnknown() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"        RsvpStatus expectedRsvp \u003d RsvpStatus.unknown();","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedRsvp, ParserUtil.parseRsvp(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":151,"author":{"gitId":"wasjoe1"},"content":"    public void parseRsvp_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":152,"author":{"gitId":"wasjoe1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRsvp(INVALID_RSVP));","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":154,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":155,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"    public void parseRsvp_validValueWithWhitespace_returnsTrimmedRsvp() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"wasjoe1"},"content":"        String rsvpYesWithWhitespace \u003d WHITESPACE + VALID_RSVP_YES + WHITESPACE;","lastModifiedDate":"2023-10-08"},{"lineNumber":158,"author":{"gitId":"wasjoe1"},"content":"        String rsvpNoWithWhitespace \u003d WHITESPACE + VALID_RSVP_NO + WHITESPACE;","lastModifiedDate":"2023-10-08"},{"lineNumber":159,"author":{"gitId":"wasjoe1"},"content":"        String rsvpUnknownWithWhitespace \u003d WHITESPACE + VALID_RSVP_UNKNOWN + WHITESPACE;","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedYesRsvp \u003d new RsvpStatus(VALID_RSVP_YES);","lastModifiedDate":"2023-10-08"},{"lineNumber":161,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedNoRsvp \u003d new RsvpStatus(VALID_RSVP_NO);","lastModifiedDate":"2023-10-08"},{"lineNumber":162,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedUnknownRsvp \u003d new RsvpStatus(VALID_RSVP_UNKNOWN);","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedYesRsvp, ParserUtil.parseRsvp(rsvpYesWithWhitespace));","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedNoRsvp, ParserUtil.parseRsvp(rsvpNoWithWhitespace));","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedUnknownRsvp, ParserUtil.parseRsvp(rsvpUnknownWithWhitespace));","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":167,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":168,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"    public void parseRsvp_validValueWithoutWhitespace_returnsTrimmedRsvp() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedYesRsvp \u003d new RsvpStatus(VALID_RSVP_YES);","lastModifiedDate":"2023-10-08"},{"lineNumber":171,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedNoRsvp \u003d new RsvpStatus(VALID_RSVP_NO);","lastModifiedDate":"2023-10-08"},{"lineNumber":172,"author":{"gitId":"wasjoe1"},"content":"        RsvpStatus expectedUnknownRsvp \u003d new RsvpStatus(VALID_RSVP_UNKNOWN);","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedYesRsvp, ParserUtil.parseRsvp(VALID_RSVP_YES));","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedNoRsvp, ParserUtil.parseRsvp(VALID_RSVP_NO));","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedUnknownRsvp, ParserUtil.parseRsvp(VALID_RSVP_UNKNOWN));","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":177,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":178,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"wasjoe1"},"content":"    public void parseDietary_null_isValidInput() {","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(ParserUtil.parseDietary(null).value","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"wasjoe1"},"content":"                \u003d\u003d new DietaryRequirements(null).value);","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"    public void parseDietary_emptyString_dietaryRequirementStoredAsNone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"        DietaryRequirements dietaryRequirementWithEmptyString \u003d new DietaryRequirements(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"        assertTrue(dietaryRequirementWithEmptyString.isNoneDietaryRequirement());","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":191,"author":{"gitId":"wasjoe1"},"content":"    public void parseDietary_validValueWithWhitespace_returnsDietaryRequirements() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"        String dietaryRequirementsWithWhiteSpace \u003d WHITESPACE + VALID_DIETARY_REQUIREMENT + WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"        DietaryRequirements expectedDietaryRequirements \u003d new DietaryRequirements(VALID_DIETARY_REQUIREMENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"wasjoe1"},"content":"        assertEquals(expectedDietaryRequirements, ParserUtil.parseDietary(dietaryRequirementsWithWhiteSpace));","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":196,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":197,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":198,"author":{"gitId":"wasjoe1"},"content":"    public void parseDietary_validValueWithoutWhitespace_returnsDietaryRequirements() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"p-xp"},"content":"        DietaryRequirements expectedDietaryRequirements \u003d new DietaryRequirements(VALID_DIETARY_REQUIREMENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedDietaryRequirements, ParserUtil.parseDietary(VALID_DIETARY_REQUIREMENT));","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":202,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"samuelim01":14,"p-xp":24,"wasjoe1":47,"-":186}},{"path":"src/test/java/wedlog/address/logic/parser/VendorAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.testutil.TypicalVendors.AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.VendorAddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"public class VendorAddCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    private VendorAddCommandParser parser \u003d new VendorAddCommandParser();","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand vendorAddCommand \u003d parser.parse(NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_AMY);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        assertEquals(vendorAddCommand, new VendorAddCommand(AMY));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    public void parse_onlyNamePresent_success() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        VendorAddCommand vendorAddCommand \u003d parser.parse(NAME_DESC_AMY);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        assertEquals(new VendorAddCommand(expectedVendor), vendorAddCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    public void parse_repeatedNameValue_failure() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(NAME_DESC_AMY + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    public void parse_invalidValues_failure() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_NAME_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(INVALID_EMAIL_DESC + validExpectedPersonString));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_NAME_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        // invalid email","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_EMAIL_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        // invalid phone","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_PHONE_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        // invalid address","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(validExpectedPersonString + INVALID_ADDRESS_DESC));","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"    public void parse_onlyName_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(\"Bob Choo\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB, new VendorAddCommand(expectedVendor));","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        // invalid phone","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"        // invalid email","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        // invalid address","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        // invalid tag","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, VendorAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":17,"p-xp":119,"wasjoe1":5}},{"path":"src/test/java/wedlog/address/logic/parser/VendorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import wedlog.address.logic.commands.VendorAddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorListCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorViewCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"public class VendorCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    private VendorCommandParser parser \u003d new VendorCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    // test vendor add","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_vendorAdd() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"add n/vendor p/102391\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"        assertTrue(command instanceof VendorAddCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_vendorDelete() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(command instanceof VendorDeleteCommand);","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_vendorList() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(\"list\") instanceof VendorListCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parseCommand(\"view 3\") instanceof VendorViewCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":10,"p-xp":3,"wasjoe1":44}},{"path":"src/test/java/wedlog/address/logic/parser/VendorDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorDeleteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * outside of the VendorDeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" * same path through the VendorDeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"public class VendorDeleteCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    private VendorDeleteCommandParser parser \u003d new VendorDeleteCommandParser();","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    public void parse_validArgs_returnsVendorDeleteCommand() throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parse(\"1\") instanceof VendorDeleteCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"        // code below invalid due to un-evolved VendorDeleteCommand (equals method)","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        // assertParseSuccess(parser, \"1\", new VendorDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"                VendorDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":31}},{"path":"src/test/java/wedlog/address/logic/parser/VendorViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.VendorViewCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * outside of the VendorViewCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" * same path through the VendorViewCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"public class VendorViewCommandParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    private VendorViewCommandParser parser \u003d new VendorViewCommandParser();","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    public void parse_validArgs_returnsVendorViewCommand() throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(parser.parse(\"1\") instanceof VendorViewCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"        // code below invalid due to un-evolved VendorViewCommand (equals method)","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        // assertParseSuccess(parser, \"1\", new VendorViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"             VendorViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"samuelim01":5,"wasjoe1":31}},{"path":"src/test/java/wedlog/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateGuestException;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateVendorException;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.GuestNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    // person-tests","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"    // guest-tests","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"    public void resetData_withDuplicateGuests_throwsDuplicateGuestException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        // Two guests with the same identity fields","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"        Guest editedGina \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"        List\u003cGuest\u003e newGuests \u003d Arrays.asList(GINA, editedGina);","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"        AddressBookStub newData \u003d new AddressBookStub(new ArrayList\u003c\u003e(), newGuests, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"    public void hasGuest_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasGuest(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"    public void hasGuest_guestNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"        assertFalse(addressBook.hasGuest(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"    public void hasGuest_guestInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"        assertTrue(addressBook.hasGuest(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"    public void hasGuest_guestWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"        Guest editedGina \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"        assertTrue(addressBook.hasGuest(editedGina));","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"    public void setGuest_nullTargetGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.setGuest(null, GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"    public void setGuest_nullEditedGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.setGuest(GINA, null));","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"    public void setGuest_targetGuestNotInList_throwsGuestNotFoundException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e addressBook.setGuest(GINA, GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"    public void setGuest_editedGuestHasSameIdentity_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"        Guest editedGina \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"        addressBook.setGuest(GINA, editedGina);","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"        expectedAddressBook.addGuest(editedGina);","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedAddressBook, addressBook);","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"    public void removeGuest_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.removeGuest(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"    public void removeGuest_guestExists_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"        addressBook.removeGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedAddressBook, addressBook);","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"p-xp"},"content":"    public void getGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"p-xp"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getGuestList().remove(0));","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"p-xp"},"content":"    // vendor-tests","lastModifiedDate":"2023-10-11"},{"lineNumber":182,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"    public void resetData_withDuplicateVendors_throwsDuplicateVendorException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"        // Two vendors with the same identity fields","lastModifiedDate":"2023-10-06"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAnne \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"        List\u003cVendor\u003e newVendors \u003d Arrays.asList(ANNE, editedAnne);","lastModifiedDate":"2023-10-06"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"        AddressBookStub newData \u003d new AddressBookStub(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), newVendors);","lastModifiedDate":"2023-10-11"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateVendorException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-06"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasVendor(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_vendorNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"        assertFalse(addressBook.hasVendor(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":205,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_vendorInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"        addressBook.addVendor(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":207,"author":{"gitId":"samuelim01"},"content":"        assertTrue(addressBook.hasVendor(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":208,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":209,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":210,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":211,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_vendorWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":212,"author":{"gitId":"samuelim01"},"content":"        addressBook.addVendor(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":213,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAlice \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":214,"author":{"gitId":"samuelim01"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":215,"author":{"gitId":"samuelim01"},"content":"        assertTrue(addressBook.hasVendor(editedAlice));","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":217,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":218,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":219,"author":{"gitId":"samuelim01"},"content":"    public void getVendorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":220,"author":{"gitId":"samuelim01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getVendorList().remove(0));","lastModifiedDate":"2023-10-06"},{"lineNumber":221,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":222,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":223,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"keaganpzh"},"content":"    public void getRsvpStatisticsTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"keaganpzh"},"content":"        addressBook.addGuest(GINA);","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"keaganpzh"},"content":"        addressBook.addGuest(GREG);","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new RsvpStatistics(1, 1, 0), addressBook.getRsvpStatistics());","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"p-xp"},"content":"        String expected \u003d AddressBook.class.getCanonicalName()","lastModifiedDate":"2023-10-07"},{"lineNumber":233,"author":{"gitId":"p-xp"},"content":"                + \"{persons\u003d\" + addressBook.getPersonList()","lastModifiedDate":"2023-10-07"},{"lineNumber":234,"author":{"gitId":"p-xp"},"content":"                + \", guests\u003d\" + addressBook.getGuestList()","lastModifiedDate":"2023-10-11"},{"lineNumber":235,"author":{"gitId":"samuelim01"},"content":"                + \", vendors\u003d\" + addressBook.getVendorList() + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":240,"author":{"gitId":"p-xp"},"content":"     * A stub ReadOnlyAddressBook whose persons list, guests list and vendors list can violate interface constraints.","lastModifiedDate":"2023-10-11"},{"lineNumber":241,"author":{"gitId":"samuelim01"},"content":"     * violate interface constraints.","lastModifiedDate":"2023-10-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":245,"author":{"gitId":"p-xp"},"content":"        private final ObservableList\u003cGuest\u003e guests \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-07"},{"lineNumber":246,"author":{"gitId":"samuelim01"},"content":"        private final ObservableList\u003cVendor\u003e vendors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":248,"author":{"gitId":"p-xp"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cGuest\u003e guests, Collection\u003cVendor\u003e vendors) {","lastModifiedDate":"2023-10-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":250,"author":{"gitId":"p-xp"},"content":"            this.guests.setAll(guests);","lastModifiedDate":"2023-10-07"},{"lineNumber":251,"author":{"gitId":"samuelim01"},"content":"            this.vendors.setAll(vendors);","lastModifiedDate":"2023-10-06"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":258,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":259,"author":{"gitId":"p-xp"},"content":"        @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":260,"author":{"gitId":"p-xp"},"content":"        public ObservableList\u003cGuest\u003e getGuestList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":261,"author":{"gitId":"p-xp"},"content":"            return guests;","lastModifiedDate":"2023-10-07"},{"lineNumber":262,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":263,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":264,"author":{"gitId":"samuelim01"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":265,"author":{"gitId":"samuelim01"},"content":"        public ObservableList\u003cVendor\u003e getVendorList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":266,"author":{"gitId":"samuelim01"},"content":"            return vendors;","lastModifiedDate":"2023-10-06"},{"lineNumber":267,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"samuelim01":65,"p-xp":102,"keaganpzh":8,"-":95}},{"path":"src/test/java/wedlog/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GEORGE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.BRYAN;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateGuestException;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateVendorException;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.GuestNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.VendorNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"    public void deletePerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deletePerson(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"    public void deletePerson_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e modelManager.deletePerson(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"    public void deletePerson_existingPerson_deletesPerson() {","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"        modelManager.deletePerson(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPerson(null, ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPerson(ALICE, null));","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"    public void setPerson_targetPersonDoesNotExist_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e modelManager.setPerson(ALICE, ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"        modelManager.setPerson(ALICE, ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"        modelManager.setPerson(ALICE, editedAlice);","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addPerson(editedAlice);","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"        modelManager.setPerson(ALICE, BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addPerson(BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"    public void setPerson_editedPersonIsNonUnique_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"        modelManager.addPerson(BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e modelManager.setPerson(ALICE, BOB));","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"    public void hasGuest_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasGuest(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"    public void hasGuest_guestNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-11"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"        assertFalse(modelManager.hasGuest(GEORGE));","lastModifiedDate":"2023-10-11"},{"lineNumber":185,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":186,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":187,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":188,"author":{"gitId":"samuelim01"},"content":"    public void hasGuest_guestInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":189,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-11"},{"lineNumber":190,"author":{"gitId":"samuelim01"},"content":"        assertTrue(modelManager.hasGuest(GEORGE));","lastModifiedDate":"2023-10-11"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":192,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":193,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"samuelim01"},"content":"    public void deleteGuest_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteGuest(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"samuelim01"},"content":"    public void deleteGuest_vendorDoesNotExist_throwsGuestNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"samuelim01"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e modelManager.deleteGuest(GEORGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"samuelim01"},"content":"    public void deleteGuest_existingGuest_deletesGuest() {","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"samuelim01"},"content":"        modelManager.deleteGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"samuelim01"},"content":"    public void setGuest_nullTargetGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuest(null, GEORGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":214,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":216,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"samuelim01"},"content":"    public void setGuest_nullEditedGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":218,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuest(GEORGE, null));","lastModifiedDate":"2023-10-12"},{"lineNumber":219,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"samuelim01"},"content":"    public void setGuest_targetGuestDoesNotExist_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"samuelim01"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e modelManager.setGuest(GEORGE, GEORGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":224,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":226,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":227,"author":{"gitId":"samuelim01"},"content":"    public void setGuest_editedGuestIsSameGuest_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":229,"author":{"gitId":"samuelim01"},"content":"        modelManager.setGuest(GEORGE, GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":231,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":233,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":234,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":236,"author":{"gitId":"samuelim01"},"content":"    public void setGuest_editedGuestHasSameIdentity_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":237,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":238,"author":{"gitId":"samuelim01"},"content":"        Guest editedGeorge \u003d new GuestBuilder(GEORGE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":239,"author":{"gitId":"samuelim01"},"content":"        modelManager.setGuest(GEORGE, editedGeorge);","lastModifiedDate":"2023-10-12"},{"lineNumber":240,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":241,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addGuest(editedGeorge);","lastModifiedDate":"2023-10-12"},{"lineNumber":242,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":243,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":244,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":245,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":246,"author":{"gitId":"samuelim01"},"content":"    public void setGuest_editedGuestHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":247,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":248,"author":{"gitId":"samuelim01"},"content":"        modelManager.setGuest(GEORGE, GREG);","lastModifiedDate":"2023-10-12"},{"lineNumber":249,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":250,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addGuest(GREG);","lastModifiedDate":"2023-10-12"},{"lineNumber":251,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":252,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":253,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":254,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":255,"author":{"gitId":"samuelim01"},"content":"    public void setGuest_editedGuestIsNonUnique_throwsDuplicateGuestException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":256,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":257,"author":{"gitId":"samuelim01"},"content":"        modelManager.addGuest(GREG);","lastModifiedDate":"2023-10-12"},{"lineNumber":258,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e modelManager.setGuest(GEORGE, GREG));","lastModifiedDate":"2023-10-12"},{"lineNumber":259,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":260,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":261,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":262,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":263,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasVendor(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":264,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":265,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":266,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":267,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_vendorNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-11"},{"lineNumber":268,"author":{"gitId":"samuelim01"},"content":"        assertFalse(modelManager.hasVendor(ANNE));","lastModifiedDate":"2023-10-11"},{"lineNumber":269,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":270,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":271,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":272,"author":{"gitId":"samuelim01"},"content":"    public void hasVendor_vendorInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":273,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-11"},{"lineNumber":274,"author":{"gitId":"samuelim01"},"content":"        assertTrue(modelManager.hasVendor(ANNE));","lastModifiedDate":"2023-10-11"},{"lineNumber":275,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":276,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":277,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":278,"author":{"gitId":"samuelim01"},"content":"    public void deleteVendor_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":279,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteVendor(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":280,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":281,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":282,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":283,"author":{"gitId":"samuelim01"},"content":"    public void deleteVendor_vendorDoesNotExist_throwsVendorNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":284,"author":{"gitId":"samuelim01"},"content":"        assertThrows(VendorNotFoundException.class, () -\u003e modelManager.deleteVendor(ANNE));","lastModifiedDate":"2023-10-12"},{"lineNumber":285,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":286,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":287,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":288,"author":{"gitId":"samuelim01"},"content":"    public void deleteVendor_existingVendor_deletesVendor() {","lastModifiedDate":"2023-10-12"},{"lineNumber":289,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":290,"author":{"gitId":"samuelim01"},"content":"        modelManager.deleteVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":291,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":292,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":293,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":294,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":295,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":296,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_nullTargetVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":297,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setVendor(null, ANNE));","lastModifiedDate":"2023-10-12"},{"lineNumber":298,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":299,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":300,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":301,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_nullEditedVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":302,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setVendor(ANNE, null));","lastModifiedDate":"2023-10-12"},{"lineNumber":303,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":304,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":305,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":306,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_targetVendorDoesNotExist_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":307,"author":{"gitId":"samuelim01"},"content":"        assertThrows(VendorNotFoundException.class, () -\u003e modelManager.setVendor(ANNE, ANNE));","lastModifiedDate":"2023-10-12"},{"lineNumber":308,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":309,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":310,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":311,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorIsSameVendor_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":312,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":313,"author":{"gitId":"samuelim01"},"content":"        modelManager.setVendor(ANNE, ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":314,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":315,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":316,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":317,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":318,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":319,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":320,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorHasSameIdentity_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":321,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":322,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAnne \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":323,"author":{"gitId":"samuelim01"},"content":"        modelManager.setVendor(ANNE, editedAnne);","lastModifiedDate":"2023-10-12"},{"lineNumber":324,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":325,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addVendor(editedAnne);","lastModifiedDate":"2023-10-12"},{"lineNumber":326,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":327,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":328,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":329,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":330,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":331,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":332,"author":{"gitId":"samuelim01"},"content":"        modelManager.setVendor(ANNE, BRYAN);","lastModifiedDate":"2023-10-12"},{"lineNumber":333,"author":{"gitId":"samuelim01"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":334,"author":{"gitId":"samuelim01"},"content":"        expectedModelManager.addVendor(BRYAN);","lastModifiedDate":"2023-10-12"},{"lineNumber":335,"author":{"gitId":"samuelim01"},"content":"        assertEquals(modelManager, expectedModelManager);","lastModifiedDate":"2023-10-12"},{"lineNumber":336,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":337,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":338,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":339,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorIsNonUnique_throwsDuplicateVendorException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":340,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(ANNE);","lastModifiedDate":"2023-10-12"},{"lineNumber":341,"author":{"gitId":"samuelim01"},"content":"        modelManager.addVendor(BRYAN);","lastModifiedDate":"2023-10-12"},{"lineNumber":342,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateVendorException.class, () -\u003e modelManager.setVendor(ANNE, BRYAN));","lastModifiedDate":"2023-10-12"},{"lineNumber":343,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":344,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":350,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":351,"author":{"gitId":"samuelim01"},"content":"    public void getFilteredGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":352,"author":{"gitId":"samuelim01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredGuestList().remove(0));","lastModifiedDate":"2023-10-11"},{"lineNumber":353,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":354,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":355,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":356,"author":{"gitId":"samuelim01"},"content":"    public void getFilteredVendorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":357,"author":{"gitId":"samuelim01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredVendorList().remove(0));","lastModifiedDate":"2023-10-11"},{"lineNumber":358,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":359,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":360,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":361,"author":{"gitId":"keaganpzh"},"content":"    public void getRsvpStatisticsTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":362,"author":{"gitId":"keaganpzh"},"content":"        modelManager.addGuest(GEORGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":363,"author":{"gitId":"keaganpzh"},"content":"        modelManager.addGuest(GREG);","lastModifiedDate":"2023-10-19"},{"lineNumber":364,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new RsvpStatistics(1, 1, 0), modelManager.getRsvpStatistics());","lastModifiedDate":"2023-10-19"},{"lineNumber":365,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":366,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":369,"author":{"gitId":"samuelim01"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder()","lastModifiedDate":"2023-10-12"},{"lineNumber":370,"author":{"gitId":"samuelim01"},"content":"                .withPerson(ALICE).withPerson(BENSON)","lastModifiedDate":"2023-10-12"},{"lineNumber":371,"author":{"gitId":"samuelim01"},"content":"                .withGuest(GEORGE).withGuest(GREG)","lastModifiedDate":"2023-10-12"},{"lineNumber":372,"author":{"gitId":"samuelim01"},"content":"                .withVendor(ANNE).withVendor(BRYAN)","lastModifiedDate":"2023-10-12"},{"lineNumber":373,"author":{"gitId":"samuelim01"},"content":"                .build();","lastModifiedDate":"2023-10-12"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":394,"author":{"gitId":"samuelim01"},"content":"        // different person filteredList -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":395,"author":{"gitId":"samuelim01"},"content":"        String[] personKeywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-12"},{"lineNumber":396,"author":{"gitId":"samuelim01"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(personKeywords)));","lastModifiedDate":"2023-10-12"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":402,"author":{"gitId":"samuelim01"},"content":"        // different guest filteredList -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":403,"author":{"gitId":"samuelim01"},"content":"        String[] guestKeywords \u003d GEORGE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-12"},{"lineNumber":404,"author":{"gitId":"samuelim01"},"content":"        modelManager.updateFilteredGuestList(new NameContainsKeywordsPredicate(Arrays.asList(guestKeywords)));","lastModifiedDate":"2023-10-12"},{"lineNumber":405,"author":{"gitId":"samuelim01"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-10-12"},{"lineNumber":406,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":407,"author":{"gitId":"samuelim01"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-10-12"},{"lineNumber":408,"author":{"gitId":"samuelim01"},"content":"        modelManager.updateFilteredGuestList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-12"},{"lineNumber":409,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":410,"author":{"gitId":"samuelim01"},"content":"        // different vendor filteredList -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":411,"author":{"gitId":"samuelim01"},"content":"        String[] vendorKeywords \u003d ANNE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-12"},{"lineNumber":412,"author":{"gitId":"samuelim01"},"content":"        modelManager.updateFilteredVendorList(new NameContainsKeywordsPredicate(Arrays.asList(vendorKeywords)));","lastModifiedDate":"2023-10-12"},{"lineNumber":413,"author":{"gitId":"samuelim01"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-10-12"},{"lineNumber":414,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":415,"author":{"gitId":"samuelim01"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-10-12"},{"lineNumber":416,"author":{"gitId":"samuelim01"},"content":"        modelManager.updateFilteredVendorList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-12"},{"lineNumber":417,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":423,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"samuelim01":296,"keaganpzh":7,"-":120}},{"path":"src/test/java/wedlog/address/model/RsvpStatisticsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"public class RsvpStatisticsTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"    private final RsvpStatistics testRsvpStatistics \u003d new RsvpStatistics(50, 20, 30);","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new RsvpStatistics(50, 20, 30), testRsvpStatistics);","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    public void testEquals_same() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(new RsvpStatistics(50, 20, 30), new RsvpStatistics(50, 20, 30));","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    public void testEquals_notSame() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"        assertNotEquals(new RsvpStatistics(50, 20, 30), new RsvpStatistics(50, 30, 20));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"keaganpzh":26}},{"path":"src/test/java/wedlog/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"samuelim01":2,"-":19}},{"path":"src/test/java/wedlog/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"samuelim01":2,"-":54}},{"path":"src/test/java/wedlog/address/model/person/DietaryRequirementsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":" * Simple test class for DietaryRequirements.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":" *","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":" * @version v1.2","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"public class DietaryRequirementsTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    public void equals() {","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirements dr \u003d new DietaryRequirements(\"Halal\");","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(dr.equals(dr));","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirements drCopy \u003d new DietaryRequirements(dr.value);","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(dr.equals(drCopy));","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(dr.equals(1));","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(dr.equals(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        // different dr -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirements differentDr \u003d new DietaryRequirements(\"Vegan\");","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(dr.equals(differentDr));","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        // same none status -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements noneDr \u003d new DietaryRequirements(\"\");","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements noneDrCopy \u003d new DietaryRequirements(\"\");","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"        assertTrue(noneDr.equals(noneDrCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        // same none status with spacing -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements noneSpacedDrCopy \u003d new DietaryRequirements(\" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        assertTrue(noneDr.equals(noneSpacedDrCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        // same null value -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements nullDr \u003d new DietaryRequirements(null);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements nullDrCopy \u003d new DietaryRequirements(null);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        assertTrue(nullDr.equals(nullDrCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        assertFalse(dr.equals(noneDr));","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        assertFalse(noneDr.equals(nullDrCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"    void isNoneDietaryRequirement() {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        // present dietary requirement","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements dr \u003d new DietaryRequirements(\"Halal\");","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        assertFalse(dr.isNoneDietaryRequirement());","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        // none dietary requirement","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        DietaryRequirements noneDr \u003d new DietaryRequirements(\"\");","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        assertTrue(noneDr.isNoneDietaryRequirement());","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        // none dietary requirement with spacing","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements noneSpacedDr \u003d new DietaryRequirements(\" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        assertTrue(noneSpacedDr.isNoneDietaryRequirement());","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        // null dietary requirement","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"        DietaryRequirements nullDr \u003d new DietaryRequirements(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        assertFalse(nullDr.isNoneDietaryRequirement());","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"    void isNullDietaryRequirement() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        // present dietary requirement","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements dr \u003d new DietaryRequirements(\"Halal\");","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        assertFalse(dr.isNullDietaryRequirement());","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        // none dietary requirement","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements noneDr \u003d new DietaryRequirements(\"\");","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        assertFalse(noneDr.isNullDietaryRequirement());","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        // none dietary requirement with spacing","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements noneSpacedDr \u003d new DietaryRequirements(\" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        assertFalse(noneSpacedDr.isNullDietaryRequirement());","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"        // null dietary requirement","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        DietaryRequirements nullDr \u003d new DietaryRequirements(null);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        assertTrue(nullDr.isNullDietaryRequirement());","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"samuelim01":52,"wasjoe1":5,"keaganpzh":36}},{"path":"src/test/java/wedlog/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"samuelim01":2,"-":86}},{"path":"src/test/java/wedlog/address/model/person/GuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_RSVP_STATUS_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_TAGS;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":" * Simplified test class for Guest.","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":" * More detailed tests to be written in the future.","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":" *","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":" * @version v1.2","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"public class GuestTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    public static final DietaryRequirements VALID_DIETARY_REQUIREMENTS \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"            new DietaryRequirements(VALID_DIETARY_REQUIREMENTS_AMY);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"    public static final RsvpStatus VALID_RSVP_STATUS \u003d new RsvpStatus(VALID_RSVP_STATUS_AMY);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        // Name Null","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Guest(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"                VALID_ADDRESS, VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        // Phone Null","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Guest(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"                VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        // Email Null","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Guest(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"                VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        // Address Null","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Guest(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"                VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"        // Dietary Requirements Null","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"        assertDoesNotThrow(() -\u003e new Guest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"                VALID_ADDRESS, VALID_RSVP_STATUS, null, VALID_TAGS));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        // Rsvp Status Null","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Guest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"                VALID_ADDRESS, null, VALID_DIETARY_REQUIREMENTS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        // Tags Null","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Guest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"                VALID_ADDRESS, VALID_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, null));","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"    public void equals() {","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        Guest ginaCopy \u003d new GuestBuilder(GINA).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        assertTrue(GINA.equals(ginaCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        assertTrue(GINA.equals(GINA));","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"keaganpzh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        // different guest -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(GREG));","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        Guest editedGina \u003d new GuestBuilder(GINA).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"        // edited rsvp status -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withRsvpStatus(VALID_RSVP_STATUS_AMY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        // edited dietary requirements -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withDietaryRequirements(VALID_DIETARY_REQUIREMENTS_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        // no phone -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withoutPhone().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"        // no email -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withoutEmail().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"        // no address -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        editedGina \u003d new GuestBuilder(GINA).withoutAddress().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"        assertFalse(GINA.equals(editedGina));","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"keaganpzh"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"keaganpzh"},"content":"        Name name \u003d new Name(\"Bob\");","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"keaganpzh"},"content":"        Phone phone \u003d new Phone(\"91234567\");","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"keaganpzh"},"content":"        Email email \u003d new Email(\"bob@bob.com\");","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"keaganpzh"},"content":"        Address address \u003d new Address(\"Blk 123\");","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"keaganpzh"},"content":"        DietaryRequirements dietaryRequirements \u003d new DietaryRequirements(\"Halal\");","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"keaganpzh"},"content":"        RsvpStatus rsvpStatus \u003d new RsvpStatus(\"yes\");","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"keaganpzh"},"content":"        Tag tag \u003d new Tag(\"friend\");","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"keaganpzh"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"keaganpzh"},"content":"        tags.add(tag);","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"keaganpzh"},"content":"        Guest guest \u003d new Guest(name, phone, email, address, rsvpStatus, dietaryRequirements, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"keaganpzh"},"content":"        String expected \u003d Guest.class.getCanonicalName() + \"{name\u003d\" + guest.getName() + \", phone\u003d\" + guest.getPhone()","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"keaganpzh"},"content":"                + \", email\u003d\" + guest.getEmail() + \", address\u003d\" + guest.getAddress()","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"keaganpzh"},"content":"                + \", rsvpStatus\u003d\" + guest.getRsvpStatus() + \", dietaryRequirements\u003d\" + guest.getDietaryRequirements()","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"keaganpzh"},"content":"                + \", tags\u003d\" + guest.getTags() + \"}\";","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(expected, guest.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"samuelim01":100,"keaganpzh":56}},{"path":"src/test/java/wedlog/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"samuelim01":2,"-":83}},{"path":"src/test/java/wedlog/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"samuelim01":2,"-":58}},{"path":"src/test/java/wedlog/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    public static final Name VALID_NAME \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    public static final Phone VALID_PHONE \u003d new Phone(VALID_PHONE_BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    public static final Email VALID_EMAIL \u003d new Email(VALID_EMAIL_BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    public static final Address VALID_ADDRESS \u003d new Address(VALID_EMAIL_BOB);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    public static final Set\u003cTag\u003e VALID_TAGS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"        // null name","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, VALID_PHONE,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        // null phone","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Person(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        // null email","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Person(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        // null address","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Person(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        // null tags","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, VALID_PHONE,","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"samuelim01":40,"-":90}},{"path":"src/test/java/wedlog/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"samuelim01":2,"-":58}},{"path":"src/test/java/wedlog/address/model/person/RsvpStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":" * Test class for RsvpStatus.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":" *","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":" * @version v1.2","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"public class RsvpStatusTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RsvpStatus(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    public void constructor_invalidRsvpStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"        String invalidRsvpStatus \u003d \"\";","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RsvpStatus(invalidRsvpStatus));","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"    public void isValidRsvpStatus() {","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"        // null rsvp status","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"        assertThrows(NullPointerException.class, () -\u003e RsvpStatus.isValidRsvpStatus(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        // invalid rsvp status","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(RsvpStatus.isValidRsvpStatus(\"\")); // empty string","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(RsvpStatus.isValidRsvpStatus(\" \")); // spaces only","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(RsvpStatus.isValidRsvpStatus(\"yesno\")); // more than 1 word","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(RsvpStatus.isValidRsvpStatus(\"nonsense\")); // invalid keyword","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"        // valid rsvp status","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"yes\"));","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"no\"));","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"Yes\")); // capitalised","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"No\")); // capitalised","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"unknown\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(RsvpStatus.isValidRsvpStatus(\"Unknown\")); // capitalised","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"    public void equals() {","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"        RsvpStatus rsvpStatus \u003d new RsvpStatus(\"yes\");","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(rsvpStatus.equals(new RsvpStatus(\"yes\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"        // same values but capitalised -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(rsvpStatus.equals(new RsvpStatus(\"Yes\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"        assertTrue(rsvpStatus.equals(rsvpStatus));","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(rsvpStatus.equals(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(rsvpStatus.equals(5.0f));","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"        assertFalse(rsvpStatus.equals(new RsvpStatus(\"no\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        assertFalse(rsvpStatus.equals(new RsvpStatus(\"unknown\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        // different constructor -\u003e return true","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"        RsvpStatus unknownRsvpStatus \u003d new RsvpStatus(\"unknown\");","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        assertTrue(unknownRsvpStatus.equals(RsvpStatus.unknown()));","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"samuelim01":7,"keaganpzh":69}},{"path":"src/test/java/wedlog/address/model/person/UniqueGuestListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GABRIEL;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"import static wedlog.address.testutil.TypicalGuests.GIDEON;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateGuestException;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.GuestNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"public class UniqueGuestListTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    private final UniqueGuestList uniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    public void contains_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.contains(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    public void contains_guestNotInList_returnsFalse() {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"        assertFalse(uniqueGuestList.contains(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    public void contains_guestInList_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        assertTrue(uniqueGuestList.contains(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        Guest editedGina \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        assertTrue(uniqueGuestList.contains(editedGina));","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    public void add_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.add(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    public void add_duplicateGuest_throwsDuplicateGuestException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e uniqueGuestList.add(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    public void setGuest_nullTargetGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuest(null, GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"    public void setGuest_nullEditedGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuest(GINA, null));","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    public void setGuest_targetGuestNotInList_throwsGuestNotFoundException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e uniqueGuestList.setGuest(GINA, GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"    public void setGuest_editedGuestIsSameGuest_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.setGuest(GINA, GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"        expectedUniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    public void setGuest_editedGuestHasSameIdentity_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"        Guest editedAlice \u003d new GuestBuilder(GINA).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.setGuest(GINA, editedAlice);","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"        expectedUniqueGuestList.add(editedAlice);","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"    public void setGuest_editedGuestHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.setGuest(GINA, GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        expectedUniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"    public void setGuest_editedGuestHasNonUniqueIdentity_throwsDuplicateGuestException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e uniqueGuestList.setGuest(GINA, GREG));","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"    public void remove_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.remove(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"    public void remove_guestDoesNotExist_throwsGuestNotFoundException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e uniqueGuestList.remove(GINA));","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"    public void remove_existingGuest_removesGuest() {","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.remove(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"p-xp"},"content":"    public void setGuests_nullUniqueGuestList_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuests((UniqueGuestList) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"p-xp"},"content":"    public void setGuests_uniqueGuestList_replacesOwnListWithProvidedUniqueGuestList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"p-xp"},"content":"        expectedUniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.setGuests(expectedUniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"p-xp"},"content":"    public void setGuests_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"p-xp"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuests((List\u003cGuest\u003e) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"p-xp"},"content":"    public void setGuests_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"p-xp"},"content":"        List\u003cGuest\u003e personList \u003d Collections.singletonList(GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"        uniqueGuestList.setGuests(personList);","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"        expectedUniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"    public void setGuests_listWithDuplicateGuests_throwsDuplicateGuestException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"        List\u003cGuest\u003e listWithDuplicateGuests \u003d Arrays.asList(GINA, GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e uniqueGuestList.setGuests(listWithDuplicateGuests));","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"                -\u003e uniqueGuestList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"keaganpzh"},"content":"    public void getNumGuestsRsvpYes() {","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GABRIEL);","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GIDEON);","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(1, uniqueGuestList.getNumGuestsRsvpYes());","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"keaganpzh"},"content":"    public void getNumGuestsRsvpNo() {","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GABRIEL);","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GIDEON);","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(1, uniqueGuestList.getNumGuestsRsvpNo());","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"keaganpzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"keaganpzh"},"content":"    public void getNumGuestsRsvpUnknown() {","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GABRIEL);","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GIDEON);","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GINA);","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"keaganpzh"},"content":"        uniqueGuestList.add(GREG);","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"keaganpzh"},"content":"        assertEquals(2, uniqueGuestList.getNumGuestsRsvpUnknown());","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":201,"author":{"gitId":"p-xp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":202,"author":{"gitId":"p-xp"},"content":"        assertEquals(uniqueGuestList.asUnmodifiableObservableList().toString(), uniqueGuestList.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":203,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":204,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":9,"p-xp":166,"keaganpzh":29}},{"path":"src/test/java/wedlog/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"samuelim01":9,"-":166}},{"path":"src/test/java/wedlog/address/model/person/UniqueVendorListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.DuplicateVendorException;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.exceptions.VendorNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"public class UniqueVendorListTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    private final UniqueVendorList uniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    public void contains_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.contains(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"    public void contains_vendorNotInList_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"        assertFalse(uniqueVendorList.contains(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    public void contains_vendorInList_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        assertTrue(uniqueVendorList.contains(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    public void contains_vendorWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAnne \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        assertTrue(uniqueVendorList.contains(editedAnne));","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"    public void add_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.add(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"    public void add_duplicateVendor_throwsDuplicateVendorException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateVendorException.class, () -\u003e uniqueVendorList.add(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_nullTargetVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setVendor(null, ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_nullEditedVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setVendor(ANNE, null));","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_targetVendorNotInList_throwsVendorNotFoundException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"        assertThrows(VendorNotFoundException.class, () -\u003e uniqueVendorList.setVendor(ANNE, ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorIsSameVendor_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.setVendor(ANNE, ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"        expectedUniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorHasSameIdentity_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAlice \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"                .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.setVendor(ANNE, editedAlice);","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        expectedUniqueVendorList.add(editedAlice);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.setVendor(ANNE, BOB);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        expectedUniqueVendorList.add(BOB);","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"    public void setVendor_editedVendorHasNonUniqueIdentity_throwsDuplicateVendorException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(BOB);","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateVendorException.class, () -\u003e uniqueVendorList.setVendor(ANNE, BOB));","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"    public void remove_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.remove(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"    public void remove_vendorDoesNotExist_throwsVendorNotFoundException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"        assertThrows(VendorNotFoundException.class, () -\u003e uniqueVendorList.remove(ANNE));","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"    public void remove_existingVendor_removesVendor() {","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.remove(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"    public void setVendors_nullUniqueVendorList_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setVendors((UniqueVendorList) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"    public void setVendors_uniqueVendorList_replacesOwnListWithProvidedUniqueVendorList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"        expectedUniqueVendorList.add(BOB);","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.setVendors(expectedUniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"    public void setVendors_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setVendors((List\u003cVendor\u003e) null));","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"    public void setVendors_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.add(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"        List\u003cVendor\u003e vendorList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"        uniqueVendorList.setVendors(vendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"        expectedUniqueVendorList.add(BOB);","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"    public void setVendors_listWithDuplicateVendors_throwsDuplicateVendorException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"        List\u003cVendor\u003e listWithDuplicateVendors \u003d Arrays.asList(ANNE, ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"        assertThrows(DuplicateVendorException.class, () -\u003e uniqueVendorList.setVendors(listWithDuplicateVendors));","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"            -\u003e uniqueVendorList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"        assertEquals(uniqueVendorList.asUnmodifiableObservableList().toString(), uniqueVendorList.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":175}},{"path":"src/test/java/wedlog/address/model/person/VendorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.model.person.PersonTest.VALID_TAGS;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.BRYAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":" * Simplified test class for Vendor.","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":" * More detailed tests to be written in the future.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":" *","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":" * @author Shannon","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":" * @version v1.2","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"public class VendorTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"        // null name","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Vendor(null, VALID_PHONE,","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        // null phone","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Vendor(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"        // null email","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Vendor(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"        // null address","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        assertDoesNotThrow(() -\u003e new Vendor(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"        // null tags","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Vendor(null, VALID_PHONE,","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"    public void isSameVendor() {","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        Name name \u003d new Name(\"ABC Catering\");","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        Phone phone \u003d new Phone(\"61234567\");","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        Email email \u003d new Email(\"abc@catering.com\");","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        Address address \u003d new Address(\"Blk 123\");","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        Tag tag \u003d new Tag(\"caterer\");","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"        tags.add(tag);","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"        Vendor vendor \u003d new Vendor(name, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        assertTrue(vendor.isSamePerson(vendor));","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendor.isSamePerson(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        Phone phone1 \u003d new Phone(\"6123456\");","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"        Email email1 \u003d new Email(\"diff@catering.com\");","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"        Address address1 \u003d new Address(\"Blk 321\");","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"        Vendor editedVendor \u003d new Vendor(name, phone1, email1, address1, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"        assertTrue(vendor.isSamePerson(editedVendor));","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"        Name name1 \u003d new Name(\"XYZ Catering\");","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"        editedVendor \u003d new Vendor(name1, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendor.isSamePerson(editedVendor));","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        Name name2 \u003d new Name(\"ABC CATERING\");","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"        editedVendor \u003d new Vendor(name2, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendor.isSamePerson(editedVendor));","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        Name name3 \u003d new Name(\"ABC Catering \");","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"        editedVendor \u003d new Vendor(name3, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"        assertFalse(vendor.isSamePerson(editedVendor));","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        Vendor anneCopy \u003d new VendorBuilder(ANNE).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        assertTrue(ANNE.equals(anneCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        assertTrue(ANNE.equals(ANNE));","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"        // different vendor -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(BRYAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"        Vendor editedAnne \u003d new VendorBuilder(ANNE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"        // no phone -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withoutPhone().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"        // no email -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withoutEmail().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        // no address -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"        editedAnne \u003d new VendorBuilder(ANNE).withoutAddress().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"        assertFalse(ANNE.equals(editedAnne));","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"        Name name \u003d new Name(\"ABC Catering\");","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"        Phone phone \u003d new Phone(\"61234567\");","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"        Email email \u003d new Email(\"abc@catering.com\");","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"tllshan"},"content":"        Address address \u003d new Address(\"Blk 123\");","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"tllshan"},"content":"        Tag tag \u003d new Tag(\"caterer\");","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"        tags.add(tag);","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"tllshan"},"content":"        Vendor vendor \u003d new Vendor(name, phone, email, address, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"tllshan"},"content":"        String expected \u003d Vendor.class.getCanonicalName() + \"{name\u003d\" + vendor.getName() + \", phone\u003d\" + vendor.getPhone()","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"tllshan"},"content":"                + \", email\u003d\" + vendor.getEmail() + \", address\u003d\" + vendor.getAddress()","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"tllshan"},"content":"                + \", tags\u003d\" + vendor.getTags() + \"}\";","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"tllshan"},"content":"        assertEquals(expected, vendor.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"tllshan":92,"samuelim01":78}},{"path":"src/test/java/wedlog/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.model.tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"samuelim01":2,"-":24}},{"path":"src/test/java/wedlog/address/storage/JsonAdaptedGuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.storage.JsonAdaptedGuest.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GABRIEL;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GINA;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalGuests.GREG;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"p-xp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"p-xp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.GuestBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"public class JsonAdaptedGuestTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_RSVP_STATUS \u003d \"idk\";","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    private static final String VALID_NAME \u003d GINA.getName().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    private static final String VALID_PHONE \u003d GINA.getPhone().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"    private static final String VALID_EMAIL \u003d GINA.getEmail().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    private static final String VALID_ADDRESS \u003d GINA.getAddress().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"    private static final String VALID_RSVP_STATUS \u003d GINA.getRsvpStatus().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_YES_RSVP_STATUS \u003d GINA.getRsvpStatus().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_NO_RSVP_STATUS \u003d GREG.getRsvpStatus().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_UNKNOWN_RSVP_STATUS \u003d GABRIEL.getRsvpStatus().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_DIETARY_REQUIREMENTS \u003d GINA.getDietaryRequirements().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_NONE_DIETARY_REQUIREMENTS \u003d GREG.getDietaryRequirements().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_NULL_DIETARY_REQUIREMENTS \u003d GABRIEL.getDietaryRequirements().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_PRESENT_DIETARY_REQUIREMENTS \u003d GINA.getDietaryRequirements().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d GINA.getTags().stream()","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    public void toModelType_validGuestDetails_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(GINA);","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        assertEquals(GINA, guest.toModelType());","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullPhone_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).withoutPhone().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(expectedGuest);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullEmail_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).withoutEmail().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(expectedGuest);","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullAddress_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).withoutAddress().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(expectedGuest);","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidRsvpStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_RSVP_STATUS,","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d RsvpStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullRsvpStatus_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null,","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"                        VALID_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"                RsvpStatus.class.getSimpleName());","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_validRsvpStatus_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"        // yes rsvp status","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"                        VALID_YES_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).withRsvpStatus(VALID_YES_RSVP_STATUS).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"        // no rsvp status","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"        guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"                VALID_NO_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"        expectedGuest \u003d new GuestBuilder(GINA).withRsvpStatus(VALID_NO_RSVP_STATUS).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"samuelim01"},"content":"        // unknown rsvp status","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"samuelim01"},"content":"        guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"samuelim01"},"content":"                VALID_UNKNOWN_RSVP_STATUS, VALID_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"samuelim01"},"content":"        expectedGuest \u003d new GuestBuilder(GINA).withRsvpStatus(VALID_UNKNOWN_RSVP_STATUS).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_validDietaryRequirements_returnsGuest() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"samuelim01"},"content":"        // none dietary requirements status","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"samuelim01"},"content":"                        VALID_RSVP_STATUS, VALID_NONE_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"samuelim01"},"content":"        Guest expectedGuest \u003d new GuestBuilder(GINA).withDietaryRequirements(VALID_NONE_DIETARY_REQUIREMENTS).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"samuelim01"},"content":"        // null dietary requirements status","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"samuelim01"},"content":"        guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"samuelim01"},"content":"                        VALID_RSVP_STATUS, VALID_NULL_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"samuelim01"},"content":"        expectedGuest \u003d new GuestBuilder(GINA).withDietaryRequirements(VALID_NULL_DIETARY_REQUIREMENTS).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"samuelim01"},"content":"        // present dietary requirements status","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"samuelim01"},"content":"        guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"samuelim01"},"content":"                        VALID_RSVP_STATUS, VALID_PRESENT_DIETARY_REQUIREMENTS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"samuelim01"},"content":"        expectedGuest \u003d new GuestBuilder(GINA).withDietaryRequirements(VALID_PRESENT_DIETARY_REQUIREMENTS).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedGuest, guest.toModelType());","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"p-xp"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"p-xp"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"p-xp"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"p-xp"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_RSVP_STATUS,","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"samuelim01"},"content":"                        VALID_DIETARY_REQUIREMENTS, invalidTags);","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, guest::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":195,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":101,"p-xp":94}},{"path":"src/test/java/wedlog/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullPhone_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withoutPhone().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(expectedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullEmail_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withoutEmail().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(expectedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullAddress_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withoutAddress().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(expectedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":23,"-":89}},{"path":"src/test/java/wedlog/address/storage/JsonAdaptedVendorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.BRYAN;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.VendorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"public class JsonAdaptedVendorTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_NAME \u003d BRYAN.getName().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_PHONE \u003d BRYAN.getPhone().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_EMAIL \u003d BRYAN.getEmail().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"    private static final String VALID_ADDRESS \u003d BRYAN.getAddress().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BRYAN.getTags().stream()","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_validVendorDetails_returnsVendor() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(BRYAN);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"        assertEquals(BRYAN, vendor.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedVendor(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedVendor.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"                Name.class.getSimpleName());","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedVendor(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullPhone_returnsVendor() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(BRYAN).withoutPhone().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(expectedVendor);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedVendor, vendor.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullEmail_returnsVendor() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(BRYAN).withoutEmail().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(expectedVendor);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedVendor, vendor.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_nullAddress_returnsVendor() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(BRYAN).withoutAddress().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(expectedVendor);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        assertEquals(expectedVendor, vendor.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, vendor::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":112}},{"path":"src/test/java/wedlog/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.ANNE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.HENRY;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalVendors.IRENE;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalVendors;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"    public void readAndSavePersonOnlyAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"        AddressBook original \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"    public void readAndSaveVendorOnlyAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"        AddressBook original \u003d TypicalVendors.getTypicalAddressBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        original.addVendor(HENRY);","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        original.removeVendor(ANNE);","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"        original.addVendor(IRENE);","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":39,"-":99}},{"path":"src/test/java/wedlog/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.testutil.TypicalVendors;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"    private static final Path TYPICAL_GUESTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalGuestsAddressBook.json\");","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"    private static final Path INVALID_GUEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidGuestAddressBook.json\");","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    private static final Path DUPLICATE_GUEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGuestAddressBook.json\");","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private static final Path TYPICAL_VENDORS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalVendorsAddressBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    private static final Path INVALID_VENDOR_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidVendorAddressBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    private static final Path DUPLICATE_VENDOR_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateVendorAddressBook.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"    // guests-test","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"    public void toModelType_invalidGuestFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_GUEST_FILE,","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"    public void toModelType_duplicateGuests_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_GUEST_FILE,","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_GUEST,","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"    // vendors-test","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_typicalVendorsFile_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_VENDORS_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"        AddressBook typicalVendorsAddressBook \u003d TypicalVendors.getTypicalAddressBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"        assertEquals(addressBookFromFile, typicalVendorsAddressBook);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_invalidVendorFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_VENDOR_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"    public void toModelType_duplicateVendors_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_VENDOR_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_VENDOR,","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samuelim01":33,"p-xp":22,"-":41}},{"path":"src/test/java/wedlog/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samuelim01":5,"-":118}},{"path":"src/test/java/wedlog/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":6,"-":62}},{"path":"src/test/java/wedlog/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"     * Adds a new {@code Guest} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"    public AddressBookBuilder withGuest(Guest guest) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        addressBook.addGuest(guest);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"     * Adds a new {@code Vendor} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"    public AddressBookBuilder withVendor(Vendor vendor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"        addressBook.addVendor(vendor);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":21,"-":31}},{"path":"src/test/java/wedlog/address/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"samuelim01":1,"-":33}},{"path":"src/test/java/wedlog/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"samuelim01":8,"-":79}},{"path":"src/test/java/wedlog/address/testutil/GuestBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"p-xp"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.DietaryRequirements;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.RsvpStatus;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":" * A utility class to help with building Guest objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"public class GuestBuilder {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Gee\";","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_RSVP_STATUS \u003d \"yes\";","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":"    public static final String DEFAULT_DIETARY_REQUIREMENTS \u003d \"vegan\";","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"    private Name name;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"    private Email email;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"    private Address address;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"    private RsvpStatus rsvpStatus;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"    private DietaryRequirements dietaryRequirements;","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"     * Creates a {@code GuestBuilder} with the default details.","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder() {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"        rsvpStatus \u003d new RsvpStatus(DEFAULT_RSVP_STATUS);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        dietaryRequirements \u003d new DietaryRequirements(DEFAULT_DIETARY_REQUIREMENTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"     * Creates a {@code GuestBuilder} with only the given name.","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"        phone \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"        email \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"        address \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"        rsvpStatus \u003d RsvpStatus.unknown();","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"        dietaryRequirements \u003d new DietaryRequirements(null);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"     * Initializes the GuestBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder(Guest guestToCopy) {","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"        name \u003d guestToCopy.getName();","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"        phone \u003d guestToCopy.getPhone();","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"        email \u003d guestToCopy.getEmail();","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"        address \u003d guestToCopy.getAddress();","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"        rsvpStatus \u003d guestToCopy.getRsvpStatus();","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"        dietaryRequirements \u003d guestToCopy.getDietaryRequirements();","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"        tags \u003d new HashSet\u003c\u003e(guestToCopy.getTags());","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Name} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withName(String name) {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"p-xp"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Address} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withAddress(String address) {","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"p-xp"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Phone} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"p-xp"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Email} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withEmail(String email) {","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"p-xp"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code RsvpStatus} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withRsvpStatus(String rsvpStatus) {","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"p-xp"},"content":"        this.rsvpStatus \u003d new RsvpStatus(rsvpStatus);","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code DietaryRequirements} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withDietaryRequirements(String dietaryRequirements) {","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"p-xp"},"content":"        this.dietaryRequirements \u003d new DietaryRequirements(dietaryRequirements);","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Address} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"samuelim01"},"content":"    public GuestBuilder withoutAddress() {","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"samuelim01"},"content":"        this.address \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Phone} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"samuelim01"},"content":"    public GuestBuilder withoutPhone() {","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"samuelim01"},"content":"        this.phone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Email} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"samuelim01"},"content":"    public GuestBuilder withoutEmail() {","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"samuelim01"},"content":"        this.email \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code RsvpStatus} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withUnknownRsvpStatus() {","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"p-xp"},"content":"        this.rsvpStatus \u003d RsvpStatus.unknown();","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"p-xp"},"content":"     * Sets the {@code Dietary Requirements} of the {@code Guest} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"p-xp"},"content":"    public GuestBuilder withNullDietaryRequirements() {","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"p-xp"},"content":"        this.dietaryRequirements \u003d new DietaryRequirements(null);","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"p-xp"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"p-xp"},"content":"    public Guest build() {","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"p-xp"},"content":"        return new Guest(name, phone, email, address, rsvpStatus, dietaryRequirements, tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":34,"p-xp":141}},{"path":"src/test/java/wedlog/address/testutil/GuestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_DIETARY;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_RSVP;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":" * A utility class for Person.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"public class GuestUtil {","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     * Returns the part of command string for the given {@code guest}\u0027s details.","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"    public static String getGuestDetails(Guest guest) {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"        sb.append(PREFIX_NAME + guest.getName().fullName + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        sb.append(PREFIX_PHONE + guest.getPhone().value + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"        sb.append(PREFIX_EMAIL + guest.getEmail().value + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"        sb.append(PREFIX_ADDRESS + guest.getAddress().value + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"        sb.append(PREFIX_RSVP + guest.getRsvpStatus().toString() + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"        sb.append(PREFIX_DIETARY + guest.getDietaryRequirements().value + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        guest.getTags().stream().forEach(","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"        );","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"        // descriptor.getRsvpStatus().ifPresent(rsvpStatus -\u003e sb.append(PREFIX_RSVP).append(rsvpStatus.toString())","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"        // .append(\" \"));","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"        // descriptor.getDietaryRequirements().ifPresent(dietaryRequirements -\u003e sb.append(PREFIX_DIETARY).append(\" \"));","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"            } else {","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"samuelim01":11,"keaganpzh":50}},{"path":"src/test/java/wedlog/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"    public PersonBuilder withoutAddress() {","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"        this.address \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    public PersonBuilder withoutPhone() {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"        this.phone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"    public PersonBuilder withoutEmail() {","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"        this.email \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"samuelim01":32,"-":88}},{"path":"src/test/java/wedlog/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"samuelim01":9,"-":46}},{"path":"src/test/java/wedlog/address/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":1,"-":71}},{"path":"src/test/java/wedlog/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samuelim01":4,"-":51}},{"path":"src/test/java/wedlog/address/testutil/TypicalGuests.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_DIETARY_REQUIREMENTS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_RSVP_STATUS_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_RSVP_STATUS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"p-xp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"p-xp"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"p-xp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Guest;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"p-xp"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"p-xp"},"content":" * A utility class containing a list of {@code Guest} objects to be used in tests.","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"p-xp"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"p-xp"},"content":"public class TypicalGuests {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"p-xp"},"content":"    public static final Guest GINA \u003d new GuestBuilder().withName(\"Gina Pauline\")","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"p-xp"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"gina@example.com\")","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"p-xp"},"content":"            .withPhone(\"94351253\").withRsvpStatus(\"yes\").withDietaryRequirements(\"vegan\")","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"p-xp"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"p-xp"},"content":"    public static final Guest GREG \u003d new GuestBuilder().withName(\"Greg Meier\")","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"p-xp"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"p-xp"},"content":"            .withEmail(\"greg@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"p-xp"},"content":"            .withRsvpStatus(\"no\").withDietaryRequirements(\"none\")","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"p-xp"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"p-xp"},"content":"    public static final Guest GABRIEL \u003d new GuestBuilder().withName(\"Gabriel Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"p-xp"},"content":"            .withEmail(\"gabkurz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"            .withRsvpStatus(\"unknown\").withNullDietaryRequirements()","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"    public static final Guest GEORGE \u003d new GuestBuilder().withName(\"George Tan\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"            .withEmail(\"georgemeier@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"            .withRsvpStatus(\"yes\").withDietaryRequirements(\"no beef\")","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"    // Manually added","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"    public static final Guest GIDEON \u003d new GuestBuilder().withName(\"Gideon Lim\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"            .withEmail(\"gideon@example.com\").withAddress(\"little india\")","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"            .withRsvpStatus(\"unknown\").withDietaryRequirements(\"none\")","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"p-xp"},"content":"    public static final Guest GRACE \u003d new GuestBuilder().withName(\"Grace Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"            .withEmail(\"grace@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"p-xp"},"content":"            .withRsvpStatus(\"unknown\").withDietaryRequirements(\"none\")","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"p-xp"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"p-xp"},"content":"    // Manually added - Guest\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"p-xp"},"content":"    public static final Guest AMY \u003d new GuestBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"p-xp"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withRsvpStatus(VALID_RSVP_STATUS_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"p-xp"},"content":"            .withDietaryRequirements(VALID_DIETARY_REQUIREMENTS_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"p-xp"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"p-xp"},"content":"    public static final Guest BOB \u003d new GuestBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"p-xp"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withRsvpStatus(VALID_RSVP_STATUS_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"p-xp"},"content":"            .withDietaryRequirements(VALID_DIETARY_REQUIREMENTS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"p-xp"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"p-xp"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"p-xp"},"content":"    private TypicalGuests() {} // prevents instantiation","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"p-xp"},"content":"     * Returns an {@code AddressBook} with all the typical guests.","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"p-xp"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"p-xp"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"p-xp"},"content":"        for (Guest guest : getTypicalGuests()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"p-xp"},"content":"            ab.addGuest(guest);","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"p-xp"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"p-xp"},"content":"        return ab;","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"p-xp"},"content":"    public static List\u003cGuest\u003e getTypicalGuests() {","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"p-xp"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(GINA, GREG, GABRIEL, GEORGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"p-xp"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"samuelim01":20,"p-xp":66}},{"path":"src/test/java/wedlog/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"samuelim01":2,"-":10}},{"path":"src/test/java/wedlog/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"samuelim01":13,"-":63}},{"path":"src/test/java/wedlog/address/testutil/TypicalVendors.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"p-xp"},"content":"import static wedlog.address.logic.commands.CommandTestUtil.VALID_TAG_FLORIST;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.AddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":" * A utility class containing a list of {@code Vendor} objects to be used in tests.","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"public class TypicalVendors {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor ANNE \u003d new VendorBuilder().withName(\"Anne Chua\")","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"anne@example.com\")","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor BRYAN \u003d new VendorBuilder().withName(\"Bryan Lim\")","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"bryand@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor CHLOE \u003d new VendorBuilder().withName(\"Chloe Chua\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"ckrz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor DANIEL \u003d new VendorBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor ETHAN \u003d new VendorBuilder().withName(\"Ethan Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"ethanmeyer@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor FELIZ \u003d new VendorBuilder().withName(\"Feliz Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor GRACE \u003d new VendorBuilder().withName(\"Grace Chan\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"charis@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"samuelim01"},"content":"    // Manually added","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor HENRY \u003d new VendorBuilder().withName(\"Henry Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"hiimhenry@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor IRENE \u003d new VendorBuilder().withName(\"Irene Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"samuelim01"},"content":"            .withEmail(\"muellerirene@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"samuelim01"},"content":"    // Manually added - Vendor\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"    public static final Vendor AMY \u003d new VendorBuilder(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"p-xp"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"    public static final Vendor BOB \u003d new VendorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"p-xp"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FLORIST)","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"            .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"    private TypicalVendors() {} // prevents instantiation","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"     * Returns an {@code AddressBook} with all the typical vendors.","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"        for (Vendor vendor : getTypicalVendors()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"            ab.addVendor(vendor);","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        return ab;","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"    public static List\u003cVendor\u003e getTypicalVendors() {","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ANNE, BRYAN, CHLOE, DANIEL, ETHAN, FELIZ, GRACE));","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":67,"p-xp":6}},{"path":"src/test/java/wedlog/address/testutil/VendorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"samuelim01"},"content":" * A utility class to help with building Vendor objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"samuelim01"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"samuelim01"},"content":"public class VendorBuilder {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"samuelim01"},"content":"    public static final String DEFAULT_NAME \u003d \"Annie Chua\";","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"samuelim01"},"content":"    public static final String DEFAULT_PHONE \u003d \"91463224\";","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"samuelim01"},"content":"    public static final String DEFAULT_EMAIL \u003d \"annie@gmail.com\";","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"samuelim01"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"301D, Anchorvale Drive, #05-15\";","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"samuelim01"},"content":"    private Name name;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"samuelim01"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"samuelim01"},"content":"    private Email email;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"samuelim01"},"content":"    private Address address;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"samuelim01"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"samuelim01"},"content":"     * Creates a {@code VendorBuilder} with the default details.","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder() {","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"samuelim01"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"samuelim01"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"samuelim01"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"samuelim01"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"samuelim01"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"p-xp"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"p-xp"},"content":"     * Creates a {@code VendorBuilder} with only the given name.","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"p-xp"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"p-xp"},"content":"    public VendorBuilder(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"p-xp"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"p-xp"},"content":"        phone \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"p-xp"},"content":"        email \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"p-xp"},"content":"        address \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"p-xp"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"p-xp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"p-xp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"samuelim01"},"content":"     * Initializes the VendorBuilder with the data of {@code vendorToCopy}.","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder(Vendor vendorToCopy) {","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"samuelim01"},"content":"        name \u003d vendorToCopy.getName();","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"samuelim01"},"content":"        phone \u003d vendorToCopy.getPhone();","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"samuelim01"},"content":"        email \u003d vendorToCopy.getEmail();","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"samuelim01"},"content":"        address \u003d vendorToCopy.getAddress();","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"samuelim01"},"content":"        tags \u003d new HashSet\u003c\u003e(vendorToCopy.getTags());","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Name} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withName(String name) {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"samuelim01"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"samuelim01"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"samuelim01"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Address} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"samuelim01"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Phone} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"samuelim01"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Email} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"samuelim01"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Address} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withoutAddress() {","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"samuelim01"},"content":"        this.address \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Phone} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withoutPhone() {","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"samuelim01"},"content":"        this.phone \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"samuelim01"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"samuelim01"},"content":"     * Sets the {@code Email} of the {@code Vendor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"samuelim01"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"samuelim01"},"content":"    public VendorBuilder withoutEmail() {","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelim01"},"content":"        this.email \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"samuelim01"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"samuelim01"},"content":"    public Vendor build() {","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"samuelim01"},"content":"        return new Vendor(name, phone, email, address, tags);","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"samuelim01"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"samuelim01"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"samuelim01"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"samuelim01":120,"p-xp":11}},{"path":"src/test/java/wedlog/address/testutil/VendorUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.person.Vendor;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":" * A utility class for Vendor.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"public class VendorUtil {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * Returns the part of command string for the given {@code vendor}\u0027s details.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public static String getVendorDetails(Vendor vendor) {","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        sb.append(PREFIX_NAME + vendor.getName().fullName + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        sb.append(PREFIX_PHONE + vendor.getPhone().value + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        sb.append(PREFIX_EMAIL + vendor.getEmail().value + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        sb.append(PREFIX_ADDRESS + vendor.getAddress().value + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        vendor.getTags().stream().forEach(","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        );","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"            } else {","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"tllshan":45,"samuelim01":9}},{"path":"src/test/java/wedlog/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"samuelim01":1,"-":44}},{"path":"src/test/java/wedlog/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelim01"},"content":"package wedlog.address.ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelim01"},"content":"import static wedlog.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"samuelim01"},"content":"import wedlog.address.MainApp;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"samuelim01":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"\u003c?import wedlog.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"samuelim01":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"samuelim01"},"content":"\u003cfx:root type\u003d\"wedlog.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"samuelim01":1,"-":5}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W16-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-4/tp/actions)","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"# FriendBook","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"FriendBook is a desktop app for managing friendsâ€™ contacts and plans associated with them.","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"FriendBook provides an elegant way of visualizing and managing your plans with your friends!","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"FriendBook holds the same basic features as AB-3 but upgraded with some **exclusive features!!**","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"### Exclusive Features","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"In FriendBook, here are some features you can expect:","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"- [x] Adding new plans and friends involved","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"- [ ] Reminders for upcoming plans (coming soon!)","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"- [ ] Favourite friends list (coming soon!)","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"### Additional Information","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"jannnice":16,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"You can reach us at the email `chia.elijah[at]comp.nus.edu.sg`","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"### Elijah Chia","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"\u003cimg src\u003d\"images/elijah5399.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"[[github](https://github.com/Elijah5399)]","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"[[portfolio](team/elijah5399.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"* Role: Developer","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"### Jannice Suciptono","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"\u003cimg src\u003d\"images/jannnice.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"[[github](https://github.com/jannnice)]","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"[[portfolio](team/jannnice.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"### Goh Teng Fong","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"\u003cimg src\u003d\"images/gohtengfong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"[[github](http://github.com/GohTengFong)]","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"GohTengFong"},"content":"[[portfolio](team/gohtengfong.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"GohTengFong"},"content":"### Ho Hong Wei","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"GohTengFong"},"content":"\u003cimg src\u003d\"images/redtailedfox.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"GohTengFong"},"content":"[[github](http://github.com/redtailedfox)]","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"GohTengFong"},"content":"[[portfolio](team/redtailedfox.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"GohTengFong"},"content":"### Victor Lai","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"GohTengFong"},"content":"\u003cimg src\u003d\"images/victorlaiyeeteng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"GohTengFong"},"content":"[[github](https://github.com/victorlaiyeeteng)]","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"GohTengFong"},"content":"[[portfolio](team/victorlaiyeeteng.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"GohTengFong"},"content":"* Role: Developer","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"GohTengFong"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"GohTengFong":28,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"victorlaiyeeteng"},"content":"* a busy university student needing a plan manager","lastModifiedDate":"2023-09-30"},{"lineNumber":261,"author":{"gitId":"victorlaiyeeteng"},"content":"* has a need to manage a significant number of friends","lastModifiedDate":"2023-09-30"},{"lineNumber":262,"author":{"gitId":"victorlaiyeeteng"},"content":"* requires an easy way to manage his plans with his many friends","lastModifiedDate":"2023-09-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"victorlaiyeeteng"},"content":"* prefers a simple GUI controlled by CLI commands","lastModifiedDate":"2023-09-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"victorlaiyeeteng"},"content":"**Value proposition** \u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":268,"author":{"gitId":"victorlaiyeeteng"},"content":"Provides a simple, free and fuss-free way for friends to keep updated information about each other and their ","lastModifiedDate":"2023-09-30"},{"lineNumber":269,"author":{"gitId":"victorlaiyeeteng"},"content":"plans with one another. A Command Line Interface(CLI) and the FriendBook GUI serve as a quick and flexible way ","lastModifiedDate":"2023-09-30"},{"lineNumber":270,"author":{"gitId":"victorlaiyeeteng"},"content":"for users to add and manage plans with their friends.","lastModifiedDate":"2023-09-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                | I want to â€¦â€‹                                 | So that I canâ€¦â€‹                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"victorlaiyeeteng"},"content":"|--------|------------------------|----------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-09-30"},{"lineNumber":279,"author":{"gitId":"victorlaiyeeteng"},"content":"| `* * *` | user                   | add a new friend                             | more easily associate them into my plans                               |","lastModifiedDate":"2023-09-30"},{"lineNumber":280,"author":{"gitId":"victorlaiyeeteng"},"content":"| `* * *` | user                   | remove a friend                              | clean up my friends list                                               |","lastModifiedDate":"2023-09-30"},{"lineNumber":281,"author":{"gitId":"victorlaiyeeteng"},"content":"| `* * *` | user                   | edit a friend\u0027s details                      | keep their information updated                                         |","lastModifiedDate":"2023-09-30"},{"lineNumber":282,"author":{"gitId":"victorlaiyeeteng"},"content":"| `* * *` | user                   | add plans and associate them with my friends | easily keep track of my plans with friends                             |","lastModifiedDate":"2023-09-30"},{"lineNumber":283,"author":{"gitId":"redtailedfox"},"content":"| `* *`  | user with many plans   | mark my plans as done                        | keep my plans list organised                                           |","lastModifiedDate":"2023-10-02"},{"lineNumber":284,"author":{"gitId":"victorlaiyeeteng"},"content":"| `* *`  | user with many plans   | sort my plans by time                        | keep my plans list organised                                           |","lastModifiedDate":"2023-09-30"},{"lineNumber":285,"author":{"gitId":"victorlaiyeeteng"},"content":"| `* *`  | user with many friends | find a friend by name                        | locate the details of my friends without going through the entire list |","lastModifiedDate":"2023-09-30"},{"lineNumber":286,"author":{"gitId":"victorlaiyeeteng"},"content":"| `* *`  | user with many plans   | find a plan by name                          | locate the details of my plans without going through the entire list   |","lastModifiedDate":"2023-09-30"},{"lineNumber":287,"author":{"gitId":"redtailedfox"},"content":"| `*`    | user with many friends | sort friends by name in order                | locate the friend easily                                               |","lastModifiedDate":"2023-10-02"},{"lineNumber":288,"author":{"gitId":"victorlaiyeeteng"},"content":"| `*`    | user with many plans   | sort plans by friends                        | locate the plans easily                                                |","lastModifiedDate":"2023-09-30"},{"lineNumber":289,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"victorlaiyeeteng"},"content":"(For all use cases below, the **System** is the `FriendBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-09-30"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"victorlaiyeeteng"},"content":"#### Use case: Edit a friend\u0027s details","lastModifiedDate":"2023-09-30"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"victorlaiyeeteng"},"content":"1.  User requests to list friends","lastModifiedDate":"2023-09-30"},{"lineNumber":300,"author":{"gitId":"victorlaiyeeteng"},"content":"2.  FriendBook shows a list of user\u0027s friends","lastModifiedDate":"2023-09-30"},{"lineNumber":301,"author":{"gitId":"victorlaiyeeteng"},"content":"3.  User requests to edit a specific friend\u0027s details in the list by entering the friend\u0027s index in list and the new details","lastModifiedDate":"2023-09-30"},{"lineNumber":302,"author":{"gitId":"victorlaiyeeteng"},"content":"4.  FriendBook edits the friend\u0027s details accordingly and displays the new details \u003cbr\u003e Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"victorlaiyeeteng"},"content":"* 2a. The friend list is empty. \u003cbr\u003e Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":306,"author":{"gitId":"victorlaiyeeteng"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-09-30"},{"lineNumber":307,"author":{"gitId":"victorlaiyeeteng"},"content":"    * 3a1. FriendBook shows an error message. \u003cbr\u003e Use case resumes at step 2.","lastModifiedDate":"2023-09-30"},{"lineNumber":308,"author":{"gitId":"victorlaiyeeteng"},"content":"* 3b. No arguments of friend details were provided.","lastModifiedDate":"2023-09-30"},{"lineNumber":309,"author":{"gitId":"victorlaiyeeteng"},"content":"    * 3b1. FriendBook shows an error message. \u003cbr\u003e Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"victorlaiyeeteng"},"content":"#### Use case: Remove a friend","lastModifiedDate":"2023-09-30"},{"lineNumber":312,"author":{"gitId":"victorlaiyeeteng"},"content":"**MSS**","lastModifiedDate":"2023-09-30"},{"lineNumber":313,"author":{"gitId":"redtailedfox"},"content":"1. User requests a list of friends","lastModifiedDate":"2023-10-02"},{"lineNumber":314,"author":{"gitId":"victorlaiyeeteng"},"content":"2. FriendBook shows a list of user\u0027s friends","lastModifiedDate":"2023-09-30"},{"lineNumber":315,"author":{"gitId":"victorlaiyeeteng"},"content":"3. User requests to remove a specific friend in the list","lastModifiedDate":"2023-09-30"},{"lineNumber":316,"author":{"gitId":"victorlaiyeeteng"},"content":"4. FriendBook removes the person \u003cbr\u003e Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"victorlaiyeeteng"},"content":"**Extensions**","lastModifiedDate":"2023-09-30"},{"lineNumber":319,"author":{"gitId":"victorlaiyeeteng"},"content":"* 2a. The friend list is empty. \u003cbr\u003e Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"victorlaiyeeteng"},"content":"  * 3a1. FriendBook shows an error message.  \u003cbr\u003e Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"victorlaiyeeteng"},"content":"#### Use case: Add a new plan","lastModifiedDate":"2023-09-30"},{"lineNumber":324,"author":{"gitId":"victorlaiyeeteng"},"content":"**MSS**","lastModifiedDate":"2023-09-30"},{"lineNumber":325,"author":{"gitId":"redtailedfox"},"content":"1. User makes a plan with his friend","lastModifiedDate":"2023-10-02"},{"lineNumber":326,"author":{"gitId":"victorlaiyeeteng"},"content":"2. User finds the friends saved in his friends list","lastModifiedDate":"2023-09-30"},{"lineNumber":327,"author":{"gitId":"victorlaiyeeteng"},"content":"3. FriendBook shows the list of user\u0027s friends for user to find his friend\u0027s name","lastModifiedDate":"2023-09-30"},{"lineNumber":328,"author":{"gitId":"victorlaiyeeteng"},"content":"2. User enters name of the plan, the timestamp of the plan, and his friend\u0027s name","lastModifiedDate":"2023-09-30"},{"lineNumber":329,"author":{"gitId":"victorlaiyeeteng"},"content":"3. FriendBook adds that plan and associates the inputted friend to it and displays the plan details \u003cbr\u003e Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":330,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":331,"author":{"gitId":"victorlaiyeeteng"},"content":"**Extensions**","lastModifiedDate":"2023-09-30"},{"lineNumber":332,"author":{"gitId":"victorlaiyeeteng"},"content":"* 2a. The friend\u0027s name does not exist in the friends list.","lastModifiedDate":"2023-09-30"},{"lineNumber":333,"author":{"gitId":"victorlaiyeeteng"},"content":"  * 2a1. FriendBook shows an error message. \u003cbr\u003e Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":334,"author":{"gitId":"victorlaiyeeteng"},"content":"* 2b. Timestamp of the plan added is past the current time.","lastModifiedDate":"2023-09-30"},{"lineNumber":335,"author":{"gitId":"victorlaiyeeteng"},"content":"  * 2b1. FriendBook shows an error message, displaying the formatted current time. \u003cbr\u003e Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":336,"author":{"gitId":"victorlaiyeeteng"},"content":"* 2c. Timestamp of the plan added is in the wrong format.","lastModifiedDate":"2023-09-30"},{"lineNumber":337,"author":{"gitId":"victorlaiyeeteng"},"content":"  * 2c1. FriendBook shows an error message, displaying an example of the correct timestamp format. \u003cbr\u003e Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"victorlaiyeeteng"},"content":"3.  Should be able to hold up to 500 plans without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-09-30"},{"lineNumber":347,"author":{"gitId":"victorlaiyeeteng"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-09-30"},{"lineNumber":348,"author":{"gitId":"victorlaiyeeteng"},"content":"5.  The scrolling of the plans and friends list should be smooth visually with typical usage.","lastModifiedDate":"2023-09-30"},{"lineNumber":349,"author":{"gitId":"victorlaiyeeteng"},"content":"6.  The system should process CLI commands and respond within 2 seconds.","lastModifiedDate":"2023-09-30"},{"lineNumber":350,"author":{"gitId":"victorlaiyeeteng"},"content":"7.  The project is expected to deliver a MVP by the end of November 2023.","lastModifiedDate":"2023-09-30"},{"lineNumber":351,"author":{"gitId":"victorlaiyeeteng"},"content":"8.  The product is not responsible for transmitting information online to another user of this product.","lastModifiedDate":"2023-09-30"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"victorlaiyeeteng"},"content":"* **CLI**: Command Line Interface is a text-based user interface used to run programs, manage computer files and interact with the computer.","lastModifiedDate":"2023-09-30"},{"lineNumber":359,"author":{"gitId":"victorlaiyeeteng"},"content":"* **MVP**: Minimum Viable Product is a product with all essential features to validate a product idea early.","lastModifiedDate":"2023-09-30"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"victorlaiyeeteng":59,"-":349,"redtailedfox":4}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Elijah5399"},"content":"FriendBook is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FriendBook can get your plans management done faster than traditional GUI apps.","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"1. Download the latest `friendbook.jar` from here (link coming soon).","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your FriendBook.","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar friendbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"   * `list-friend` : Lists all contacts.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"   * `add-friend n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the FriendBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"victorlaiyeeteng"},"content":"   * `delete-friend 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"victorlaiyeeteng"},"content":"  e.g. in `add-friend n/NAME`, `NAME` is a parameter which can be used as `add-friend n/John Doe`.","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"victorlaiyeeteng"},"content":"### Adding a person: `add-friend`","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"victorlaiyeeteng"},"content":"Adds a person to the friends list.","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"victorlaiyeeteng"},"content":"Format: `add-friend n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"Elijah5399"},"content":"Examples:","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"victorlaiyeeteng"},"content":"* `add-friend n/John Doe p/98321234 e/johnd@example.com a/Thomson Avenue`","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"victorlaiyeeteng"},"content":"* `add-friend n/Jack Ma p/92839102 e/jack.ma@yahoo.com a/Sixth Avenue`","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Elijah5399"},"content":"Arguments:","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"victorlaiyeeteng"},"content":"- `NAME`, `PHONE_NUMBER`, `EMAIL`, `ADDRESS` are all required fields.","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Elijah5399"},"content":"Successful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"victorlaiyeeteng"},"content":"`[NAME, PHONE_NUMBER, EMAIL, ADDRESS] added to friends list.`","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Elijah5399"},"content":"Unsuccessful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"Elijah5399"},"content":"- Invalid command: `Invalid command.` + help message with list of all commands","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"victorlaiyeeteng"},"content":"- Empty name: `Invalid Adding of Friend: A name must be entered. Syntax: add-friend n/NAME p/NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"victorlaiyeeteng"},"content":"- Non-numeric phone number: `Invalid Adding of Friend: Phone number must be numeric. Syntax: add-friend n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"victorlaiyeeteng"},"content":"- Invalid email format: `Invalid Adding of Friend: Invalid email. Syntax: add-friend n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"victorlaiyeeteng"},"content":"- Additional arguments provided: `Invalid syntax: Too many arguments. Syntax: add-friend n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"victorlaiyeeteng"},"content":"### Removing a Friend : `delete-friend`","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"victorlaiyeeteng"},"content":"Removes an existing friend from the friends list.","lastModifiedDate":"2023-09-30"},{"lineNumber":98,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"victorlaiyeeteng"},"content":"Format: `delete-friend INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"victorlaiyeeteng"},"content":"* `delete-friend 1`","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"victorlaiyeeteng"},"content":"* `delete-friend 2`","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"Elijah5399"},"content":"Arguments:","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"Elijah5399"},"content":"- `NAME` must be a string","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"Elijah5399"},"content":"Successful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"victorlaiyeeteng"},"content":"`[NAME, PHONE_NUMBER, EMAIL, ADDRESS] removed from friends list.`","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"Elijah5399"},"content":"Unsuccessful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"Elijah5399"},"content":"- Invalid command: `Invalid command.` + help message with list of all commands","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"victorlaiyeeteng"},"content":"- Empty name: `Invalid Removing of Friend: A name must be entered. Syntax: delete-friend INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"victorlaiyeeteng"},"content":"- Argument provided is not a STRING: `Invalid Removing of Friend: Name should be a STRING. Syntax: delete-friend INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"Elijah5399"},"content":"- Not a valid friend: `Invalid Removing of Friend: No such friend in friends list.`","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"victorlaiyeeteng"},"content":"- Additional arguments provided: `Invalid syntax: Too many arguments. Syntax: delete-friend INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"victorlaiyeeteng"},"content":"### Editing a Friend\u0027s Information: `edit-friend` [Coming Soon]","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"victorlaiyeeteng"},"content":"Edits an existing friendâ€™s information in the friends list at the specified index.","lastModifiedDate":"2023-09-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"victorlaiyeeteng"},"content":"Format: `edit-friend INDEX n/NAME p/PHONE e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"victorlaiyeeteng"},"content":"* `edit friend 3 n/Jack Ma`","lastModifiedDate":"2023-09-30"},{"lineNumber":132,"author":{"gitId":"victorlaiyeeteng"},"content":"* `edit friend 1 p/99990000`","lastModifiedDate":"2023-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"Elijah5399"},"content":"Arguments:","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"Elijah5399"},"content":"- `NAME` must be a STRING, `PHONE` must be an INT, and `EMAIL` must be a STRING","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"Elijah5399"},"content":"- An `INDEX` must be provided","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"victorlaiyeeteng"},"content":"- `NAME`, `PHONE_NUMBER`, `EMAIL` and `ADDRESS` are optional but at least 1 must be given","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"Elijah5399"},"content":"Successful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"victorlaiyeeteng"},"content":"`[NAME, PHONE_NUMBER, EMAIL, ADDRESS] updated in friends list.`","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"Elijah5399"},"content":"Unsuccessful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"Elijah5399"},"content":"- Invalid command: `Invalid command.` + help message with list of all commands","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"victorlaiyeeteng"},"content":"- Invalid index is given: `Invalid Updating of Friend: Index given is invalid. Syntax: edit-friend INDEX n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"victorlaiyeeteng"},"content":"- No optional arguments provided: `Invalid Updating of Friend: Missing information to be updated. Syntax: edit-friend INDEX n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"Elijah5399"},"content":"- Not a valid friend: `Invalid Updating of Friend: No such friend in friends list.`","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"victorlaiyeeteng"},"content":"- Additional arguments provided: `Invalid syntax: Too many arguments. Syntax: edit-friend INDEX n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":158,"author":{"gitId":"victorlaiyeeteng"},"content":"### Adding a plan : `add-plan`","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"Elijah5399"},"content":"Adds a plan and associates with involved friends.","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"victorlaiyeeteng"},"content":"Format: `add-plan n/PLAN_NAME d/DATE_TIME f/FRIEND_NAME`","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"victorlaiyeeteng"},"content":"* `add-plan n/Project Meeting d/2023-10-23-10:00 f/Royden`","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"Elijah5399"},"content":"Arguments:","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"Elijah5399"},"content":"- `PLAN_NAME` must be a STRING, `DATE_TIME` must be in the YYYY-MM-DD-HH:MM format","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"Elijah5399"},"content":"- `FRIEND_NAME` is optional. If specified, `FRIEND_NAME` must be the name of an existing friend","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"Elijah5399"},"content":"Successful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"Elijah5399"},"content":"`[PLAN_NAME with FRIEND_NAME at DATE_TIME] added to your plans.`","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"Elijah5399"},"content":"Unsuccessful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"Elijah5399"},"content":"- Invalid command: `Invalid command.` + help message with list of all commands","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"victorlaiyeeteng"},"content":"- Missing arguments: `Invalid syntax: Missing arguments. Syntax: add-plan n/PLAN_NAME d/DATE_TIME f/FRIEND_NAME`","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"Elijah5399"},"content":"- Date-Time in wrong format: `Invalid Adding of Plan: Date-Time given is invalid. Syntax: Date-Time must be in YYYY-MM-DD-HH:MM format`","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"Elijah5399"},"content":"- Date-Time in the past: `Invalid Adding of Plan: Date-Time given is invalid. Ensure that the Date-Time provided is not in the past.`","lastModifiedDate":"2023-09-22"},{"lineNumber":186,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":187,"author":{"gitId":"Elijah5399"},"content":"- Not a valid friend: `Invalid Adding of Plan: No such friend in friends list.`","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"victorlaiyeeteng"},"content":"- Additional arguments provided: `Invalid syntax: Too many arguments. Syntax: add-plan n/PLAN_NAME d/DATE_TIME f/FRIEND_NAME`","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"victorlaiyeeteng"},"content":"### Marking a Plan as Completed : `complete-plan`","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"Elijah5399"},"content":"Marks the specified plan as completed.","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"victorlaiyeeteng"},"content":"Format: `complete-plan INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"victorlaiyeeteng"},"content":"* `complete-plan 4`","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"Elijah5399"},"content":"Arguments:","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"Elijah5399"},"content":"- `INDEX` must be an INTEGER","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"Elijah5399"},"content":"Successful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":206,"author":{"gitId":"Elijah5399"},"content":"`[PLAN_NAME] is marked as completed.`","lastModifiedDate":"2023-09-22"},{"lineNumber":207,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":208,"author":{"gitId":"Elijah5399"},"content":"Unsuccessful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":209,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":210,"author":{"gitId":"Elijah5399"},"content":"- Invalid command: `Invalid command.` + help message with list of all commands","lastModifiedDate":"2023-09-22"},{"lineNumber":211,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":212,"author":{"gitId":"victorlaiyeeteng"},"content":"- Missing arguments: `Invalid syntax: Missing arguments. Syntax: complete-plan INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"victorlaiyeeteng"},"content":"- Non-numeric index: `Invalid Marking of Plan: Index given is non-numeric. Syntax: complete-plan INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":216,"author":{"gitId":"victorlaiyeeteng"},"content":"- Not a valid index: `Invalid Marking of Plan: No plans at given index. Syntax: complete-plan INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":218,"author":{"gitId":"victorlaiyeeteng"},"content":"- Additional arguments provided: `Invalid syntax: Too many arguments. Syntax: complete-plan INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":220,"author":{"gitId":"victorlaiyeeteng"},"content":"### Deleting a Plan : `delete-plan`","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":222,"author":{"gitId":"Elijah5399"},"content":"Deletes the specified plan.","lastModifiedDate":"2023-09-22"},{"lineNumber":223,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":224,"author":{"gitId":"victorlaiyeeteng"},"content":"Format: `delete-plan INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":226,"author":{"gitId":"Elijah5399"},"content":"Examples:","lastModifiedDate":"2023-09-22"},{"lineNumber":227,"author":{"gitId":"victorlaiyeeteng"},"content":"* `delete-plan 4`","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":229,"author":{"gitId":"Elijah5399"},"content":"Arguments:","lastModifiedDate":"2023-09-22"},{"lineNumber":230,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":231,"author":{"gitId":"Elijah5399"},"content":"- `INDEX` must be an INTEGER","lastModifiedDate":"2023-09-22"},{"lineNumber":232,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":233,"author":{"gitId":"Elijah5399"},"content":"Successful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":234,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":235,"author":{"gitId":"Elijah5399"},"content":"`[PLAN_NAME] is deleted.`","lastModifiedDate":"2023-09-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"Elijah5399"},"content":"Unsuccessful Output:","lastModifiedDate":"2023-09-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"Elijah5399"},"content":"- Invalid command: `Invalid command.` + help message with list of all commands","lastModifiedDate":"2023-09-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"victorlaiyeeteng"},"content":"- Missing arguments: `Invalid syntax: Missing arguments. Syntax: delete-plan INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"victorlaiyeeteng"},"content":"- Non-numeric index: `Invalid Deletion of Plan: Index given is non-numeric. Syntax: delete-plan INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"victorlaiyeeteng"},"content":"- Not a valid index: `Invalid Deletion of Plan: No plans at given index. Syntax: delete-plan INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"victorlaiyeeteng"},"content":"- Additional arguments provided: `Invalid syntax: Too many arguments. Syntax: delete-plan INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"victorlaiyeeteng"},"content":"FriendBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-09-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":255,"author":{"gitId":"victorlaiyeeteng"},"content":"FriendBook data are saved automatically as a JSON file `[JAR file location]/data/friendbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":258,"author":{"gitId":"victorlaiyeeteng"},"content":"If your changes to the data file makes its format invalid, FriendBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"victorlaiyeeteng"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FriendBook home folder.","lastModifiedDate":"2023-09-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"victorlaiyeeteng"},"content":"**add-friend** | `add friend n/NAME p/PHONE_NUMBER e/EMAIL` \u003cbr\u003e e.g., `add friend n/John Doe p/98321234 e/johnd@example.com`","lastModifiedDate":"2023-10-17"},{"lineNumber":285,"author":{"gitId":"victorlaiyeeteng"},"content":"**delete-friend** | `remove friend NAME` \u003cbr\u003e e.g., `remove friend John Doe`","lastModifiedDate":"2023-10-17"},{"lineNumber":286,"author":{"gitId":"victorlaiyeeteng"},"content":"**edit-friend** | `edit friend INDEX n/NAME p/PHONE e/EMAIL`\u003cbr\u003e e.g., `edit friend 3 n/Jack Ma`","lastModifiedDate":"2023-10-17"},{"lineNumber":287,"author":{"gitId":"victorlaiyeeteng"},"content":"**add-plan** | `add plan n/PLAN_NAME d/DATE_TIME f/FRIEND_NAME`\u003cbr\u003e e.g.,`add plan n/Project Meeting d/2023-10-23-10:00 f/Royden`","lastModifiedDate":"2023-10-17"},{"lineNumber":288,"author":{"gitId":"victorlaiyeeteng"},"content":"**complete-plan** | `complete plan INDEX`\u003cbr\u003e e.g., `complete plan 4`","lastModifiedDate":"2023-10-17"},{"lineNumber":289,"author":{"gitId":"victorlaiyeeteng"},"content":"**delete-plan** | `delete plan INDEX` \u003cbr\u003e e.g., `delete plan 4`","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":66,"-":129,"Elijah5399":94}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Elijah5399"},"content":"    content: \"FriendBook\";","lastModifiedDate":"2023-09-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"Elijah5399"},"content":"  hr {","lastModifiedDate":"2023-09-30"},{"lineNumber":295,"author":{"gitId":"Elijah5399"},"content":"    page-break-after: always;","lastModifiedDate":"2023-09-30"},{"lineNumber":296,"author":{"gitId":"Elijah5399"},"content":"  }","lastModifiedDate":"2023-09-30"},{"lineNumber":297,"author":{"gitId":"Elijah5399"},"content":"  h2, h3 {","lastModifiedDate":"2023-09-30"},{"lineNumber":298,"author":{"gitId":"Elijah5399"},"content":"    page-break-before: always;","lastModifiedDate":"2023-09-30"},{"lineNumber":299,"author":{"gitId":"Elijah5399"},"content":"  }","lastModifiedDate":"2023-09-30"},{"lineNumber":300,"author":{"gitId":"Elijah5399"},"content":"  img {","lastModifiedDate":"2023-09-30"},{"lineNumber":301,"author":{"gitId":"Elijah5399"},"content":"    page-break-after: always;","lastModifiedDate":"2023-09-30"},{"lineNumber":302,"author":{"gitId":"Elijah5399"},"content":"  }","lastModifiedDate":"2023-09-30"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"Elijah5399":10}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Elijah5399"},"content":"title: FriendBook","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Elijah5399"},"content":"**FriendBook is a desktop application for managing your friends, and your plans with them.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Elijah5399"},"content":"* If you are interested in using FriendBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"Elijah5399"},"content":"* If you are interested about developing FriendBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":15,"Elijah5399":4}},{"path":"docs/team/elijah5399.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"layout: page","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"title: Elijah Chia\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"### Project: FriendBook","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"FriendBook - is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FriendBook can get your plans management done faster than traditional GUI apps.","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"* **New Feature**:","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"  * What it does:","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"  * Justification:","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"  * Highlights:","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"  * Credits:","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"* **Code contributed**:","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"* **Project management**:","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"  * User Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"* **Tools**:","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"GohTengFong":30}},{"path":"docs/team/gohtengfong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"layout: page","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"title: Goh Teng Fong\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"### Project: FriendBook","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"FriendBook - is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FriendBook can get your plans management done faster than traditional GUI apps.","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"* **New Feature**:","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"  * What it does:","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"  * Justification:","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"  * Highlights:","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"  * Credits:","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"* **Code contributed**:","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"* **Project management**:","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"  * User Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"* **Tools**:","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"GohTengFong":30}},{"path":"docs/team/jannnice.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"layout: page","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"title: Jannice\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"### Project: FriendBook","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"FriendBook - is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FriendBook can get your plans management done faster than traditional GUI apps.","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"* **New Feature**:","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"  * What it does:","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"  * Justification:","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"  * Highlights:","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"  * Credits:","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"* **Code contributed**:","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"* **Project management**:","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"  * User Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"* **Tools**:","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"GohTengFong":30}},{"path":"docs/team/redtailedfox.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"layout: page","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"title: Ho Hong Wei\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"### Project: FriendBook","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"FriendBook - is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FriendBook can get your plans management done faster than traditional GUI apps.","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"* **New Feature**:","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"  * What it does:","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"  * Justification:","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"  * Highlights:","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"  * Credits:","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"* **Code contributed**:","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"* **Project management**:","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"  * User Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"* **Tools**:","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"GohTengFong":30}},{"path":"docs/team/victorlaiyeeteng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"layout: page","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"title: Victor Lai\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"### Project: FriendBook","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"FriendBook - is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FriendBook can get your plans management done faster than traditional GUI apps.","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"* **New Feature**:","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"  * What it does:","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"  * Justification:","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"  * Highlights:","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"  * Credits:","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"* **Code contributed**:","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"* **Project management**:","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"  * User Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"* **Tools**:","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"GohTengFong":30}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"jannnice"},"content":"    private static final Pattern FRIEND_COMMAND_CHECKER \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jannnice"},"content":"            Pattern.compile(\"-friend\");","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jannnice"},"content":"    private static final String REPLACE \u003d \"\";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jannnice"},"content":"        boolean isFriendCommand \u003d commandText.contains(\"-friend\");","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jannnice"},"content":"        boolean isPlanCommand \u003d commandText.contains(\"-plan\");","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jannnice"},"content":"        boolean isHelpCommand \u003d commandText.contains(\"help\");","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jannnice"},"content":"        if (isFriendCommand) {","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jannnice"},"content":"            // removes \"-friend\" from the command text","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jannnice"},"content":"            Matcher findFriend \u003d FRIEND_COMMAND_CHECKER.matcher(commandText);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jannnice"},"content":"            commandText \u003d findFriend.replaceAll(REPLACE);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jannnice"},"content":"        } else if (isHelpCommand) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jannnice"},"content":"            // since there\u0027s no \"help-friend\" and \"help-plan\", should retain the command message","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jannnice"},"content":"            commandText \u003d \"help\";","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jannnice"},"content":"        } else if (!isPlanCommand) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"jannnice"},"content":"            // command doesn\u0027t contain \"-friend\", \"help\", nor \"-plans\" and hence will be marked as an unclear command","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"jannnice"},"content":"            commandText \u003d \"unclear\";","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jannnice":22,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The friend index provided is invalid\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d friends listed!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"    public static final String MESSAGE_UNCLEAR_COMMAND \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"                \"Command is unclear. Please specify with \\\"-friend\\\" or \\\"-plan\\\"!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"    public static final String MESSAGE_INVALID_PLAN_DISPLAYED_INDEX \u003d \"The plan index provided is invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Formats the {@code plan} for display to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static String format(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"victorlaiyeeteng"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"victorlaiyeeteng"},"content":"        builder.append(plan.getPlanName())","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"victorlaiyeeteng"},"content":"                .append(\"; Date Time: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"victorlaiyeeteng"},"content":"                .append(plan.getPlanDateTime())","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"victorlaiyeeteng"},"content":"                .append(\"; Friend: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"victorlaiyeeteng"},"content":"                .append(plan.getPlanFriend().getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"victorlaiyeeteng"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"victorlaiyeeteng":14,"GohTengFong":2,"jannnice":3,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a friend to the FriendBook. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New friend added: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This friend already exists in the address book\";","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GohTengFong":3,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddPlanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"victorlaiyeeteng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"victorlaiyeeteng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanName;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"victorlaiyeeteng"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":" * Adds a plan to the FriendBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"victorlaiyeeteng"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"public class AddPlanCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String COMMAND_WORD \u003d \"add-plan\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a plan to the FriendBook. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"            + PREFIX_NAME + \"PLAN_NAME \"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"            + PREFIX_DATETIME + \"DATE_TIME \"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"victorlaiyeeteng"},"content":"            + PREFIX_FRIEND + \"FRIEND_NAME \"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"victorlaiyeeteng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"victorlaiyeeteng"},"content":"            + PREFIX_NAME + \"Project Meeting \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"victorlaiyeeteng"},"content":"            + PREFIX_DATETIME + \"2023-10-20-09:00\"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"victorlaiyeeteng"},"content":"            + PREFIX_FRIEND + \"John Doe\";","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New plan added: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String MESSAGE_DUPLICATE_PLAN \u003d \"This plan already exists in the FriendBook\";","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String MESSAGE_FRIEND_NOT_FOUND \u003d \"The friend does not exist in the FriendBook\";","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"victorlaiyeeteng"},"content":"    private Plan toAdd;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"victorlaiyeeteng"},"content":"    private final PlanName planName;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"victorlaiyeeteng"},"content":"    private final PlanDateTime planDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"victorlaiyeeteng"},"content":"    private final Name friendName;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Creates an AddPlanCommand to add the specified {@code Plan}","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"victorlaiyeeteng"},"content":"    public AddPlanCommand(PlanName planName, PlanDateTime planDateTime, Name friendName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"victorlaiyeeteng"},"content":"        requireAllNonNull(planName, planDateTime, friendName);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"victorlaiyeeteng"},"content":"        this.planName \u003d planName;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"victorlaiyeeteng"},"content":"        this.planDateTime \u003d planDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"victorlaiyeeteng"},"content":"        this.friendName \u003d friendName;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"victorlaiyeeteng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"victorlaiyeeteng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"victorlaiyeeteng"},"content":"        Person person;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"victorlaiyeeteng"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"victorlaiyeeteng"},"content":"            person \u003d model.getPersonByName(this.friendName);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"victorlaiyeeteng"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new CommandException(MESSAGE_FRIEND_NOT_FOUND);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"victorlaiyeeteng"},"content":"        toAdd \u003d new Plan(this.planName, this.planDateTime, person);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"victorlaiyeeteng"},"content":"        if (model.hasPlan(toAdd)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PLAN);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"victorlaiyeeteng"},"content":"        model.addPlan(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"victorlaiyeeteng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"victorlaiyeeteng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"victorlaiyeeteng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"victorlaiyeeteng"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"victorlaiyeeteng"},"content":"        //instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"victorlaiyeeteng"},"content":"        if (!(other instanceof AddPlanCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"victorlaiyeeteng"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"victorlaiyeeteng"},"content":"        AddPlanCommand otherAddPlanCommand \u003d (AddPlanCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"victorlaiyeeteng"},"content":"        return planName.equals(otherAddPlanCommand.planName)","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"victorlaiyeeteng"},"content":"                \u0026\u0026 planDateTime.equals(otherAddPlanCommand.planDateTime)","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"victorlaiyeeteng"},"content":"                \u0026\u0026 friendName.equals(otherAddPlanCommand.friendName);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"victorlaiyeeteng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"victorlaiyeeteng"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"victorlaiyeeteng"},"content":"                .add(\"toAdd\", \"[\" + planName + \" with \" + friendName + \" at \" + planDateTime + \"]\")","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"victorlaiyeeteng"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"victorlaiyeeteng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":98}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"FriendBook has been cleared!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GohTengFong":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"            + \": Deletes the friend identified by the index number used in the displayed friend list.\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Friend: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GohTengFong":2,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/DeletePlanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":" * Deletes a plan identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"public class DeletePlanCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"    public static final String COMMAND_WORD \u003d \"delete-plan\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"            + \": Deletes the plan identified by the index number used in the displayed plan list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"    public static final String MESSAGE_DELETE_PLAN_SUCCESS \u003d \"Deleted Plan: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jannnice"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"jannnice"},"content":"    public DeletePlanCommand(Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jannnice"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jannnice"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jannnice"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jannnice"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jannnice"},"content":"        List\u003cPlan\u003e lastShownList \u003d model.getFilteredPlanList();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jannnice"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jannnice"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PLAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jannnice"},"content":"        Plan planToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jannnice"},"content":"        model.deletePlan(planToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jannnice"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PLAN_SUCCESS, Messages.format(planToDelete)));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"jannnice"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"jannnice"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"jannnice"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"jannnice"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"jannnice"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jannnice"},"content":"        if (!(other instanceof DeletePlanCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"jannnice"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jannnice"},"content":"        DeletePlanCommand otherDeleteCommand \u003d (DeletePlanCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"jannnice"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jannnice"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jannnice"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jannnice"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"jannnice"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"jannnice"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jannnice":70}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the friend identified \"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GohTengFong"},"content":"            + \"by the index number used in the displayed friend list. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Friend: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This friend already exists in the FriendBook.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"GohTengFong":4,"-":238}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting FriendBook as requested ...\";","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"GohTengFong":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all friends whose names contain any of \"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"GohTengFong":1,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all friends\";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GohTengFong":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/ListPlanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"victorlaiyeeteng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"victorlaiyeeteng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PLANS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":" * Lists all plans in the FriendBook to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":"public class ListPlanCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String COMMAND_WORD \u003d \"list-plan\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all plans\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"victorlaiyeeteng"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"victorlaiyeeteng"},"content":"        model.updateFilteredPlanList(PREDICATE_SHOW_ALL_PLANS);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"victorlaiyeeteng"},"content":"        logger.info(model.getFilteredPlanList().toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":30}},{"path":"src/main/java/seedu/address/logic/parser/AddPlanCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"victorlaiyeeteng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.commands.AddPlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanName;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"victorlaiyeeteng"},"content":" * Parses input arguments and create a new AddPlanCommand Object","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"victorlaiyeeteng"},"content":"public class AddPlanCommandParser implements Parser\u003cAddPlanCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPlanCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"     * and returns an AddPlanCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"victorlaiyeeteng"},"content":"    public AddPlanCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATETIME, PREFIX_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"victorlaiyeeteng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATETIME, PREFIX_FRIEND)","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"victorlaiyeeteng"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new ParseException((String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPlanCommand.MESSAGE_USAGE)));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"victorlaiyeeteng"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_DATETIME, PREFIX_FRIEND);;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"victorlaiyeeteng"},"content":"        PlanName planName \u003d ParserUtil.parsePlanName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"victorlaiyeeteng"},"content":"        PlanDateTime planDateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATETIME).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"victorlaiyeeteng"},"content":"        Name friendName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_FRIEND).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"victorlaiyeeteng"},"content":"        return new AddPlanCommand(planName, planDateTime, friendName);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"victorlaiyeeteng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"victorlaiyeeteng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"victorlaiyeeteng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"victorlaiyeeteng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNCLEAR_COMMAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.commands.AddPlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"import seedu.address.logic.commands.DeletePlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.commands.ListPlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"victorlaiyeeteng"},"content":"        case AddPlanCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"victorlaiyeeteng"},"content":"            return new AddPlanCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"victorlaiyeeteng"},"content":"        case ListPlanCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"victorlaiyeeteng"},"content":"            return new ListPlanCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"jannnice"},"content":"        case DeletePlanCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jannnice"},"content":"            return new DeletePlanCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"jannnice"},"content":"        case \"unclear\":","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"jannnice"},"content":"            throw new ParseException(MESSAGE_UNCLEAR_COMMAND);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"victorlaiyeeteng":9,"jannnice":7,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Prefix PREFIX_FRIEND \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"victorlaiyeeteng":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeletePlanCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"import seedu.address.logic.commands.DeletePlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"public class DeletePlanCommandParser implements Parser\u003cDeletePlanCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"    public DeletePlanCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"            return new DeletePlanCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePlanCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jannnice":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanName;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Parses a {@code String planName} into a {@code PlanName}.","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"victorlaiyeeteng"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"victorlaiyeeteng"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static PlanName parsePlanName(String planName) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"victorlaiyeeteng"},"content":"        requireNonNull(planName);","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"victorlaiyeeteng"},"content":"        String trimmedPlanName \u003d planName.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"victorlaiyeeteng"},"content":"        if (!PlanName.isValidPlanName(trimmedPlanName)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new ParseException(PlanName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"victorlaiyeeteng"},"content":"        return new PlanName(trimmedPlanName);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Parses a {@code String dateTimeString} into a {@code PlanDateTime}.","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"victorlaiyeeteng"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"victorlaiyeeteng"},"content":"     * @throws ParseException if the given {@code dateTimeString} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static PlanDateTime parseDateTime(String dateTimeString) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"victorlaiyeeteng"},"content":"        requireNonNull(dateTimeString);","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"victorlaiyeeteng"},"content":"        String trimmedDateTimeString \u003d dateTimeString.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"victorlaiyeeteng"},"content":"        if (!PlanDateTime.isValidDateTime(trimmedDateTimeString)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new ParseException(PlanDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"victorlaiyeeteng"},"content":"        return new PlanDateTime(trimmedDateTimeString);","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"victorlaiyeeteng":32,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"redtailedfox"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"redtailedfox"},"content":"import seedu.address.model.plan.UniquePlanList;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"redtailedfox"},"content":"    private final UniquePlanList plans;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"redtailedfox"},"content":"        plans \u003d new UniquePlanList();","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void setPlans(List\u003cPlan\u003e plans) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"victorlaiyeeteng"},"content":"        this.plans.setPlans(plans);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"redtailedfox"},"content":"        setPlans(newData.getPlanList());","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"redtailedfox"},"content":"     * Returns true if a plan with the same identity as {@code plan} exists in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"redtailedfox"},"content":"    public boolean hasPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"redtailedfox"},"content":"        requireNonNull(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"redtailedfox"},"content":"        return plans.contains(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Gets the Person that has the same {@code name} from the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"victorlaiyeeteng"},"content":"     * A Person with the same name must exist in the list, else Exception is thrown.","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"victorlaiyeeteng"},"content":"    public Person getPersonByName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"victorlaiyeeteng"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"victorlaiyeeteng"},"content":"        return persons.getPersonByName(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Adds a plan to the FriendBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"victorlaiyeeteng"},"content":"     * The plan must not already exist in the FriendBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"redtailedfox"},"content":"    public void addPlan(Plan p) {","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"redtailedfox"},"content":"        plans.add(p);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"redtailedfox"},"content":"    public void setPlan(Plan target, Plan editedPlan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"redtailedfox"},"content":"        requireNonNull(editedPlan);","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"redtailedfox"},"content":"        plans.setPlan(target, editedPlan);","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"redtailedfox"},"content":"    public void removePlan(Plan key) {","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"redtailedfox"},"content":"        plans.remove(key);","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"redtailedfox"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"redtailedfox"},"content":"    public ObservableList\u003cPlan\u003e getPlanList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"redtailedfox"},"content":"        return plans.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"redtailedfox"},"content":"        return persons.equals(otherAddressBook.persons)","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"redtailedfox"},"content":"                \u0026\u0026 plans.equals(otherAddressBook.plans);","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"victorlaiyeeteng":16,"-":130,"redtailedfox":34}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"redtailedfox"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"redtailedfox"},"content":"    Predicate\u003cPlan\u003e PREDICATE_SHOW_ALL_PLANS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"redtailedfox"},"content":"     * Returns true if a plan with the same identity as {@code plan} exists in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"redtailedfox"},"content":"    boolean hasPlan(Plan plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Gets the Person that has the same {@code name} from the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"victorlaiyeeteng"},"content":"     * A Person with the same name must exist in the list, else Exception is thrown.","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"victorlaiyeeteng"},"content":"    Person getPersonByName(Name name);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"redtailedfox"},"content":"     * Deletes the given plan.","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"redtailedfox"},"content":"     * The plan must exist in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"redtailedfox"},"content":"    void deletePlan(Plan plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"redtailedfox"},"content":"     * Adds the given plan.","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"redtailedfox"},"content":"     * {@code plan} must not already exist in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"redtailedfox"},"content":"    void addPlan(Plan plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"redtailedfox"},"content":"     * Replaces the given plan {@code target} with {@code editedPlan}.","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"redtailedfox"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"redtailedfox"},"content":"     * The person identity of {@code editedPlan} must not be the same as another existing plan in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"redtailedfox"},"content":"    void setPlan(Plan target, Plan editedPlan);","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"redtailedfox"},"content":"    ObservableList\u003cPlan\u003e getFilteredPlanList();","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"redtailedfox"},"content":"     * Updates the filter of the filtered plan list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"redtailedfox"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"redtailedfox"},"content":"    void updateFilteredPlanList(Predicate\u003cPlan\u003e predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"victorlaiyeeteng":9,"-":91,"redtailedfox":29}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"redtailedfox"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"redtailedfox"},"content":"    private final FilteredList\u003cPlan\u003e filteredPlans;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"redtailedfox"},"content":"        filteredPlans \u003d new FilteredList\u003c\u003e(this.addressBook.getPlanList());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"victorlaiyeeteng"},"content":"    public Person getPersonByName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"victorlaiyeeteng"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"victorlaiyeeteng"},"content":"        return addressBook.getPersonByName(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"redtailedfox"},"content":"     * Returns true if a plan with the same identity as {@code plan} exists in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"redtailedfox"},"content":"    public boolean hasPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"redtailedfox"},"content":"        requireNonNull(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"redtailedfox"},"content":"        return addressBook.hasPlan(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"redtailedfox"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"redtailedfox"},"content":"    public void deletePlan(Plan target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"redtailedfox"},"content":"        addressBook.removePlan(target);","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"redtailedfox"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"redtailedfox"},"content":"    public void addPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"redtailedfox"},"content":"        addressBook.addPlan(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"redtailedfox"},"content":"        updateFilteredPlanList(PREDICATE_SHOW_ALL_PLANS);","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"redtailedfox"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"redtailedfox"},"content":"    public void setPlan(Plan target, Plan editedPlan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"redtailedfox"},"content":"        requireAllNonNull(target, editedPlan);","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"redtailedfox"},"content":"        addressBook.setPlan(target, editedPlan);","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"redtailedfox"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"redtailedfox"},"content":"                \u0026\u0026 filteredPlans.equals(otherModelManager.filteredPlans);","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"redtailedfox"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Plan List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"redtailedfox"},"content":"     * Returns an unmodifiable view of the list of {@code Plan} backed by the internal list of","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"redtailedfox"},"content":"     * {@code versionedPlanBook}","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"redtailedfox"},"content":"    public ObservableList\u003cPlan\u003e getFilteredPlanList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"redtailedfox"},"content":"        return filteredPlans;","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"redtailedfox"},"content":"     * Updates the filter of the filtered plan list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"redtailedfox"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"redtailedfox"},"content":"    public void updateFilteredPlanList(Predicate\u003cPlan\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"redtailedfox"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"redtailedfox"},"content":"        filteredPlans.setPredicate(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"victorlaiyeeteng":7,"-":150,"redtailedfox":51}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"redtailedfox"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"redtailedfox"},"content":"    ObservableList\u003cPlan\u003e getPlanList();","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"redtailedfox":2}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"redtailedfox"},"content":"    private Path planBookFilePath \u003d Paths.get(\"data\" , \"planbook.json\");","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"redtailedfox"},"content":"    public Path getPlanBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"redtailedfox"},"content":"        return planBookFilePath;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":88,"redtailedfox":4}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Gets the Person that has the same {@code name} from the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"victorlaiyeeteng"},"content":"     * A Person with the same name must exist in the list, else Exception is thrown.","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"victorlaiyeeteng"},"content":"    public Person getPersonByName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"victorlaiyeeteng"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"victorlaiyeeteng"},"content":"        Optional\u003cPerson\u003e matchingPerson \u003d internalList.stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"victorlaiyeeteng"},"content":"                .filter(person -\u003e person.getName().equals(name))","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"victorlaiyeeteng"},"content":"                .findFirst();","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"victorlaiyeeteng"},"content":"        if (matchingPerson.isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"victorlaiyeeteng"},"content":"            return matchingPerson.get();","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"victorlaiyeeteng"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"victorlaiyeeteng":17,"-":150}},{"path":"src/main/java/seedu/address/model/plan/Plan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Elijah5399"},"content":"package seedu.address.model.plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Elijah5399"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Elijah5399"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Elijah5399"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Elijah5399"},"content":" * Represents a Plan in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Elijah5399"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Elijah5399"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Elijah5399"},"content":"public class Plan {","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Elijah5399"},"content":"    /** A brief description of this plan. */","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Elijah5399"},"content":"    private final PlanName planName;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Elijah5399"},"content":"    /** The date and time of this plan. */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Elijah5399"},"content":"    private final PlanDateTime dateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Elijah5399"},"content":"    /** The friend this plan involves. */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Elijah5399"},"content":"    private final Person friend;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Elijah5399"},"content":"    private boolean isComplete \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Elijah5399"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Elijah5399"},"content":"     * Class constructor for Plan.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Elijah5399"},"content":"     * @param planName A brief description of the plan.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Elijah5399"},"content":"     * @param dateTime A LocalDateTIme object of this plan.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Elijah5399"},"content":"     * @param friend The friend this plan involves.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Elijah5399"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Elijah5399"},"content":"    public Plan(PlanName planName, PlanDateTime dateTime, Person friend) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Elijah5399"},"content":"        requireAllNonNull(planName, dateTime, friend);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Elijah5399"},"content":"        this.planName \u003d planName;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Elijah5399"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Elijah5399"},"content":"        this.friend \u003d friend;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Elijah5399"},"content":"    public PlanName getPlanName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Elijah5399"},"content":"        return planName;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Elijah5399"},"content":"    public PlanDateTime getPlanDateTime() {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Elijah5399"},"content":"        return dateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Elijah5399"},"content":"    public Person getPlanFriend() {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Elijah5399"},"content":"        return friend;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Elijah5399"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Elijah5399"},"content":"     * Returns true if both plans have the same name, dateTime and friend fields.","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Elijah5399"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Elijah5399"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Elijah5399"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Elijah5399"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Elijah5399"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Elijah5399"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Elijah5399"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Elijah5399"},"content":"        if (!(other instanceof Plan)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Elijah5399"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Elijah5399"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Elijah5399"},"content":"        Plan otherPlan \u003d (Plan) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Elijah5399"},"content":"        return planName.equals(otherPlan.planName)","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Elijah5399"},"content":"                \u0026\u0026 dateTime.equals(otherPlan.dateTime)","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Elijah5399"},"content":"                \u0026\u0026 friend.equals(otherPlan.friend);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"Elijah5399"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Elijah5399"},"content":"     * Returns string of format [PLAN_NAME with FRIEND_NAME at DATE_TIME]","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Elijah5399"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Elijah5399"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Elijah5399"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Elijah5399"},"content":"        String friendName \u003d friend.getName().toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Elijah5399"},"content":"        String dateTimeString \u003d this.dateTime.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Elijah5399"},"content":"        String planNameString \u003d this.planName.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Elijah5399"},"content":"        return \u0027[\u0027 + planNameString + \" with \" + friendName + \" at \" + dateTimeString + \u0027]\u0027;","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Elijah5399"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Elijah5399"},"content":"     * Marks this plan as completed.","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Elijah5399"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Elijah5399"},"content":"    public void setCompleted() {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Elijah5399"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Elijah5399"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Elijah5399"},"content":"     * Marks this plan as uncompleted.","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Elijah5399"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Elijah5399"},"content":"    public void setUncompleted() {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Elijah5399"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"Elijah5399"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Elijah5399":88}},{"path":"src/main/java/seedu/address/model/plan/PlanDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Elijah5399"},"content":"package seedu.address.model.plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Elijah5399"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Elijah5399"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Elijah5399"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Elijah5399"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Elijah5399"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Elijah5399"},"content":" * Represents the date and time of a Plan.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Elijah5399"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Elijah5399"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Elijah5399"},"content":"public class PlanDateTime {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Elijah5399"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Elijah5399"},"content":"            \"Date Time should be of the form YYYY-MM-DD-HH:MM\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Elijah5399"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Digit}]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Elijah5399"},"content":"            + \"(0[0-9]|1[0-9]|2[0-3]):[0-5][0:9]\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Elijah5399"},"content":"    public final LocalDateTime planDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Elijah5399"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Elijah5399"},"content":"     * Constructs a {@code PlanDateTime}.","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Elijah5399"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Elijah5399"},"content":"     * @param dateTimeString A valid date time string of the format YYYY-MM-DD-HH:MM.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Elijah5399"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Elijah5399"},"content":"    public PlanDateTime(String dateTimeString) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Elijah5399"},"content":"        requireNonNull(dateTimeString);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Elijah5399"},"content":"        checkArgument(isValidDateTime(dateTimeString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH:mm\");","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Elijah5399"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Elijah5399"},"content":"        planDateTime \u003d dateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Elijah5399"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Elijah5399"},"content":"     * Returns true if a given date time is valid.","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Elijah5399"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Elijah5399"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Elijah5399"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Elijah5399"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Elijah5399"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Elijah5399"},"content":"        String dateTimeString \u003d planDateTime.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Elijah5399"},"content":"        String formattedString \u003d dateTimeString.replace(\u0027T\u0027, \u0027 \u0027);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Elijah5399"},"content":"        return formattedString;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Elijah5399"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Elijah5399"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Elijah5399"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Elijah5399"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Elijah5399"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Elijah5399"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Elijah5399"},"content":"        if (!(other instanceof PlanDateTime)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Elijah5399"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Elijah5399"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Elijah5399"},"content":"        PlanDateTime otherTime \u003d (PlanDateTime) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Elijah5399"},"content":"        return this.planDateTime.equals(otherTime.planDateTime);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Elijah5399"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Elijah5399"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Elijah5399"},"content":"        return this.planDateTime.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Elijah5399"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":1,"Elijah5399":67}},{"path":"src/main/java/seedu/address/model/plan/PlanName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Elijah5399"},"content":"package seedu.address.model.plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Elijah5399"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Elijah5399"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Elijah5399"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Elijah5399"},"content":" * Represents a Plan\u0027s name in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Elijah5399"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPlanName(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Elijah5399"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Elijah5399"},"content":"public class PlanName {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Elijah5399"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Elijah5399"},"content":"            \"Plan name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Elijah5399"},"content":"    /*","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Elijah5399"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Elijah5399"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Elijah5399"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Elijah5399"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Elijah5399"},"content":"    public final String planName;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Elijah5399"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Elijah5399"},"content":"     * Constructs a {@code PlanName}.","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Elijah5399"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Elijah5399"},"content":"     * @param name A valid name for a Plan.","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Elijah5399"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Elijah5399"},"content":"    public PlanName(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Elijah5399"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Elijah5399"},"content":"        checkArgument(isValidPlanName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Elijah5399"},"content":"        planName \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Elijah5399"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Elijah5399"},"content":"     * Returns true if a given string is a valid Plan name.","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Elijah5399"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Elijah5399"},"content":"    public static boolean isValidPlanName(String test) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Elijah5399"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Elijah5399"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Elijah5399"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Elijah5399"},"content":"        return planName;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Elijah5399"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Elijah5399"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Elijah5399"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Elijah5399"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Elijah5399"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Elijah5399"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Elijah5399"},"content":"        if (!(other instanceof seedu.address.model.plan.PlanName)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Elijah5399"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Elijah5399"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Elijah5399"},"content":"        seedu.address.model.plan.PlanName otherName \u003d (seedu.address.model.plan.PlanName) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Elijah5399"},"content":"        return planName.equals(otherName.planName);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Elijah5399"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Elijah5399"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Elijah5399"},"content":"        return planName.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Elijah5399"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Elijah5399"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Elijah5399"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Elijah5399":67}},{"path":"src/main/java/seedu/address/model/plan/PlanNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"victorlaiyeeteng"},"content":"package seedu.address.model.plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"victorlaiyeeteng"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"victorlaiyeeteng"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":"public class PlanNameContainsKeywordsPredicate implements Predicate\u003cPlan\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"    public PlanNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"victorlaiyeeteng"},"content":"    public boolean test(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"victorlaiyeeteng"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(plan.getPlanName().planName, keyword));","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"victorlaiyeeteng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"victorlaiyeeteng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"victorlaiyeeteng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"victorlaiyeeteng"},"content":"        if (!(other instanceof seedu.address.model.plan.PlanNameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"victorlaiyeeteng"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"victorlaiyeeteng"},"content":"        seedu.address.model.plan.PlanNameContainsKeywordsPredicate planNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"victorlaiyeeteng"},"content":"                (seedu.address.model.plan.PlanNameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"victorlaiyeeteng"},"content":"        return keywords.equals(planNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"victorlaiyeeteng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"victorlaiyeeteng"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"victorlaiyeeteng"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":46}},{"path":"src/main/java/seedu/address/model/plan/UniquePlanList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redtailedfox"},"content":"package seedu.address.model.plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"redtailedfox"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"redtailedfox"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"redtailedfox"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"redtailedfox"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"redtailedfox"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"redtailedfox"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"redtailedfox"},"content":"import seedu.address.model.plan.exceptions.DuplicatePlanException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"redtailedfox"},"content":"import seedu.address.model.plan.exceptions.PlanNotFoundException;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"redtailedfox"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"redtailedfox"},"content":" * A list of plans that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"redtailedfox"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"redtailedfox"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"redtailedfox"},"content":"public class UniquePlanList implements Iterable\u003cPlan\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"redtailedfox"},"content":"    private final ObservableList\u003cPlan\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"redtailedfox"},"content":"    private final ObservableList\u003cPlan\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"redtailedfox"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"redtailedfox"},"content":"     * Returns true if the list contains an equivalent plan as the given argument.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"redtailedfox"},"content":"    public boolean contains(Plan toCheck) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"redtailedfox"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"redtailedfox"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"redtailedfox"},"content":"     * Adds a plan to the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"redtailedfox"},"content":"     * The plan must not already exist in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"redtailedfox"},"content":"    public void add(Plan toAdd) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"redtailedfox"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"redtailedfox"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"redtailedfox"},"content":"            throw new DuplicatePlanException();","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"redtailedfox"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"redtailedfox"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"redtailedfox"},"content":"     * Removes the equivalent plan from the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"redtailedfox"},"content":"     * The plan must exist in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"redtailedfox"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"redtailedfox"},"content":"    public void remove(Plan toRemove) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"redtailedfox"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"redtailedfox"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"redtailedfox"},"content":"            throw new PlanNotFoundException();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"redtailedfox"},"content":"    public void setPlan(Plan target, Plan editedPlan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"redtailedfox"},"content":"        requireAllNonNull(target, editedPlan);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"redtailedfox"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"redtailedfox"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"redtailedfox"},"content":"            throw new PlanNotFoundException();","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"redtailedfox"},"content":"        if (contains(editedPlan)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"redtailedfox"},"content":"            throw new DuplicatePlanException();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"redtailedfox"},"content":"        internalList.set(index, editedPlan);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"redtailedfox"},"content":"    public void setPlans(List\u003cPlan\u003e plans) {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"redtailedfox"},"content":"        requireAllNonNull(plans);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"redtailedfox"},"content":"        if (!plansAreUnique(plans)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"redtailedfox"},"content":"            throw new DuplicatePlanException();","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"redtailedfox"},"content":"        internalList.setAll(plans);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"redtailedfox"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"redtailedfox"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"redtailedfox"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"redtailedfox"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"redtailedfox"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"redtailedfox"},"content":"        if (!(other instanceof UniquePlanList)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"redtailedfox"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"redtailedfox"},"content":"        UniquePlanList otherUniquePlanList \u003d (UniquePlanList) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"redtailedfox"},"content":"        return internalList.equals(otherUniquePlanList.internalList);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"redtailedfox"},"content":"    public ObservableList\u003cPlan\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"redtailedfox"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"redtailedfox"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"redtailedfox"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"redtailedfox"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"redtailedfox"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"redtailedfox"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"redtailedfox"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"redtailedfox"},"content":"    public Iterator\u003cPlan\u003e iterator() {","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"redtailedfox"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"redtailedfox"},"content":"    private boolean plansAreUnique(List\u003cPlan\u003e plans) {","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"redtailedfox"},"content":"        for (int i \u003d 0; i \u003c plans.size() - 1; i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"redtailedfox"},"content":"            for (int j \u003d i + 1; j \u003c plans.size(); j++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"redtailedfox"},"content":"                if (plans.get(i).equals(plans.get(j))) {","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"redtailedfox"},"content":"                    return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"redtailedfox"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"redtailedfox"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"redtailedfox"},"content":"        return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"redtailedfox"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"redtailedfox":125}},{"path":"src/main/java/seedu/address/model/plan/exceptions/DuplicatePlanException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redtailedfox"},"content":"package seedu.address.model.plan.exceptions;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"redtailedfox"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"redtailedfox"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"redtailedfox"},"content":" * identity).","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"redtailedfox"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"redtailedfox"},"content":"public class DuplicatePlanException extends RuntimeException {","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"redtailedfox"},"content":"    public DuplicatePlanException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"redtailedfox"},"content":"        super(\"Operation would result in duplicate plan\");","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"redtailedfox"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"redtailedfox"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"redtailedfox":11}},{"path":"src/main/java/seedu/address/model/plan/exceptions/PlanNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redtailedfox"},"content":"package seedu.address.model.plan.exceptions;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"redtailedfox"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"redtailedfox"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"redtailedfox"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"redtailedfox"},"content":"public class PlanNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"redtailedfox":6}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"redtailedfox":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNCLEAR_COMMAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"jannnice"},"content":"        String invalidCommand \u003d \"uicfhmowqewca-friend\";","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"jannnice"},"content":"        String deleteCommand \u003d \"delete-friend 9\";","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"jannnice"},"content":"        String listFriendCommand \u003d \"list-friend\";","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jannnice"},"content":"        assertCommandSuccess(listFriendCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jannnice"},"content":"    public void execute_helpCommand_success() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"jannnice"},"content":"        String helpCommand \u003d \"help\";","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"jannnice"},"content":"        assertCommandSuccess(helpCommand, HelpCommand.SHOWING_HELP_MESSAGE, model);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"jannnice"},"content":"    public void execute_unclearCommand_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jannnice"},"content":"        String unclearCommand \u003d \"delete 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"jannnice"},"content":"        assertParseException(unclearCommand, MESSAGE_UNCLEAR_COMMAND);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"jannnice"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + \"-friend\" + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jannnice":16,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"redtailedfox"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"redtailedfox"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"redtailedfox"},"content":"        public void addPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"redtailedfox"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"victorlaiyeeteng"},"content":"        public Person getPersonByName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"victorlaiyeeteng"},"content":"        public boolean hasPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"redtailedfox"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"redtailedfox"},"content":"        public void deletePlan(Plan target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"redtailedfox"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"redtailedfox"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"redtailedfox"},"content":"        public void setPlan(Plan target, Plan editedPlan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"redtailedfox"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"redtailedfox"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"redtailedfox"},"content":"        public ObservableList\u003cPlan\u003e getFilteredPlanList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"redtailedfox"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"redtailedfox"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"redtailedfox"},"content":"        public void updateFilteredPlanList(Predicate\u003cPlan\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"redtailedfox"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"victorlaiyeeteng":10,"-":204,"redtailedfox":27}},{"path":"src/test/java/seedu/address/logic/commands/AddPlanCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"victorlaiyeeteng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"victorlaiyeeteng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"victorlaiyeeteng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"victorlaiyeeteng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.testutil.TypicalPlans.MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"victorlaiyeeteng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.testutil.PlanBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"victorlaiyeeteng"},"content":"public class AddPlanCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void constructor_nullPlan_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPlanCommand(null, null, null));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void execute_planAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"victorlaiyeeteng"},"content":"        ModelStubAcceptingPlanAdded modelStub \u003d new ModelStubAcceptingPlanAdded();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"victorlaiyeeteng"},"content":"        Plan validPlan \u003d new PlanBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"victorlaiyeeteng"},"content":"        CommandResult commandResult \u003d new AddPlanCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"victorlaiyeeteng"},"content":"                validPlan.getPlanName(), validPlan.getPlanDateTime(), validPlan.getPlanFriend().getName()","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"victorlaiyeeteng"},"content":"        ).execute(modelStub);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertEquals(String.format(AddPlanCommand.MESSAGE_SUCCESS, Messages.format(validPlan)),","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"victorlaiyeeteng"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertEquals(Arrays.asList(validPlan), modelStub.plansAdded);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void execute_duplicatePlan_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"victorlaiyeeteng"},"content":"        Plan validPlan \u003d new PlanBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"victorlaiyeeteng"},"content":"        AddPlanCommand addPlanCommand \u003d new AddPlanCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"victorlaiyeeteng"},"content":"                validPlan.getPlanName(), validPlan.getPlanDateTime(), validPlan.getPlanFriend().getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"victorlaiyeeteng"},"content":"        ModelStub modelStub \u003d new ModelStubWithPlan(validPlan);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"victorlaiyeeteng"},"content":"                AddPlanCommand.MESSAGE_DUPLICATE_PLAN, () -\u003e addPlanCommand.execute(modelStub));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"victorlaiyeeteng"},"content":"        Plan meeting \u003d new PlanBuilder().withPlanName(\"Meeting\")","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"victorlaiyeeteng"},"content":"                .withPlanDateTime(\"2025-10-23-12:00\").withPlanFriend(ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"victorlaiyeeteng"},"content":"        Plan gaming \u003d new PlanBuilder().withPlanName(\"Gaming\")","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"victorlaiyeeteng"},"content":"                .withPlanDateTime(\"2025-10-28-16:00\").withPlanFriend(ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"victorlaiyeeteng"},"content":"        AddPlanCommand addMeetingCommand \u003d new AddPlanCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"victorlaiyeeteng"},"content":"                meeting.getPlanName(), meeting.getPlanDateTime(), meeting.getPlanFriend().getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"victorlaiyeeteng"},"content":"        AddPlanCommand addGamingCommand \u003d new AddPlanCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"victorlaiyeeteng"},"content":"                gaming.getPlanName(), gaming.getPlanDateTime(), gaming.getPlanFriend().getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertTrue(addMeetingCommand.equals(addMeetingCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"victorlaiyeeteng"},"content":"        AddPlanCommand addMeetingCommandCopy \u003d new AddPlanCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"victorlaiyeeteng"},"content":"                meeting.getPlanName(), meeting.getPlanDateTime(), meeting.getPlanFriend().getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertTrue(addMeetingCommand.equals(addMeetingCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertFalse(addMeetingCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertFalse(addMeetingCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertFalse(addMeetingCommand.equals(addGamingCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"victorlaiyeeteng"},"content":"        AddPlanCommand addPlanCommand \u003d new AddPlanCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"victorlaiyeeteng"},"content":"                MEETING.getPlanName(), MEETING.getPlanDateTime(), MEETING.getPlanFriend().getName()","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"victorlaiyeeteng"},"content":"        );","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"victorlaiyeeteng"},"content":"        String expected \u003d AddPlanCommand.class.getCanonicalName() + \"{toAdd\u003d\" + MEETING + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertEquals(expected, addPlanCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"victorlaiyeeteng"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Only getPersonByName returns the DEFAULT_FRIEND in FriendBook testing.","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"victorlaiyeeteng"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"victorlaiyeeteng"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"victorlaiyeeteng"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"victorlaiyeeteng"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void addPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"victorlaiyeeteng"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"victorlaiyeeteng"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"victorlaiyeeteng"},"content":"        public Person getPersonByName(Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"victorlaiyeeteng"},"content":"            return ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"victorlaiyeeteng"},"content":"        public boolean hasPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void deletePlan(Plan target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void setPlan(Plan target, Plan editedPlan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"victorlaiyeeteng"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"victorlaiyeeteng"},"content":"        public ObservableList\u003cPlan\u003e getFilteredPlanList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void updateFilteredPlanList(Predicate\u003cPlan\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"victorlaiyeeteng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"victorlaiyeeteng"},"content":"     * A Model stub that contains a single plan.","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"victorlaiyeeteng"},"content":"    private class ModelStubWithPlan extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"victorlaiyeeteng"},"content":"        private final Plan plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"victorlaiyeeteng"},"content":"        ModelStubWithPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"victorlaiyeeteng"},"content":"            requireNonNull(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"victorlaiyeeteng"},"content":"            this.plan \u003d plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"victorlaiyeeteng"},"content":"        public boolean hasPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"victorlaiyeeteng"},"content":"            requireNonNull(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"victorlaiyeeteng"},"content":"            return this.plan.equals(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"victorlaiyeeteng"},"content":"     * A Model stub that always accept the plan being added.","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"victorlaiyeeteng"},"content":"    private class ModelStubAcceptingPlanAdded extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"victorlaiyeeteng"},"content":"        final ArrayList\u003cPlan\u003e plansAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"victorlaiyeeteng"},"content":"        public boolean hasPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"victorlaiyeeteng"},"content":"            requireNonNull(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"victorlaiyeeteng"},"content":"            return plansAdded.stream().anyMatch(plan::equals);","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"victorlaiyeeteng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"victorlaiyeeteng"},"content":"        public void addPlan(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"victorlaiyeeteng"},"content":"            requireNonNull(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"victorlaiyeeteng"},"content":"            plansAdded.add(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"victorlaiyeeteng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":242}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String VALID_PLAN_NAME_MEETING \u003d \"Meeting\";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String VALID_PLAN_DATETIME_MEETING \u003d \"2025-10-23-12:00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String VALID_PLAN_FRIEND_MEETING \u003d \"Alice Pauline\";","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String VALID_PLAN_NAME_GAMING \u003d \"Gaming\";","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String VALID_PLAN_DATETIME_GAMING \u003d \"2025-10-28-16:00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String VALID_PLAN_FRIEND_GAMING \u003d \"Alice Pauline\";","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String PLAN_NAME_DESC_MEETING \u003d \" \" + PREFIX_NAME + VALID_PLAN_NAME_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String PLAN_DATETIME_DESC_MEETING \u003d \" \" + PREFIX_DATETIME + VALID_PLAN_DATETIME_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String PLAN_FRIEND_DESC_MEETING \u003d \" \" + PREFIX_FRIEND + VALID_PLAN_FRIEND_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String PLAN_NAME_DESC_GAMING \u003d \" \" + PREFIX_NAME + VALID_PLAN_NAME_GAMING;","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String PLAN_DATETIME_DESC_GAMING \u003d \" \" + PREFIX_DATETIME + VALID_PLAN_DATETIME_GAMING;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String PLAN_FRIEND_DESC_GAMING \u003d \" \" + PREFIX_FRIEND + VALID_PLAN_FRIEND_GAMING;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String INVALID_PLAN_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Meeting\u0026\";","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String INVALID_PLAN_DATETIME_DESC \u003d \" \" + PREFIX_DATETIME + \"2023-10-10:10:00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String INVALID_PLAN_FRIEND_DESC \u003d \" \" + PREFIX_FRIEND + \"Alice\u0026\";","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Updates {@code model}\u0027s filtered list to show only the plan at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"victorlaiyeeteng"},"content":"     * {@code model}\u0027s FriendBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static void showPlanAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPlanList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"victorlaiyeeteng"},"content":"        Plan plan \u003d model.getFilteredPlanList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"victorlaiyeeteng"},"content":"        final String[] splitPlanName \u003d plan.getPlanName().planName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"victorlaiyeeteng"},"content":"        model.updateFilteredPlanList(new PlanNameContainsKeywordsPredicate(Arrays.asList(splitPlanName[0])));","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertEquals(1, model.getFilteredPlanList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"victorlaiyeeteng":33,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeletePlanCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPlanAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PLAN;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PLAN;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"import static seedu.address.testutil.TypicalPlans.getTypicalAddressBookWithPlans;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":" * {@code DeletePlanCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jannnice"},"content":"public class DeletePlanCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jannnice"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithPlans(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jannnice"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jannnice"},"content":"        Plan planToDelete \u003d model.getFilteredPlanList().get(INDEX_FIRST_PLAN.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jannnice"},"content":"        DeletePlanCommand deletePlanCommand \u003d new DeletePlanCommand(INDEX_FIRST_PLAN);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jannnice"},"content":"        String expectedMessage \u003d String.format(DeletePlanCommand.MESSAGE_DELETE_PLAN_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jannnice"},"content":"                Messages.format(planToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jannnice"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jannnice"},"content":"        expectedModel.deletePlan(planToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jannnice"},"content":"        assertCommandSuccess(deletePlanCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jannnice"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"jannnice"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPlanList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jannnice"},"content":"        DeletePlanCommand deletePlanCommand \u003d new DeletePlanCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"jannnice"},"content":"        assertCommandFailure(deletePlanCommand, model, Messages.MESSAGE_INVALID_PLAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jannnice"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"jannnice"},"content":"        showPlanAtIndex(model, INDEX_FIRST_PLAN);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"jannnice"},"content":"        Plan planToDelete \u003d model.getFilteredPlanList().get(INDEX_FIRST_PLAN.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"jannnice"},"content":"        DeletePlanCommand deletePlanCommand \u003d new DeletePlanCommand(INDEX_FIRST_PLAN);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jannnice"},"content":"        String expectedMessage \u003d String.format(DeletePlanCommand.MESSAGE_DELETE_PLAN_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"jannnice"},"content":"                Messages.format(planToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"jannnice"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jannnice"},"content":"        expectedModel.deletePlan(planToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jannnice"},"content":"        showNoPlan(expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"jannnice"},"content":"        assertCommandSuccess(deletePlanCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"jannnice"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"jannnice"},"content":"        showPlanAtIndex(model, INDEX_FIRST_PLAN);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"jannnice"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PLAN;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"jannnice"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jannnice"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPlanList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"jannnice"},"content":"        DeletePlanCommand deletePlanCommand \u003d new DeletePlanCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"jannnice"},"content":"        assertCommandFailure(deletePlanCommand, model, Messages.MESSAGE_INVALID_PLAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"jannnice"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"jannnice"},"content":"        DeletePlanCommand deletePlanFirstCommand \u003d new DeletePlanCommand(INDEX_FIRST_PLAN);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"jannnice"},"content":"        DeletePlanCommand deletePlanSecondCommand \u003d new DeletePlanCommand(INDEX_SECOND_PLAN);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"jannnice"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"jannnice"},"content":"        assertTrue(deletePlanFirstCommand.equals(deletePlanFirstCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jannnice"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jannnice"},"content":"        DeletePlanCommand deletePlanFirstCommandCopy \u003d new DeletePlanCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"jannnice"},"content":"        assertTrue(deletePlanFirstCommand.equals(deletePlanFirstCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"jannnice"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"jannnice"},"content":"        assertFalse(deletePlanFirstCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"jannnice"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"jannnice"},"content":"        assertFalse(deletePlanFirstCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"jannnice"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"jannnice"},"content":"        assertFalse(deletePlanFirstCommand.equals(deletePlanSecondCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"jannnice"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"jannnice"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"jannnice"},"content":"        DeletePlanCommand deletePlanCommand \u003d new DeletePlanCommand(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"jannnice"},"content":"        String expected \u003d DeletePlanCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"jannnice"},"content":"        assertEquals(expected, deletePlanCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"jannnice"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"jannnice"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"jannnice"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"jannnice"},"content":"    private void showNoPlan(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"jannnice"},"content":"        model.updateFilteredPlanList(p -\u003e false);","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"jannnice"},"content":"        assertTrue(model.getFilteredPlanList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jannnice":121}},{"path":"src/test/java/seedu/address/logic/commands/ListPlanCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"victorlaiyeeteng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPlanAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PLAN;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.testutil.TypicalPlans.getTypicalAddressBookWithPlans;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListPlanCommand.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"victorlaiyeeteng"},"content":"public class ListPlanCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"victorlaiyeeteng"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"        model \u003d new ModelManager(getTypicalAddressBookWithPlans(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"victorlaiyeeteng"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertCommandSuccess(new ListPlanCommand(), model, ListPlanCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"victorlaiyeeteng"},"content":"        showPlanAtIndex(model, INDEX_FIRST_PLAN);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertCommandSuccess(new ListPlanCommand(), model, ListPlanCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"victorlaiyeeteng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":39}},{"path":"src/test/java/seedu/address/logic/parser/AddPlanCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"victorlaiyeeteng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PLAN_DATETIME_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PLAN_FRIEND_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PLAN_NAME_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLAN_DATETIME_DESC_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLAN_FRIEND_DESC_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLAN_NAME_DESC_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLAN_DATETIME_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLAN_FRIEND_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLAN_NAME_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.testutil.TypicalPlans.MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"victorlaiyeeteng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.commands.AddPlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanName;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.testutil.PlanBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"victorlaiyeeteng"},"content":"public class AddPlanCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"victorlaiyeeteng"},"content":"    private AddPlanCommandParser parser \u003d new AddPlanCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"victorlaiyeeteng"},"content":"        Plan expectedPlan \u003d new PlanBuilder(MEETING).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"victorlaiyeeteng"},"content":"                PREAMBLE_WHITESPACE + PLAN_NAME_DESC_MEETING + PLAN_DATETIME_DESC_MEETING","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"victorlaiyeeteng"},"content":"                        + PLAN_FRIEND_DESC_MEETING, new AddPlanCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"victorlaiyeeteng"},"content":"                                expectedPlan.getPlanName(), expectedPlan.getPlanDateTime(),","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"victorlaiyeeteng"},"content":"                        expectedPlan.getPlanFriend().getName())","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"victorlaiyeeteng"},"content":"        );","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void parse_invalidFields_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"victorlaiyeeteng"},"content":"        String validExpectedPlanString \u003d PLAN_NAME_DESC_MEETING + PLAN_DATETIME_DESC_MEETING + PLAN_FRIEND_DESC_MEETING;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"victorlaiyeeteng"},"content":"        // multiple plan names","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, PLAN_NAME_DESC_MEETING + validExpectedPlanString,","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"victorlaiyeeteng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"victorlaiyeeteng"},"content":"        // multiple date times","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, PLAN_DATETIME_DESC_MEETING + validExpectedPlanString,","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"victorlaiyeeteng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATETIME));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"victorlaiyeeteng"},"content":"        // multiple friends","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, PLAN_FRIEND_DESC_MEETING + validExpectedPlanString,","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"victorlaiyeeteng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FRIEND));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"victorlaiyeeteng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPlanCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"victorlaiyeeteng"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, VALID_PLAN_NAME_MEETING + PLAN_DATETIME_DESC_MEETING + PLAN_FRIEND_DESC_MEETING,","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"victorlaiyeeteng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"victorlaiyeeteng"},"content":"        // missing datetime prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, PLAN_DATETIME_DESC_MEETING + VALID_PLAN_DATETIME_MEETING + PLAN_FRIEND_DESC_MEETING,","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"victorlaiyeeteng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"victorlaiyeeteng"},"content":"        // missing friend prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, PLAN_DATETIME_DESC_MEETING + PLAN_DATETIME_DESC_MEETING + VALID_PLAN_FRIEND_MEETING,","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"victorlaiyeeteng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"victorlaiyeeteng"},"content":"        // missing all prefixes","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, VALID_PLAN_NAME_MEETING + VALID_PLAN_DATETIME_MEETING + VALID_PLAN_FRIEND_MEETING,","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"victorlaiyeeteng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"victorlaiyeeteng"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, INVALID_PLAN_NAME_DESC + PLAN_DATETIME_DESC_MEETING + PLAN_FRIEND_DESC_MEETING,","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"victorlaiyeeteng"},"content":"                PlanName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"victorlaiyeeteng"},"content":"        // invalid datetime","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, PLAN_NAME_DESC_MEETING + INVALID_PLAN_DATETIME_DESC + PLAN_FRIEND_DESC_MEETING,","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"victorlaiyeeteng"},"content":"                PlanDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"victorlaiyeeteng"},"content":"        // invalid friend","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, PLAN_NAME_DESC_MEETING + PLAN_DATETIME_DESC_MEETING + INVALID_PLAN_FRIEND_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"victorlaiyeeteng"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"victorlaiyeeteng"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, INVALID_PLAN_NAME_DESC + INVALID_PLAN_DATETIME_DESC + PLAN_FRIEND_DESC_MEETING,","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"victorlaiyeeteng"},"content":"                PlanName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"victorlaiyeeteng"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + PLAN_NAME_DESC_MEETING","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"victorlaiyeeteng"},"content":"                + PLAN_DATETIME_DESC_MEETING + PLAN_FRIEND_DESC_MEETING,","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"victorlaiyeeteng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPlanCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"victorlaiyeeteng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":102}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNCLEAR_COMMAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PLAN;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.commands.AddPlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"import seedu.address.logic.commands.DeletePlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.commands.ListPlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.testutil.PlanBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.testutil.PlanUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void parseCommand_unclearInput_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"jannnice"},"content":"        assertThrows(ParseException.class, MESSAGE_UNCLEAR_COMMAND, () -\u003e parser.parseCommand(\"unclear\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"jannnice"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"jannnice"},"content":"                -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void parseCommand_addPlan() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"victorlaiyeeteng"},"content":"        Plan plan \u003d new PlanBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"victorlaiyeeteng"},"content":"        AddPlanCommand command \u003d (AddPlanCommand) parser.parseCommand(PlanUtil.getAddPlanCommand(plan));","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertEquals(new AddPlanCommand(plan.getPlanName(), plan.getPlanDateTime(), plan.getPlanFriend().getName()),","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"victorlaiyeeteng"},"content":"                command);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"victorlaiyeeteng"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"victorlaiyeeteng"},"content":"    public void parseCommand_listPlan() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertTrue(parser.parseCommand(ListPlanCommand.COMMAND_WORD) instanceof ListPlanCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"victorlaiyeeteng"},"content":"        assertTrue(parser.parseCommand(ListPlanCommand.COMMAND_WORD + \" 3\") instanceof ListPlanCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"jannnice"},"content":"    public void parseCommand_deletePlan() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"jannnice"},"content":"        DeletePlanCommand command \u003d (DeletePlanCommand) parser.parseCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"jannnice"},"content":"                DeletePlanCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PLAN.getOneBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"jannnice"},"content":"        assertEquals(new DeletePlanCommand(INDEX_FIRST_PLAN), command);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"victorlaiyeeteng":20,"jannnice":14,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/DeletePlanCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jannnice"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jannnice"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jannnice"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jannnice"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jannnice"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PLAN;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jannnice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jannnice"},"content":"import seedu.address.logic.commands.DeletePlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jannnice"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jannnice"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jannnice"},"content":" * outside of the DeletePlanCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jannnice"},"content":" * same path through the DeletePlanCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jannnice"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jannnice"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jannnice"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jannnice"},"content":"public class DeletePlanCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jannnice"},"content":"    private DeletePlanCommandParser parser \u003d new DeletePlanCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jannnice"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jannnice"},"content":"        assertParseSuccess(parser, \"1\", new DeletePlanCommand(INDEX_FIRST_PLAN));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jannnice"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jannnice"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jannnice"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"jannnice"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePlanCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jannnice"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jannnice"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jannnice":32}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"redtailedfox"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"redtailedfox"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"redtailedfox"},"content":"        List\u003cPlan\u003e newPlans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"redtailedfox"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newPlans);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"redtailedfox"},"content":"        private final ObservableList\u003cPlan\u003e plans \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"redtailedfox"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cPlan\u003e plans) {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"redtailedfox"},"content":"            this.plans.setAll(plans);","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"redtailedfox"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"redtailedfox"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"redtailedfox"},"content":"        public ObservableList\u003cPlan\u003e getPlanList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"redtailedfox"},"content":"            return plans;","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"redtailedfox"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":106,"redtailedfox":12}},{"path":"src/test/java/seedu/address/testutil/PlanBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"victorlaiyeeteng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.PlanName;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"victorlaiyeeteng"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"victorlaiyeeteng"},"content":" * A utility class to help with building Plan objects.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"public class PlanBuilder {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String DEFAULT_PLAN_NAME \u003d \"Meeting\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final String DEFAULT_DATE_TIME \u003d \"2025-10-23-12:00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Person DEFAULT_FRIEND \u003d ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"    private PlanName planName;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"victorlaiyeeteng"},"content":"    private PlanDateTime planDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":"    private Person friend;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Creates a {@code PlanBuilder} with the default details.","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"victorlaiyeeteng"},"content":"    public PlanBuilder() {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"victorlaiyeeteng"},"content":"        planName \u003d new PlanName(DEFAULT_PLAN_NAME);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"        planDateTime \u003d new PlanDateTime(DEFAULT_DATE_TIME);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"        friend \u003d DEFAULT_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Initializes the PlanBuilder with the data of {@code planToCopy}.","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"victorlaiyeeteng"},"content":"    public PlanBuilder(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"victorlaiyeeteng"},"content":"        planName \u003d plan.getPlanName();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"victorlaiyeeteng"},"content":"        planDateTime \u003d plan.getPlanDateTime();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"victorlaiyeeteng"},"content":"        friend \u003d plan.getPlanFriend();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Sets the {@code PlanName} of the {@code Plan} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"victorlaiyeeteng"},"content":"    public PlanBuilder withPlanName(String planName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"victorlaiyeeteng"},"content":"        this.planName \u003d new PlanName(planName);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"victorlaiyeeteng"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Sets the {@code PlanDateTime} of the {@code Plan} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"victorlaiyeeteng"},"content":"    public PlanBuilder withPlanDateTime(String planDateTime) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"victorlaiyeeteng"},"content":"        this.planDateTime \u003d new PlanDateTime(planDateTime);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"victorlaiyeeteng"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Sets the {@code PlanFriend} of the {@code Plan} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"victorlaiyeeteng"},"content":"    public PlanBuilder withPlanFriend(Person friend) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"victorlaiyeeteng"},"content":"        this.friend \u003d friend;","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"victorlaiyeeteng"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"victorlaiyeeteng"},"content":"    public Plan build() {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"victorlaiyeeteng"},"content":"        return new Plan(planName, planDateTime, friend);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"victorlaiyeeteng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":71}},{"path":"src/test/java/seedu/address/testutil/PlanUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"victorlaiyeeteng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.logic.commands.AddPlanCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"victorlaiyeeteng"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"victorlaiyeeteng"},"content":" * A utility class for Plan.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"public class PlanUtil {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Returns an add plan command string for adding the {@code plan}","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static String getAddPlanCommand(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"        return AddPlanCommand.COMMAND_WORD + \" \" + getPlanDetails(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Returns the part of command string for the given {@code plan}\u0027s details.","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static String getPlanDetails(Plan plan) {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"victorlaiyeeteng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"victorlaiyeeteng"},"content":"        sb.append(PREFIX_NAME + plan.getPlanName().planName + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"        String originalDateTime \u003d plan.getPlanDateTime().toString().replace(\" \", \"-\");","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"        sb.append(PREFIX_DATETIME + originalDateTime + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"        sb.append(PREFIX_FRIEND + plan.getPlanFriend().getName().toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"victorlaiyeeteng"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"victorlaiyeeteng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":33}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Index INDEX_FIRST_PLAN \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Index INDEX_SECOND_PLAN \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Index INDEX_THIRD_PLAN \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"victorlaiyeeteng":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPlans.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"victorlaiyeeteng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"victorlaiyeeteng"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"victorlaiyeeteng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"victorlaiyeeteng"},"content":"import seedu.address.model.plan.Plan;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"victorlaiyeeteng"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"victorlaiyeeteng"},"content":" * A utility class containing a list of {@code Plan} objects to be used in tests.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"victorlaiyeeteng"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"victorlaiyeeteng"},"content":"public class TypicalPlans {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Plan MEETING \u003d new PlanBuilder().withPlanName(\"Meeting\")","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"victorlaiyeeteng"},"content":"            .withPlanDateTime(\"2025-10-23-12:00\").withPlanFriend(ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Plan GAMING \u003d new PlanBuilder().withPlanName(\"Gaming\")","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"victorlaiyeeteng"},"content":"            .withPlanDateTime(\"2025-10-28-16:00\").withPlanFriend(ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Plan EXERCISING \u003d new PlanBuilder().withPlanName(\"Exercising\")","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"victorlaiyeeteng"},"content":"            .withPlanDateTime(\"2025-11-01-09:00\").withPlanFriend(ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Plan HACKATHON \u003d new PlanBuilder().withPlanName(\"Hackathon\")","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"victorlaiyeeteng"},"content":"            .withPlanDateTime(\"2025-09-01-06:00\").withPlanFriend(ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static final Plan BALI \u003d new PlanBuilder().withPlanName(\"Bali Trip\")","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"victorlaiyeeteng"},"content":"            .withPlanDateTime(\"2025-06-01-09:00\").withPlanFriend(ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"victorlaiyeeteng"},"content":"    private TypicalPlans() {}","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"victorlaiyeeteng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"victorlaiyeeteng"},"content":"     * Returns an {@code AddressBook} with all the typical plans.","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"victorlaiyeeteng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static AddressBook getTypicalAddressBookWithPlans() {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"victorlaiyeeteng"},"content":"        AddressBook ab \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"victorlaiyeeteng"},"content":"        for (Plan plan: getTypicalPlans()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"victorlaiyeeteng"},"content":"            ab.addPlan(plan);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"victorlaiyeeteng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"victorlaiyeeteng"},"content":"        return ab;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"victorlaiyeeteng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"victorlaiyeeteng"},"content":"    public static List\u003cPlan\u003e getTypicalPlans() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"victorlaiyeeteng"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING, GAMING, EXERCISING, HACKATHON, BALI));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"victorlaiyeeteng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"victorlaiyeeteng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"victorlaiyeeteng":44}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T10-2/tp/actions)","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"# CoordiMate","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"CoordiMate is a **desktop app for event planners**. It helps you **manage your contacts and tasks** for your events, so that you can focus on the event itself.","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"CoordiMate is **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"If you can type fast, CoordiMate can help you get your contact management tasks done **faster than traditional GUI apps**.","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"## Documentation","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"For detailed documentation of this project, see the **[CoordiMate Product Website](https://ay2324s1-cs2103t-t10-2.github.io/tp/)**.","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"## Acknowledgements","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jiakai-17":16,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"### Xing Lingxi","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"\u003cimg src\u003d\"images/hugenoob.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"[[github](https://github.com/HugeNoob)]","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"[[portfolio](team/hugenoob.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"* Role: Developer","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"### Li Jiakai","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"\u003cimg src\u003d\"images/jiakai-17.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"[[github](https://github.com/jiakai-17)]","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"[[portfolio](team/jiakai-17.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"* Role: Developer","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"* Responsibilities: In charge of Storage and Documentation","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"pra-navi"},"content":"### Pranavi","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"pra-navi"},"content":"\u003cimg src\u003d\"images/pra-navi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"pra-navi"},"content":"[[github](http://github.com/pra-navi)] [[portfolio](team/pra-navi.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"### Megan Loo","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"\u003cimg src\u003d\"images/m1oojv.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"[[github](http://github.com/m1oojv)]","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"[[portfolio](team/m1oojv.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"### Alan Lim","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"\u003cimg src\u003d\"images/freshcabbage123.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"[[github](http://github.com/freshcabbage123)]","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"[[portfolio](team/freshcabbage123.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"HugeNoob":5,"m1oojv":4,"jiakai-17":6,"pra-navi":3,"-":35,"freshcabbage123":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"\u003ch2\u003e Table of Contents \u003c/h2\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"tip\" title\u003d\"Tip\" body\u003d\"","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"The \u003ccode\u003e.puml\u003c/code\u003e files used to create diagrams in this document are in the \u003ccode\u003edocs/diagrams\u003c/code\u003e folder. \u003cbr\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"Refer to the \u003ca href\u003d\u0027https://se-education.org/guides/tutorials/plantUml.html\u0027\u003e\u003ci\u003ePlantUML Tutorial\u003c/i\u003e at se-edu/guides\u003c/a\u003e to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-T10-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-T10-2/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-T10-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-09-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-T10-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-T10-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-09-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"jiakai-17"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-T10-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-09-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"note\" title\u003d\"Note\" body\u003d\"","lastModifiedDate":"2023-09-26"},{"lineNumber":104,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":105,"author":{"gitId":"jiakai-17"},"content":"The lifeline for \u003ccode\u003eDeleteCommandParser\u003c/code\u003e should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-09-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"jiakai-17"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-26"},{"lineNumber":113,"author":{"gitId":"jiakai-17"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-26"},{"lineNumber":114,"author":{"gitId":"jiakai-17"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"jiakai-17"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-T10-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-09-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"note\" title\u003d\"Note\" body\u003d\"","lastModifiedDate":"2023-09-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"jiakai-17"},"content":"An alternative (arguably, a more OOP) model is given below. It has a \u003ccode\u003eTag\u003c/code\u003e list in the \u003ccode\u003eAddressBook\u003c/code\u003e, which \u003ccode\u003ePerson\u003c/code\u003e references. This allows \u003ccode\u003eAddressBook\u003c/code\u003e to only require one \u003ccode\u003eTag\u003c/code\u003e object per unique tag, instead of each \u003ccode\u003ePerson\u003c/code\u003e needing their own \u003ccode\u003eTag\u003c/code\u003e objects. \u003cbr\u003e ","lastModifiedDate":"2023-09-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"jiakai-17"},"content":"\u003cimg src\u003d\u0027images/BetterModelClassDiagram.png\u0027 width\u003d\u0027450\u0027 /\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-09-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"jiakai-17"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-T10-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-09-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"note\" title\u003d\"Note\" body\u003d\"","lastModifiedDate":"2023-09-26"},{"lineNumber":193,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":194,"author":{"gitId":"jiakai-17"},"content":"If a command fails its execution, it will not call \u003ccode\u003eModel#commitAddressBook()\u003c/code\u003e, so the address book state will not be saved into the \u003ccode\u003eaddressBookStateList\u003c/code\u003e.","lastModifiedDate":"2023-09-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-09-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"note\" title\u003d\"Note\" body\u003d\"","lastModifiedDate":"2023-09-26"},{"lineNumber":203,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":204,"author":{"gitId":"jiakai-17"},"content":"If the \u003ccode\u003ecurrentStatePointer\u003c/code\u003e is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The \u003ccode\u003eundo\u003c/code\u003e command uses \u003ccode\u003eModel#canUndoAddressBook()\u003c/code\u003e to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-09-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"note\" title\u003d\"Note\" body\u003d\"","lastModifiedDate":"2023-09-26"},{"lineNumber":214,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":215,"author":{"gitId":"jiakai-17"},"content":"The lifeline for \u003ccode\u003eUndoCommand\u003c/code\u003e should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-09-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"note\" title\u003d\"Note\" body\u003d\"","lastModifiedDate":"2023-09-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":223,"author":{"gitId":"jiakai-17"},"content":"If the \u003ccode\u003ecurrentStatePointer\u003c/code\u003e is at index \u003ccode\u003eaddressBookStateList.size() - 1\u003c/code\u003e, pointing to the latest address book state, then there are no undone AddressBook states to restore. The \u003ccode\u003eredo\u003c/code\u003e command uses \u003ccode\u003eModel#canRedoAddressBook()\u003c/code\u003e to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-09-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"jiakai-17"},"content":"* Has a need to manage various contacts and tasks for event-planning","lastModifiedDate":"2023-09-26"},{"lineNumber":278,"author":{"gitId":"jiakai-17"},"content":"* Prefers desktop apps over other types","lastModifiedDate":"2023-09-26"},{"lineNumber":279,"author":{"gitId":"jiakai-17"},"content":"* Is comfortable with CLI apps","lastModifiedDate":"2023-09-26"},{"lineNumber":280,"author":{"gitId":"jiakai-17"},"content":"* Is able to type fast","lastModifiedDate":"2023-09-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"jiakai-17"},"content":"**Value proposition**: ","lastModifiedDate":"2023-09-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"jiakai-17"},"content":"CoordiMate helps event planners to easily keep track of contact details as well as the tasks to be done for various events, in a more efficient way compared to a typical mouse/GUI driven app.","lastModifiedDate":"2023-09-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"jiakai-17"},"content":"Priorities: ","lastModifiedDate":"2023-09-29"},{"lineNumber":289,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":290,"author":{"gitId":"jiakai-17"},"content":"* `* * *` - High (must have)","lastModifiedDate":"2023-09-29"},{"lineNumber":291,"author":{"gitId":"jiakai-17"},"content":"* `* *` - Medium (nice to have)","lastModifiedDate":"2023-09-29"},{"lineNumber":292,"author":{"gitId":"jiakai-17"},"content":"* `*` - Low (unlikely to have)","lastModifiedDate":"2023-09-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"| Priority | As a …​                                     | I want to …​                        | So that I can …​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"m1oojv"},"content":"| -------- | ------------------------------------------ | ---------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2023-10-04"},{"lineNumber":296,"author":{"gitId":"HugeNoob"},"content":"| `* * *`  | new user                                   | see help instructions              | refer to documentation to understand the existing features effectively |","lastModifiedDate":"2023-10-04"},{"lineNumber":297,"author":{"gitId":"pra-navi"},"content":"| `* * *`  | event planner                              | view both lists on the same screen | compare the task list and contact list while using the GUI             |","lastModifiedDate":"2023-09-26"},{"lineNumber":298,"author":{"gitId":"freshcabbage123"},"content":"| `* * *`  | event planner                              | add a new person\u0027s details         | remember details of new people I meet                                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":299,"author":{"gitId":"freshcabbage123"},"content":"| `* * *`  | event planner                              | list each person\u0027s details         | view all my contacts\u0027 details at a quick glance                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":300,"author":{"gitId":"m1oojv"},"content":"| `* * *`  | event planner                              | edit a person\u0027s details            | update details of persons that are outdated with new information       |","lastModifiedDate":"2023-10-04"},{"lineNumber":301,"author":{"gitId":"jiakai-17"},"content":"| `* * *`  | event planner                              | find a person by name              | locate a specific person without having to go through the entire list  |","lastModifiedDate":"2023-09-29"},{"lineNumber":302,"author":{"gitId":"pra-navi"},"content":"| `* * *`  | event planner                              | delete a contact                   | remove contacts that I no longer need                                  |","lastModifiedDate":"2023-09-26"},{"lineNumber":303,"author":{"gitId":"jiakai-17"},"content":"| `* * *`  | event planner                              | delete all contacts                | efficiently restart or declutter my contacts list                      |","lastModifiedDate":"2023-10-04"},{"lineNumber":304,"author":{"gitId":"jiakai-17"},"content":"| `* * *`  | event planner                              | create tasks to do                 | know what tasks I need to do in preparation for the event              |","lastModifiedDate":"2023-10-04"},{"lineNumber":305,"author":{"gitId":"freshcabbage123"},"content":"| `* * *`  | event planner                              | list each task\u0027s details           | view all my tasks\u0027 details at a quick glance                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":306,"author":{"gitId":"HugeNoob"},"content":"| `* * *`  | event planner                              | edit a task                        | ensure task details are up-to-date with latest information             |","lastModifiedDate":"2023-10-04"},{"lineNumber":307,"author":{"gitId":"jiakai-17"},"content":"| `* * *`  | event planner                              | find a task by name                | locate a specific task without having to go through the entire list    |","lastModifiedDate":"2023-09-29"},{"lineNumber":308,"author":{"gitId":"HugeNoob"},"content":"| `* * *`  | event planner                              | delete a task                      | remove tasks that are no longer relevant                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":309,"author":{"gitId":"m1oojv"},"content":"| `* * *`  | event planner                              | delete all tasks                   | clear all task entries and restart with a new clean task list          |","lastModifiedDate":"2023-10-04"},{"lineNumber":310,"author":{"gitId":"jiakai-17"},"content":"| `* * *`  | event planner                              | mark a task as done                | keep track of task progress and the number of tasks that are done      |","lastModifiedDate":"2023-10-05"},{"lineNumber":311,"author":{"gitId":"jiakai-17"},"content":"| `* * *`  | event planner                              | mark a task as not done            | keep track of task progress and the number of tasks that are not done  |","lastModifiedDate":"2023-10-05"},{"lineNumber":312,"author":{"gitId":"jiakai-17"},"content":"| `* * *`  | event planner                              | save my data automatically         | ensure that my contact and task data will not be lost                  |","lastModifiedDate":"2023-09-29"},{"lineNumber":313,"author":{"gitId":"jiakai-17"},"content":"| `* * *`  | event planner                              | load my data automatically         | quickly continue from where I left off in the last session             |","lastModifiedDate":"2023-09-29"},{"lineNumber":314,"author":{"gitId":"jiakai-17"},"content":"| `*`      | user                                       | hide private contact details       | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2023-10-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name               | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"jiakai-17"},"content":"For all use cases below, the **System** is `CoordiMate` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2023-10-04"},{"lineNumber":322,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":323,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC01 - View help instructions**","lastModifiedDate":"2023-10-04"},{"lineNumber":326,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":327,"author":{"gitId":"m1oojv"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":328,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":329,"author":{"gitId":"m1oojv"},"content":"1. User requests for help.","lastModifiedDate":"2023-10-04"},{"lineNumber":330,"author":{"gitId":"m1oojv"},"content":"2. CoordiMate shows the help instructions, with a link to user guide.","lastModifiedDate":"2023-10-04"},{"lineNumber":331,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":332,"author":{"gitId":"m1oojv"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":336,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC02 - Add a person to the contact list**","lastModifiedDate":"2023-10-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"freshcabbage123"},"content":"1. User requests to add a new person\u0027s particulars.","lastModifiedDate":"2023-10-04"},{"lineNumber":341,"author":{"gitId":"jiakai-17"},"content":"2. CoordiMate adds the person with the specified particulars.","lastModifiedDate":"2023-10-04"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"freshcabbage123"},"content":"* 1a. The given particulars are invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":348,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":349,"author":{"gitId":"freshcabbage123"},"content":"  * 1a1. CoordiMate shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":350,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":351,"author":{"gitId":"jiakai-17"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":352,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":353,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":354,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":355,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC03 - List all persons in the contact list**","lastModifiedDate":"2023-10-04"},{"lineNumber":356,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":357,"author":{"gitId":"freshcabbage123"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":358,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":359,"author":{"gitId":"freshcabbage123"},"content":"1. User requests to list all persons.","lastModifiedDate":"2023-10-04"},{"lineNumber":360,"author":{"gitId":"freshcabbage123"},"content":"2. CoordiMate shows a list of all persons.","lastModifiedDate":"2023-10-04"},{"lineNumber":361,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":362,"author":{"gitId":"freshcabbage123"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":365,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":366,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC04 - Edit a person\u0027s details in the contact list**","lastModifiedDate":"2023-10-04"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"jiakai-17"},"content":"1. User requests to list all persons.","lastModifiedDate":"2023-10-04"},{"lineNumber":371,"author":{"gitId":"m1oojv"},"content":"2. CoordiMate shows a list of persons.","lastModifiedDate":"2023-10-04"},{"lineNumber":372,"author":{"gitId":"jiakai-17"},"content":"3. User requests to edit a specific person in the list and provides the new particulars.","lastModifiedDate":"2023-10-04"},{"lineNumber":373,"author":{"gitId":"jiakai-17"},"content":"4. CoordiMate updates the person\u0027s details with the new particulars.","lastModifiedDate":"2023-10-04"},{"lineNumber":374,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":375,"author":{"gitId":"jiakai-17"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":381,"author":{"gitId":"pra-navi"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":382,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":383,"author":{"gitId":"pra-navi"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":384,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":385,"author":{"gitId":"jiakai-17"},"content":"  * 3a1. CoordiMate shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":386,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":387,"author":{"gitId":"jiakai-17"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":390,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":391,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC05 - Find a person in the contact list**","lastModifiedDate":"2023-10-04"},{"lineNumber":392,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":393,"author":{"gitId":"jiakai-17"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":394,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":395,"author":{"gitId":"jiakai-17"},"content":"1. User requests to search the contacts list with a search term.","lastModifiedDate":"2023-10-04"},{"lineNumber":396,"author":{"gitId":"jiakai-17"},"content":"2. CoordiMate lists all persons whose names contain the search term.","lastModifiedDate":"2023-10-04"},{"lineNumber":397,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":398,"author":{"gitId":"jiakai-17"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":399,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":400,"author":{"gitId":"jiakai-17"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":401,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":402,"author":{"gitId":"jiakai-17"},"content":"* 1a. User provides an empty search term.","lastModifiedDate":"2023-10-04"},{"lineNumber":403,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":404,"author":{"gitId":"jiakai-17"},"content":"  * 1a1. CoordiMate shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":405,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":406,"author":{"gitId":"jiakai-17"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":407,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":408,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC06 - Delete a person from the contact list**","lastModifiedDate":"2023-10-04"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"jiakai-17"},"content":"1. User requests to list all persons.","lastModifiedDate":"2023-10-04"},{"lineNumber":415,"author":{"gitId":"jiakai-17"},"content":"2. CoordiMate shows a list of persons.","lastModifiedDate":"2023-10-04"},{"lineNumber":416,"author":{"gitId":"jiakai-17"},"content":"3. User requests to delete a specific person in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":417,"author":{"gitId":"jiakai-17"},"content":"4. CoordiMate deletes the person.","lastModifiedDate":"2023-10-04"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"pra-navi"},"content":"* 2a. The contact list is empty.","lastModifiedDate":"2023-09-26"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"pra-navi"},"content":"  * 3a1. CoordiMate shows an error message.","lastModifiedDate":"2023-09-26"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"jiakai-17"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":432,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":433,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":434,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":435,"author":{"gitId":"HugeNoob"},"content":"**Use case: UC07 - Delete all existing contacts**","lastModifiedDate":"2023-10-04"},{"lineNumber":436,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":437,"author":{"gitId":"HugeNoob"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":438,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":439,"author":{"gitId":"HugeNoob"},"content":"1. User requests to delete all contacts.","lastModifiedDate":"2023-10-04"},{"lineNumber":440,"author":{"gitId":"jiakai-17"},"content":"2. CoordiMate deletes all contacts and shows a confirmation message.","lastModifiedDate":"2023-10-05"},{"lineNumber":441,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":442,"author":{"gitId":"jiakai-17"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":443,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":444,"author":{"gitId":"jiakai-17"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":445,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":446,"author":{"gitId":"jiakai-17"},"content":"* 1a. The contact list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":447,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":448,"author":{"gitId":"jiakai-17"},"content":"  * 1a1. CoordiMate informs the user that there are no contacts to be deleted.","lastModifiedDate":"2023-10-05"},{"lineNumber":449,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":450,"author":{"gitId":"HugeNoob"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":451,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":452,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":453,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":454,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC08 - Add a task to the task list**","lastModifiedDate":"2023-10-04"},{"lineNumber":455,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":456,"author":{"gitId":"jiakai-17"},"content":"**MSS**","lastModifiedDate":"2023-09-29"},{"lineNumber":457,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":458,"author":{"gitId":"jiakai-17"},"content":"1. User requests to add a task with a title and note.","lastModifiedDate":"2023-10-05"},{"lineNumber":459,"author":{"gitId":"jiakai-17"},"content":"2. CoordiMate adds the task.","lastModifiedDate":"2023-10-04"},{"lineNumber":460,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":461,"author":{"gitId":"jiakai-17"},"content":"   Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":462,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":463,"author":{"gitId":"jiakai-17"},"content":"**Extensions**","lastModifiedDate":"2023-09-29"},{"lineNumber":464,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":465,"author":{"gitId":"jiakai-17"},"content":"* 1a. No task title or note was provided.","lastModifiedDate":"2023-10-04"},{"lineNumber":466,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":467,"author":{"gitId":"pra-navi"},"content":"  * 1a1. CoordiMate shows an error message.","lastModifiedDate":"2023-09-26"},{"lineNumber":468,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":469,"author":{"gitId":"jiakai-17"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":470,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":471,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":472,"author":{"gitId":"pra-navi"},"content":"      ","lastModifiedDate":"2023-09-26"},{"lineNumber":473,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC09 - List all tasks in the task list**","lastModifiedDate":"2023-10-04"},{"lineNumber":474,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":475,"author":{"gitId":"freshcabbage123"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":476,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":477,"author":{"gitId":"freshcabbage123"},"content":"1. User requests to list all tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":478,"author":{"gitId":"freshcabbage123"},"content":"2. CoordiMate shows a list of all tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"freshcabbage123"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":483,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":484,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC10 - Edit a task in the task list**","lastModifiedDate":"2023-10-04"},{"lineNumber":485,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":486,"author":{"gitId":"HugeNoob"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":487,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":488,"author":{"gitId":"HugeNoob"},"content":"1. User requests to list all tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":489,"author":{"gitId":"HugeNoob"},"content":"2. CoordiMate shows a list of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":490,"author":{"gitId":"HugeNoob"},"content":"3. User requests to edit a specific task in the list with new details.","lastModifiedDate":"2023-10-04"},{"lineNumber":491,"author":{"gitId":"HugeNoob"},"content":"4. CoordiMate edits the task with the new details.","lastModifiedDate":"2023-10-04"},{"lineNumber":492,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":493,"author":{"gitId":"HugeNoob"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":494,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":495,"author":{"gitId":"HugeNoob"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":496,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":497,"author":{"gitId":"jiakai-17"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":498,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":499,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":501,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":503,"author":{"gitId":"HugeNoob"},"content":"  * 3a1. CoordiMate shows an error message and prompts the user to enter a valid index.","lastModifiedDate":"2023-10-04"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":505,"author":{"gitId":"jiakai-17"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":507,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":509,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC11 - Find a task in the task list**","lastModifiedDate":"2023-10-04"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":511,"author":{"gitId":"jiakai-17"},"content":"**MSS**","lastModifiedDate":"2023-09-29"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":513,"author":{"gitId":"jiakai-17"},"content":"1. User provides a search term.","lastModifiedDate":"2023-10-04"},{"lineNumber":514,"author":{"gitId":"jiakai-17"},"content":"2. CoordiMate lists all tasks whose names contain the search term.","lastModifiedDate":"2023-10-04"},{"lineNumber":515,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":516,"author":{"gitId":"jiakai-17"},"content":"   Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":517,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":518,"author":{"gitId":"jiakai-17"},"content":"**Extensions**","lastModifiedDate":"2023-09-29"},{"lineNumber":519,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":520,"author":{"gitId":"jiakai-17"},"content":"* 1a. User provides an empty search term.","lastModifiedDate":"2023-09-29"},{"lineNumber":521,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":522,"author":{"gitId":"jiakai-17"},"content":"  * 1a1. CoordiMate shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":523,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":524,"author":{"gitId":"jiakai-17"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":525,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":526,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":527,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":528,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC12 - Delete a task from the task list**","lastModifiedDate":"2023-10-04"},{"lineNumber":529,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":530,"author":{"gitId":"HugeNoob"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":531,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":532,"author":{"gitId":"HugeNoob"},"content":"1. User requests to list all tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":533,"author":{"gitId":"HugeNoob"},"content":"2. CoordiMate shows a list of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":534,"author":{"gitId":"HugeNoob"},"content":"3. User requests to delete a specific task in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":535,"author":{"gitId":"HugeNoob"},"content":"4. CoordiMate deletes the task.","lastModifiedDate":"2023-10-04"},{"lineNumber":536,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":537,"author":{"gitId":"HugeNoob"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":538,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":539,"author":{"gitId":"HugeNoob"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":540,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":541,"author":{"gitId":"HugeNoob"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":542,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":543,"author":{"gitId":"HugeNoob"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":544,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":545,"author":{"gitId":"HugeNoob"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":546,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":547,"author":{"gitId":"HugeNoob"},"content":"  * 3a1. CoordiMate shows an error message and prompts the user to enter a valid index.","lastModifiedDate":"2023-10-04"},{"lineNumber":548,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":549,"author":{"gitId":"HugeNoob"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":550,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":551,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":552,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":553,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC13 - Delete all tasks from the task list**","lastModifiedDate":"2023-10-05"},{"lineNumber":554,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":555,"author":{"gitId":"m1oojv"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":556,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":557,"author":{"gitId":"m1oojv"},"content":"1. User requests to clear all tasks in task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":558,"author":{"gitId":"m1oojv"},"content":"2. CoordiMate clears entire task list.","lastModifiedDate":"2023-10-04"},{"lineNumber":559,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":560,"author":{"gitId":"m1oojv"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":561,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":562,"author":{"gitId":"m1oojv"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":563,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":564,"author":{"gitId":"jiakai-17"},"content":"* 1a. The task list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":565,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":566,"author":{"gitId":"jiakai-17"},"content":"  * 1a1. CoordiMate informs the user that there are no tasks to be deleted.","lastModifiedDate":"2023-10-05"},{"lineNumber":567,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":568,"author":{"gitId":"m1oojv"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":569,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":570,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":571,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":572,"author":{"gitId":"m1oojv"},"content":"**Use case: UC14 - Mark a task as done**","lastModifiedDate":"2023-10-04"},{"lineNumber":573,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":574,"author":{"gitId":"m1oojv"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":575,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":576,"author":{"gitId":"m1oojv"},"content":"1. User requests to list tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":577,"author":{"gitId":"m1oojv"},"content":"2. CoordiMate shows a list of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":578,"author":{"gitId":"m1oojv"},"content":"3. User requests to mark a specific task in the list as done.","lastModifiedDate":"2023-10-04"},{"lineNumber":579,"author":{"gitId":"m1oojv"},"content":"4. CoordiMate updates the status of the task to be done.","lastModifiedDate":"2023-10-04"},{"lineNumber":580,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":581,"author":{"gitId":"m1oojv"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":582,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":583,"author":{"gitId":"m1oojv"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":584,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":585,"author":{"gitId":"m1oojv"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":586,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":587,"author":{"gitId":"m1oojv"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":588,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":589,"author":{"gitId":"m1oojv"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":590,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":591,"author":{"gitId":"m1oojv"},"content":"  * 3a1. CoordiMate shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":592,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":593,"author":{"gitId":"jiakai-17"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":594,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":595,"author":{"gitId":"m1oojv"},"content":"* 3b. The specific task is already marked as done.","lastModifiedDate":"2023-10-04"},{"lineNumber":596,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":597,"author":{"gitId":"m1oojv"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":598,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":599,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":600,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":601,"author":{"gitId":"m1oojv"},"content":"**Use case: UC15 - Mark a task as not done**","lastModifiedDate":"2023-10-04"},{"lineNumber":602,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":603,"author":{"gitId":"m1oojv"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":604,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":605,"author":{"gitId":"m1oojv"},"content":"1. User requests to list tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":606,"author":{"gitId":"m1oojv"},"content":"2. CoordiMate shows a list of tasks.","lastModifiedDate":"2023-10-04"},{"lineNumber":607,"author":{"gitId":"m1oojv"},"content":"3. User requests to mark a specific task in the list as not done.","lastModifiedDate":"2023-10-04"},{"lineNumber":608,"author":{"gitId":"m1oojv"},"content":"4. CoordiMate updates the status of the task to be not done.","lastModifiedDate":"2023-10-04"},{"lineNumber":609,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":610,"author":{"gitId":"m1oojv"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":611,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":612,"author":{"gitId":"m1oojv"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":613,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":614,"author":{"gitId":"m1oojv"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":615,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":616,"author":{"gitId":"m1oojv"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":617,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":618,"author":{"gitId":"m1oojv"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":619,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":620,"author":{"gitId":"m1oojv"},"content":"  * 3a1. CoordiMate shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":621,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":622,"author":{"gitId":"jiakai-17"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":623,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":624,"author":{"gitId":"m1oojv"},"content":"* 3b. The specific task is already marked as not done.","lastModifiedDate":"2023-10-04"},{"lineNumber":625,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":626,"author":{"gitId":"m1oojv"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":629,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":630,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC16 - Exit CoordiMate**","lastModifiedDate":"2023-10-04"},{"lineNumber":631,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":632,"author":{"gitId":"jiakai-17"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":633,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":634,"author":{"gitId":"jiakai-17"},"content":"1. User requests to exit CoordiMate.","lastModifiedDate":"2023-10-04"},{"lineNumber":635,"author":{"gitId":"jiakai-17"},"content":"2. CoordiMate exits.","lastModifiedDate":"2023-10-04"},{"lineNumber":636,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":637,"author":{"gitId":"jiakai-17"},"content":"   Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":638,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":639,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":640,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":641,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC17 - Load data from save file**","lastModifiedDate":"2023-10-04"},{"lineNumber":642,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":643,"author":{"gitId":"jiakai-17"},"content":"**MSS**","lastModifiedDate":"2023-09-29"},{"lineNumber":644,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":645,"author":{"gitId":"jiakai-17"},"content":"1. User launches CoordiMate.","lastModifiedDate":"2023-10-04"},{"lineNumber":646,"author":{"gitId":"jiakai-17"},"content":"2. CoordiMate shows the data from the save file.","lastModifiedDate":"2023-10-04"},{"lineNumber":647,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":648,"author":{"gitId":"jiakai-17"},"content":"   Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":649,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":650,"author":{"gitId":"jiakai-17"},"content":"**Extensions**","lastModifiedDate":"2023-09-29"},{"lineNumber":651,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":652,"author":{"gitId":"jiakai-17"},"content":"* 1a. The save file is missing.","lastModifiedDate":"2023-09-29"},{"lineNumber":653,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":654,"author":{"gitId":"jiakai-17"},"content":"  * 1a1. CoordiMate shows sample data.","lastModifiedDate":"2023-09-29"},{"lineNumber":655,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":656,"author":{"gitId":"jiakai-17"},"content":"      Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":657,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":658,"author":{"gitId":"jiakai-17"},"content":"* 1b. The save file is corrupted.","lastModifiedDate":"2023-09-29"},{"lineNumber":659,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":660,"author":{"gitId":"jiakai-17"},"content":"  * 1b1. CoordiMate shows an error message and shows no entries.","lastModifiedDate":"2023-10-04"},{"lineNumber":661,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":662,"author":{"gitId":"jiakai-17"},"content":"      Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":663,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":664,"author":{"gitId":"jiakai-17"},"content":"* 1c. An error occurs while loading the save file.","lastModifiedDate":"2023-09-29"},{"lineNumber":665,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":666,"author":{"gitId":"jiakai-17"},"content":"  * 1c1. CoordiMate shows an error message and shows no entries.","lastModifiedDate":"2023-10-04"},{"lineNumber":667,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":668,"author":{"gitId":"jiakai-17"},"content":"      Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":669,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":670,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":671,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":672,"author":{"gitId":"jiakai-17"},"content":"**Use case: UC18 - Save data to save file**","lastModifiedDate":"2023-10-04"},{"lineNumber":673,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":674,"author":{"gitId":"jiakai-17"},"content":"**MSS**","lastModifiedDate":"2023-09-29"},{"lineNumber":675,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":676,"author":{"gitId":"jiakai-17"},"content":"1. User makes changes to the data in CoordiMate.","lastModifiedDate":"2023-10-04"},{"lineNumber":677,"author":{"gitId":"jiakai-17"},"content":"2. CoordiMate indicates that data is successfully saved to the save file.","lastModifiedDate":"2023-10-04"},{"lineNumber":678,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":679,"author":{"gitId":"jiakai-17"},"content":"   Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":680,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":681,"author":{"gitId":"jiakai-17"},"content":"**Extensions**","lastModifiedDate":"2023-09-29"},{"lineNumber":682,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":683,"author":{"gitId":"jiakai-17"},"content":"* 1a. The save file is missing.","lastModifiedDate":"2023-09-29"},{"lineNumber":684,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":685,"author":{"gitId":"jiakai-17"},"content":"  * 1a1. CoordiMate creates a new save file.","lastModifiedDate":"2023-09-29"},{"lineNumber":686,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":687,"author":{"gitId":"jiakai-17"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-09-29"},{"lineNumber":688,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":689,"author":{"gitId":"jiakai-17"},"content":"* 1b. An error occurs while saving to the save file.","lastModifiedDate":"2023-09-29"},{"lineNumber":690,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":691,"author":{"gitId":"jiakai-17"},"content":"  * 1b1. CoordiMate shows an error message.","lastModifiedDate":"2023-09-29"},{"lineNumber":692,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":693,"author":{"gitId":"jiakai-17"},"content":"      Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":694,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":695,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"HugeNoob"},"content":"2. Should be able to hold up to 1000 persons and tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-04"},{"lineNumber":701,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"HugeNoob"},"content":"4. Application should be designed for a single user.","lastModifiedDate":"2023-09-27"},{"lineNumber":703,"author":{"gitId":"HugeNoob"},"content":"5. Data should be stored locally in a human-readable and editable text file.","lastModifiedDate":"2023-09-27"},{"lineNumber":704,"author":{"gitId":"HugeNoob"},"content":"6. Data should persist across usage sessions.","lastModifiedDate":"2023-09-27"},{"lineNumber":705,"author":{"gitId":"HugeNoob"},"content":"7. Application should not require internet connection to run.","lastModifiedDate":"2023-09-27"},{"lineNumber":706,"author":{"gitId":"HugeNoob"},"content":"8. GUI should work well for standard screen resolutions of 1920x1080 and higher, and for screen scales of 100% and 125%.","lastModifiedDate":"2023-09-27"},{"lineNumber":707,"author":{"gitId":"HugeNoob"},"content":"9. GUI should be usable for resolutions of 1280x720 and higher, and for screen scales of 150%.","lastModifiedDate":"2023-09-27"},{"lineNumber":708,"author":{"gitId":"HugeNoob"},"content":"10. Application should be packaged and delivered to user in a single JAR file under 100MB.","lastModifiedDate":"2023-09-27"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"jiakai-17"},"content":"* **CLI**: Command Line Interface, a way of interacting with a computer program by typing commands and receiving text responses.","lastModifiedDate":"2023-09-26"},{"lineNumber":713,"author":{"gitId":"jiakai-17"},"content":"* **Exploratory testing**: Testing a feature based on the tester\u0027s intuitive understanding of how the feature should function.","lastModifiedDate":"2023-09-26"},{"lineNumber":714,"author":{"gitId":"jiakai-17"},"content":"* **GUI**: Graphical User Interface, a way of interacting with a computer program by manipulating graphical elements on the screen.","lastModifiedDate":"2023-09-26"},{"lineNumber":715,"author":{"gitId":"jiakai-17"},"content":"* **Mainstream OS**: One of these operating systems: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-09-26"},{"lineNumber":716,"author":{"gitId":"jiakai-17"},"content":"* **MSS**: Main Success Scenario, which is the most straightforward interaction for a given use case assuming that nothing goes wrong.","lastModifiedDate":"2023-10-04"},{"lineNumber":717,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":720,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"info\" title\u003d\"Info\" body\u003d\"","lastModifiedDate":"2023-09-26"},{"lineNumber":727,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":728,"author":{"gitId":"jiakai-17"},"content":"These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-26"},{"lineNumber":729,"author":{"gitId":"jiakai-17"},"content":"testers are expected to do more \u003ci\u003eexploratory testing\u003c/i\u003e.","lastModifiedDate":"2023-09-26"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-09-26"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"m1oojv":76,"HugeNoob":54,"jiakai-17":255,"pra-navi":11,"-":355,"freshcabbage123":22}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"Do you have trouble managing contacts?","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"Don\u0027t worry, CoordiMate is here to help!","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"CoordiMate is a **desktop app for event planners**. It helps you **manage your contacts and tasks** for your events, so that you can focus on the event itself.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"CoordiMate is **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"If you can type fast, CoordiMate can help you get your contact management tasks done **faster than traditional GUI apps**.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"This user guide contains all the information you need to get started with CoordiMate.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"\u003ch2\u003e Table of Contents \u003c/h2\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"2. Download the latest `CoordiMate.jar` from [here](https://github.com/AY2324S1-CS2103T-T10-2/tp/releases).","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"3. Copy `CoordiMate.jar` to the folder you want to use as the _home folder_ for CoordiMate. This folder will be used by CoordiMate to store its data.","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"4. Open a command terminal, `cd` into the folder you put `CoordiMate.jar` in, and use the `java -jar CoordiMate.jar` command to start CoordiMate.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"   A GUI similar to the below picture should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"   * `listPerson` : Lists all persons.","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"   * `addPerson n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a new contact named `John Doe` with the specified details.","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"   * `deletePerson 3` : Deletes the 3rd contact shown in the current contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"   * `listTask` : Lists all tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"   * `addTask t/Get Flowers n/Wedding Anniversary` : Adds a task titled `Get Flowers` with note `Wedding Anniversary` to the task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"   * `markTask 1` : Marks the 1st task shown in the current task list as done.","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"   * `findTask Get` : Finds all tasks with the word `Get` in their title or note.","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"6. Refer to the [Usage](#usage) section below for details of each command.","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"1. Create, Read, Update, Delete (CRUD) Person","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"2. Find Person","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"3. CRUD Task","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"4. Find Task","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"5. Automatic saving and loading of data from save file","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"HugeNoob"},"content":"    1. CoordiMate automatically saves its data as a JSON file located at `[JAR file location]/data/CoordiMate.json`.","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"    2. There is no need to save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"    3. On startup, CoordiMate will automatically load existing data (if any) from the JSON file.","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"6. Editable file format","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"   1. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"danger\" title\u003d\"Potentially Dangerous Operation!\" body\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"HugeNoob"},"content":"If your changes to the data file makes its format invalid, CoordiMate will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"Always make a backup before you edit!","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"jiakai-17"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"jiakai-17"},"content":"## Usage","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"info\" title\u003d\"Info: About Command Formats\" body\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"jiakai-17"},"content":"\u003cul\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"jiakai-17"},"content":"  \u003cli\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"jiakai-17"},"content":"    \u003cp\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"jiakai-17"},"content":"      Words in \u003ccode\u003eUPPER_CASE\u003c/code\u003e are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"jiakai-17"},"content":"      e.g. in \u003ccode\u003eaddPerson n/NAME\u003c/code\u003e, \u003ccode\u003eNAME\u003c/code\u003e is a parameter which can be used as \u003ccode\u003eaddPerson n/John Doe\u003c/code\u003e, where \u003ccode\u003eJohn Doe\u003c/code\u003e is the value of the parameter \u003ccode\u003eNAME\u003c/code\u003e. \u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"jiakai-17"},"content":"    \u003c/p\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"jiakai-17"},"content":"  \u003c/li\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"jiakai-17"},"content":"  \u003cli\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"jiakai-17"},"content":"    \u003cp\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"jiakai-17"},"content":"      Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"jiakai-17"},"content":"      e.g \u003ccode\u003en/NAME [t/TAG]\u003c/code\u003e can be used as \u003ccode\u003en/John Doe t/friend\u003c/code\u003e or as \u003ccode\u003en/John Doe\u003c/code\u003e.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"jiakai-17"},"content":"      Note that the square brackets (\u003ccode\u003e[\u003c/code\u003e and \u003ccode\u003e]\u003c/code\u003e) are not part of the syntax.","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"jiakai-17"},"content":"    \u003c/p\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"jiakai-17"},"content":"  \u003c/li\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"jiakai-17"},"content":"  \u003cli\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"jiakai-17"},"content":"    \u003cp\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"jiakai-17"},"content":"      Items in square brackets with \u003ccode\u003e…\u003c/code\u003e after them can be used multiple times, including zero times.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"jiakai-17"},"content":"      e.g. \u003ccode\u003e[t/TAG]…​\u003c/code\u003e can be used as \u003ccode\u003e \u003c/code\u003e (i.e. 0 times), \u003ccode\u003et/friend\u003c/code\u003e, \u003ccode\u003et/friend t/family\u003c/code\u003e etc.","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"jiakai-17"},"content":"    \u003c/p\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"jiakai-17"},"content":"  \u003c/li\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"jiakai-17"},"content":"  \u003cli\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"jiakai-17"},"content":"    \u003cp\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"jiakai-17"},"content":"      Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"jiakai-17"},"content":"      e.g. if the command specifies \u003ccode\u003en/NAME p/PHONE_NUMBER\u003c/code\u003e, \u003ccode\u003ep/PHONE_NUMBER n/NAME\u003c/code\u003e is also acceptable.","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"jiakai-17"},"content":"    \u003c/p\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"jiakai-17"},"content":"  \u003c/li\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"jiakai-17"},"content":"  \u003cli\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"jiakai-17"},"content":"    \u003cp\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"jiakai-17"},"content":"      Extraneous parameters for commands that do not take in parameters (such as \u003ccode\u003ehelp\u003c/code\u003e, \u003ccode\u003elistPerson\u003c/code\u003e, \u003ccode\u003edeleteAllPerson\u003c/code\u003e, \u003ccode\u003elistTask\u003c/code\u003e, \u003ccode\u003edeleteAllTask\u003c/code\u003e and \u003ccode\u003eexit\u003c/code\u003e) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"jiakai-17"},"content":"      e.g. if the command specifies \u003ccode\u003ehelp 123\u003c/code\u003e, it will be interpreted as \u003ccode\u003ehelp\u003c/code\u003e.","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"jiakai-17"},"content":"    \u003c/p\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"jiakai-17"},"content":"  \u003c/li\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"jiakai-17"},"content":"\u003c/ul\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"warning\" title\u003d\"Warning: Using the PDF version of this document\" body\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"jiakai-17"},"content":"If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":137,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":139,"author":{"gitId":"jiakai-17"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"HugeNoob"},"content":"### 1. Viewing help: `help`","lastModifiedDate":"2023-10-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"HugeNoob"},"content":"You can access the help page at any time, ensuring that you will never be lost.","lastModifiedDate":"2023-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"HugeNoob"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"HugeNoob"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"HugeNoob"},"content":"help","lastModifiedDate":"2023-10-05"},{"lineNumber":149,"author":{"gitId":"HugeNoob"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"HugeNoob"},"content":"- `help`","lastModifiedDate":"2023-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"HugeNoob"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"HugeNoob"},"content":"- Opens a window with a link to our user guide.","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":159,"author":{"gitId":"HugeNoob"},"content":"  ![help message](images/output/help_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"HugeNoob"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"freshcabbage123"},"content":"### 2. Adding a person: `addPerson`","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":165,"author":{"gitId":"freshcabbage123"},"content":"Add new people that you meet, be it new clients, vendors or friends.","lastModifiedDate":"2023-10-05"},{"lineNumber":166,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":168,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"freshcabbage123"},"content":"addPerson n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":172,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"freshcabbage123"},"content":"{% include admonition.html type\u003d\"info\" title\u003d\"A person can have any number of tags (including 0).\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"freshcabbage123"},"content":"- `addPerson n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-10-05"},{"lineNumber":178,"author":{"gitId":"freshcabbage123"},"content":"- `addPerson n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-10-05"},{"lineNumber":179,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":180,"author":{"gitId":"freshcabbage123"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":181,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":182,"author":{"gitId":"freshcabbage123"},"content":"![addPerson success](images/addPerson_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":183,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":184,"author":{"gitId":"freshcabbage123"},"content":"Errors:","lastModifiedDate":"2023-10-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":186,"author":{"gitId":"freshcabbage123"},"content":"![addPerson error](images/error/addPerson_error.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"freshcabbage123"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":190,"author":{"gitId":"freshcabbage123"},"content":"### 3. Listing all persons: `listPerson`","lastModifiedDate":"2023-10-05"},{"lineNumber":191,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":192,"author":{"gitId":"freshcabbage123"},"content":"Presents you with a comprehensive list of contacts in your contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":193,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":194,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":195,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":196,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":197,"author":{"gitId":"freshcabbage123"},"content":"listPerson","lastModifiedDate":"2023-10-05"},{"lineNumber":198,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":202,"author":{"gitId":"freshcabbage123"},"content":"- `listPerson`","lastModifiedDate":"2023-10-05"},{"lineNumber":203,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":204,"author":{"gitId":"freshcabbage123"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":205,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":206,"author":{"gitId":"freshcabbage123"},"content":"![listPerson success](images/listPerson_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":207,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":208,"author":{"gitId":"freshcabbage123"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":209,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":210,"author":{"gitId":"m1oojv"},"content":"### 4. Editing a person: `editPerson`","lastModifiedDate":"2023-10-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":212,"author":{"gitId":"m1oojv"},"content":"Enables you to change the details or particulars of an existing contact in your contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"m1oojv"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":216,"author":{"gitId":"m1oojv"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":217,"author":{"gitId":"m1oojv"},"content":"editPerson INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"m1oojv"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":219,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":220,"author":{"gitId":"m1oojv"},"content":"- Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **_must be a positive integer_** 1, 2, 3, …","lastModifiedDate":"2023-10-05"},{"lineNumber":221,"author":{"gitId":"m1oojv"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-05"},{"lineNumber":222,"author":{"gitId":"m1oojv"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2023-10-05"},{"lineNumber":223,"author":{"gitId":"m1oojv"},"content":"- When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-10-05"},{"lineNumber":224,"author":{"gitId":"m1oojv"},"content":"- You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2023-10-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":228,"author":{"gitId":"m1oojv"},"content":"- `editPerson 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-10-05"},{"lineNumber":229,"author":{"gitId":"m1oojv"},"content":"- `editPerson 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-10-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":231,"author":{"gitId":"m1oojv"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":233,"author":{"gitId":"m1oojv"},"content":"![editPerson success](images/editPerson_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":235,"author":{"gitId":"m1oojv"},"content":"Errors:","lastModifiedDate":"2023-10-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":237,"author":{"gitId":"m1oojv"},"content":"- Incorrect parameters or command format","lastModifiedDate":"2023-10-05"},{"lineNumber":238,"author":{"gitId":"m1oojv"},"content":"![editPerson error](images/error/editPerson_error.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":240,"author":{"gitId":"m1oojv"},"content":"- Incorrect or missing index","lastModifiedDate":"2023-10-05"},{"lineNumber":241,"author":{"gitId":"m1oojv"},"content":"![editPerson wrongIndex](images/error/editPerson_wrongIndex.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":242,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":243,"author":{"gitId":"m1oojv"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":245,"author":{"gitId":"jiakai-17"},"content":"### 5. Finding a specific person: `findPerson`","lastModifiedDate":"2023-10-05"},{"lineNumber":246,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":247,"author":{"gitId":"jiakai-17"},"content":"Type in a few keywords linked to a person\u0027s name, and the matching persons\u0027 details will be displayed on screen.","lastModifiedDate":"2023-10-05"},{"lineNumber":248,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":249,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"note\" title\u003d\"Note\" body\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":250,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":251,"author":{"gitId":"jiakai-17"},"content":"This command hides all persons that do not match the search criteria. \u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":252,"author":{"gitId":"jiakai-17"},"content":"To reset the Persons view, simply run the \u003ccode\u003elistPerson\u003c/code\u003e command to list all persons.","lastModifiedDate":"2023-10-05"},{"lineNumber":253,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":254,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":255,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":256,"author":{"gitId":"jiakai-17"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":257,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":258,"author":{"gitId":"jiakai-17"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":259,"author":{"gitId":"jiakai-17"},"content":"findPerson KEYWORD [MORE_KEYWORDS]…","lastModifiedDate":"2023-10-05"},{"lineNumber":260,"author":{"gitId":"jiakai-17"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":261,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":262,"author":{"gitId":"jiakai-17"},"content":"- At least one keyword is required to search.","lastModifiedDate":"2023-10-05"},{"lineNumber":263,"author":{"gitId":"jiakai-17"},"content":"- The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2023-10-05"},{"lineNumber":264,"author":{"gitId":"jiakai-17"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2023-10-05"},{"lineNumber":265,"author":{"gitId":"jiakai-17"},"content":"- Only the name is searched.","lastModifiedDate":"2023-10-05"},{"lineNumber":266,"author":{"gitId":"jiakai-17"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2023-10-05"},{"lineNumber":267,"author":{"gitId":"jiakai-17"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-10-05"},{"lineNumber":268,"author":{"gitId":"jiakai-17"},"content":"  - e.g. `Hans Bo` will match `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2023-10-05"},{"lineNumber":269,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":270,"author":{"gitId":"jiakai-17"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":271,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":272,"author":{"gitId":"jiakai-17"},"content":"- `findPerson John` returns `john` and `John Doe`","lastModifiedDate":"2023-10-05"},{"lineNumber":273,"author":{"gitId":"jiakai-17"},"content":"- `findPerson alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2023-10-05"},{"lineNumber":274,"author":{"gitId":"jiakai-17"},"content":"- Assuming `Jane` is not in your contacts list, `findPerson Jane` returns `0 Persons Listed`.","lastModifiedDate":"2023-10-05"},{"lineNumber":275,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":276,"author":{"gitId":"jiakai-17"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":277,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":278,"author":{"gitId":"jiakai-17"},"content":"- There are search outcomes to be displayed.","lastModifiedDate":"2023-10-05"},{"lineNumber":279,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":280,"author":{"gitId":"jiakai-17"},"content":"![findPerson success with a list](images/output/findPerson_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":281,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":282,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":283,"author":{"gitId":"jiakai-17"},"content":"- There are no search outcomes to be displayed.","lastModifiedDate":"2023-10-05"},{"lineNumber":284,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":285,"author":{"gitId":"jiakai-17"},"content":"![findPerson success with zero results](images/output/findPerson_noResults.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":286,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":287,"author":{"gitId":"jiakai-17"},"content":"Errors:","lastModifiedDate":"2023-10-05"},{"lineNumber":288,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":289,"author":{"gitId":"jiakai-17"},"content":"- Incorrect number of parameters.","lastModifiedDate":"2023-10-05"},{"lineNumber":290,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":291,"author":{"gitId":"jiakai-17"},"content":"![findPerson error](images/error/findPerson_error.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":292,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":293,"author":{"gitId":"jiakai-17"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":294,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":295,"author":{"gitId":"pra-navi"},"content":"### 6. Deleting a person entry: `deletePerson`","lastModifiedDate":"2023-10-05"},{"lineNumber":296,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":297,"author":{"gitId":"pra-navi"},"content":"{% include admonition.html type\u003d\"danger\" title\u003d\"Potentially Dangerous Operation!\" body\u003d\"This action is irreversible.\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":298,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":299,"author":{"gitId":"pra-navi"},"content":"Erase an outdated person from your contact list with ease.","lastModifiedDate":"2023-10-05"},{"lineNumber":300,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":301,"author":{"gitId":"pra-navi"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":302,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":303,"author":{"gitId":"pra-navi"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":304,"author":{"gitId":"pra-navi"},"content":"deletePerson INDEX","lastModifiedDate":"2023-10-05"},{"lineNumber":305,"author":{"gitId":"pra-navi"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":306,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":307,"author":{"gitId":"pra-navi"},"content":"- Deletes the person at the specified `INDEX`.","lastModifiedDate":"2023-10-05"},{"lineNumber":308,"author":{"gitId":"pra-navi"},"content":"- The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-05"},{"lineNumber":309,"author":{"gitId":"pra-navi"},"content":"- The index **_must be a positive integer_** 1, 2, 3, …","lastModifiedDate":"2023-10-05"},{"lineNumber":310,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":311,"author":{"gitId":"pra-navi"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":312,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":313,"author":{"gitId":"pra-navi"},"content":"- `listPerson` followed by `deletePerson 2` deletes the 2nd person in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":314,"author":{"gitId":"pra-navi"},"content":"- `findPerson Betsy` followed by `deletePerson 1` deletes the 1st person in the results of the `findPerson` command.","lastModifiedDate":"2023-10-05"},{"lineNumber":315,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":316,"author":{"gitId":"pra-navi"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":317,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":318,"author":{"gitId":"pra-navi"},"content":"![deletePerson success](images/output/deletePerson_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"pra-navi"},"content":"Errors:","lastModifiedDate":"2023-10-05"},{"lineNumber":321,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":322,"author":{"gitId":"pra-navi"},"content":"![deletePerson error](images/error/deletePerson_error.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":323,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":324,"author":{"gitId":"pra-navi"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":325,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":326,"author":{"gitId":"pra-navi"},"content":"### 7. Clearing all person entries: `deleteAllPerson`","lastModifiedDate":"2023-10-05"},{"lineNumber":327,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":328,"author":{"gitId":"HugeNoob"},"content":"{% include admonition.html type\u003d\"danger\" title\u003d\"Potentially Dangerous Operation!\" body\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":329,"author":{"gitId":"HugeNoob"},"content":"CoordiMate will discard \u003cb\u003eall\u003c/b\u003e Person data and start with an empty data file at the next run.\u003cbr\u003e\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":330,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":331,"author":{"gitId":"HugeNoob"},"content":"Clears all contacts in your contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":332,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":333,"author":{"gitId":"HugeNoob"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":334,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":335,"author":{"gitId":"HugeNoob"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"HugeNoob"},"content":"deleteAllPerson","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"HugeNoob"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"HugeNoob"},"content":"- `deleteAllPerson`","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"HugeNoob"},"content":"  - Deletes all persons in your contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":343,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"HugeNoob"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"HugeNoob"},"content":"- All persons in the contact list are deleted.","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"HugeNoob"},"content":"  ![deleteAllPerson success](images/deleteAllPerson_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"freshcabbage123"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"pra-navi"},"content":"### 8. Adding a task: `addTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"pra-navi"},"content":"Adds a task to your task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":355,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"pra-navi"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"pra-navi"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"pra-navi"},"content":"addTask t/TITLE n/NOTE","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"pra-navi"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"pra-navi"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":364,"author":{"gitId":"pra-navi"},"content":"- `addTask t/Get Flowers n/Wedding Anniversary`","lastModifiedDate":"2023-10-05"},{"lineNumber":365,"author":{"gitId":"pra-navi"},"content":"- `addTask t/Call Caterers n/Reunion Dinner`","lastModifiedDate":"2023-10-05"},{"lineNumber":366,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":367,"author":{"gitId":"pra-navi"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":368,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":369,"author":{"gitId":"pra-navi"},"content":"![addTask_success](images/output/addTask_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":370,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":371,"author":{"gitId":"pra-navi"},"content":"Errors:","lastModifiedDate":"2023-10-05"},{"lineNumber":372,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":373,"author":{"gitId":"pra-navi"},"content":"![addTask_error](images/error/addTask_error.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":375,"author":{"gitId":"pra-navi"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":377,"author":{"gitId":"freshcabbage123"},"content":"### 9. Listing all tasks: `listTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":379,"author":{"gitId":"freshcabbage123"},"content":"Provides you with a complete list of tasks in your task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":380,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":381,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":384,"author":{"gitId":"freshcabbage123"},"content":"listTask","lastModifiedDate":"2023-10-05"},{"lineNumber":385,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":386,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"freshcabbage123"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":389,"author":{"gitId":"freshcabbage123"},"content":"- `listTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"freshcabbage123"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"freshcabbage123"},"content":"![listTask_success](images/output/listTask_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"HugeNoob"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"HugeNoob"},"content":"### 10. Editing a task: `editTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"HugeNoob"},"content":"You can edit the details of a task in your task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"HugeNoob"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":403,"author":{"gitId":"HugeNoob"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":404,"author":{"gitId":"HugeNoob"},"content":"editTask INDEX [t/TITLE] [n/NOTE]","lastModifiedDate":"2023-10-05"},{"lineNumber":405,"author":{"gitId":"HugeNoob"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":407,"author":{"gitId":"HugeNoob"},"content":"- Edits the task at the specified `INDEX`.","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"HugeNoob"},"content":"- The index refers to the index number shown in the task list currently displayed.","lastModifiedDate":"2023-10-05"},{"lineNumber":409,"author":{"gitId":"HugeNoob"},"content":"- Specify a new title with the `t/` prefix. This field is **optional**.","lastModifiedDate":"2023-10-05"},{"lineNumber":410,"author":{"gitId":"HugeNoob"},"content":"- Specify a new note with the `n/` prefix. This field is **optional**.","lastModifiedDate":"2023-10-05"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"HugeNoob"},"content":"- `editTask 1 t/Call Caterer`","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"HugeNoob"},"content":"  - Edits the title of the 1st task to be `Call Caterer`.","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"HugeNoob"},"content":"- `editTask 2 t/Book room n/By Friday`","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"HugeNoob"},"content":"  - Edits the title of the 2nd task to be `Book room` and the note to be `By Friday`.","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"HugeNoob"},"content":"- `editTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":419,"author":{"gitId":"HugeNoob"},"content":"  - Negative example as the index is not specified.","lastModifiedDate":"2023-10-05"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"HugeNoob"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"HugeNoob"},"content":"- Title of task 1 is edited to `Call Caterer`.","lastModifiedDate":"2023-10-05"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"HugeNoob"},"content":"  ![editTask_success](images/output/editTask_success1.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"HugeNoob"},"content":"- Title of task 2 is edited to `Book room` and note is edited to `By Friday`.","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"HugeNoob"},"content":"  ![editTask_success](images/output/editTask_success2.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"HugeNoob"},"content":"Errors:","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"HugeNoob"},"content":"- Index is not specified.","lastModifiedDate":"2023-10-05"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"HugeNoob"},"content":"  ![editTask_error](images/error/editTask_error.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"HugeNoob"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"jiakai-17"},"content":"### 11. Finding a specific task: `findTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":440,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":441,"author":{"gitId":"jiakai-17"},"content":"You can locate tasks containing your specified keywords in their title and/or note.","lastModifiedDate":"2023-10-05"},{"lineNumber":442,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":443,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"note\" title\u003d\"Note\" body\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":444,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":445,"author":{"gitId":"jiakai-17"},"content":"This command hides all Tasks that do not match the search criteria. \u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":446,"author":{"gitId":"jiakai-17"},"content":"To reset the Tasks view, simply run the \u003ccode\u003elistTasks\u003c/code\u003e command to list all Tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":447,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":448,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":449,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":450,"author":{"gitId":"jiakai-17"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":451,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":452,"author":{"gitId":"jiakai-17"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":453,"author":{"gitId":"jiakai-17"},"content":"findTask KEYWORD [MORE_KEYWORDS]…","lastModifiedDate":"2023-10-05"},{"lineNumber":454,"author":{"gitId":"jiakai-17"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":455,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":456,"author":{"gitId":"jiakai-17"},"content":"- At least one keyword is required to search.","lastModifiedDate":"2023-10-05"},{"lineNumber":457,"author":{"gitId":"jiakai-17"},"content":"- The search is case-insensitive. e.g `call` will match `Call`.","lastModifiedDate":"2023-10-05"},{"lineNumber":458,"author":{"gitId":"jiakai-17"},"content":"- The order of the keywords does not matter. e.g. `Call Caterer` will match `Caterer Call`.","lastModifiedDate":"2023-10-05"},{"lineNumber":459,"author":{"gitId":"jiakai-17"},"content":"- Both the title and note of a task is searched.","lastModifiedDate":"2023-10-05"},{"lineNumber":460,"author":{"gitId":"jiakai-17"},"content":"- Only full words will be matched e.g. `Call` will not match `Calls`.","lastModifiedDate":"2023-10-05"},{"lineNumber":461,"author":{"gitId":"jiakai-17"},"content":"- Tasks matching at least one keyword in either the title or the note will be returned (i.e. `OR` search).","lastModifiedDate":"2023-10-05"},{"lineNumber":462,"author":{"gitId":"jiakai-17"},"content":"  - e.g. `Call Wedding` will match `Call Hotel`, `Wedding Anniversary`.","lastModifiedDate":"2023-10-05"},{"lineNumber":463,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":464,"author":{"gitId":"jiakai-17"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":465,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":466,"author":{"gitId":"jiakai-17"},"content":"- `findTask Call Wedding` ","lastModifiedDate":"2023-10-05"},{"lineNumber":467,"author":{"gitId":"jiakai-17"},"content":"  - Finds tasks with titles or notes containing either `Call` or `Wedding`.","lastModifiedDate":"2023-10-05"},{"lineNumber":468,"author":{"gitId":"jiakai-17"},"content":"- `findTask Photography`","lastModifiedDate":"2023-10-05"},{"lineNumber":469,"author":{"gitId":"jiakai-17"},"content":"  - Finds tasks with titles or notes containing `Photography`.","lastModifiedDate":"2023-10-05"},{"lineNumber":470,"author":{"gitId":"jiakai-17"},"content":"- `findTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":471,"author":{"gitId":"jiakai-17"},"content":"  - Negative example as no keywords are specified.","lastModifiedDate":"2023-10-05"},{"lineNumber":472,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":473,"author":{"gitId":"jiakai-17"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":474,"author":{"gitId":"jiakai-17"},"content":"- Both tasks are displayed as Task 1 has the word `Call` in its title and Task 2 has the word `Wedding` in its note.","lastModifiedDate":"2023-10-05"},{"lineNumber":475,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":476,"author":{"gitId":"jiakai-17"},"content":"  ![findTask_success](images/output/findTask_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":477,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":478,"author":{"gitId":"jiakai-17"},"content":"- There are no tasks to be displayed, as no Task has the word `Photography` in its title or note.","lastModifiedDate":"2023-10-05"},{"lineNumber":479,"author":{"gitId":"jiakai-17"},"content":"  ","lastModifiedDate":"2023-10-05"},{"lineNumber":480,"author":{"gitId":"jiakai-17"},"content":"  ![findTask_noResults](images/output/findTask_noResults.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":481,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":482,"author":{"gitId":"jiakai-17"},"content":"Errors:","lastModifiedDate":"2023-10-05"},{"lineNumber":483,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":484,"author":{"gitId":"jiakai-17"},"content":"- No keywords are specified.","lastModifiedDate":"2023-10-05"},{"lineNumber":485,"author":{"gitId":"jiakai-17"},"content":"  ","lastModifiedDate":"2023-10-05"},{"lineNumber":486,"author":{"gitId":"jiakai-17"},"content":"  ![findTask_error](images/error/findTask_error.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":487,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":488,"author":{"gitId":"jiakai-17"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":489,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":490,"author":{"gitId":"HugeNoob"},"content":"### 12. Deleting a task entry: `deleteTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"HugeNoob"},"content":"{% include admonition.html type\u003d\"danger\" title\u003d\"Potentially Dangerous Operation!\" body\u003d\"This action is irreversible.\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"HugeNoob"},"content":"You can remove a task from your task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"HugeNoob"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"HugeNoob"},"content":"`deleteTask INDEX`","lastModifiedDate":"2023-10-05"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"HugeNoob"},"content":"- Deletes the task at the specified `INDEX`.","lastModifiedDate":"2023-10-05"},{"lineNumber":501,"author":{"gitId":"HugeNoob"},"content":"- The index refers to the index number shown in the task list currently displayed.","lastModifiedDate":"2023-10-05"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"HugeNoob"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"HugeNoob"},"content":"- `deleteTask 2`","lastModifiedDate":"2023-10-05"},{"lineNumber":506,"author":{"gitId":"HugeNoob"},"content":"  - Deletes the 2nd task in the task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":507,"author":{"gitId":"HugeNoob"},"content":"- `findTask Call` followed by `deleteTask 1`","lastModifiedDate":"2023-10-05"},{"lineNumber":508,"author":{"gitId":"HugeNoob"},"content":"  - Deletes the 1st task in the results of the `findTask` command.","lastModifiedDate":"2023-10-05"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"HugeNoob"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":512,"author":{"gitId":"HugeNoob"},"content":"- Deletes task 2.","lastModifiedDate":"2023-10-05"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":514,"author":{"gitId":"HugeNoob"},"content":"  ![deleteTask_success](images/output/deleteTask_success1.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":515,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":516,"author":{"gitId":"HugeNoob"},"content":"Errors:","lastModifiedDate":"2023-10-05"},{"lineNumber":517,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":518,"author":{"gitId":"HugeNoob"},"content":"- Index specified is not available in the task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":519,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":520,"author":{"gitId":"HugeNoob"},"content":"  ![deleteTask_error](images/error/deleteTask_error1.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":522,"author":{"gitId":"m1oojv"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":523,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":524,"author":{"gitId":"m1oojv"},"content":"### 13. Clearing all task entries: `deleteAllTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":525,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":526,"author":{"gitId":"m1oojv"},"content":"{% include admonition.html type\u003d\"danger\" title\u003d\"Potentially Dangerous Operation!\" body\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":527,"author":{"gitId":"HugeNoob"},"content":"CoordiMate will discard \u003cb\u003eall\u003c/b\u003e Task data and start with an empty data file at the next run.\u003cbr\u003e\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":528,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":529,"author":{"gitId":"m1oojv"},"content":"Allows you to remove all entries from your task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":530,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":531,"author":{"gitId":"m1oojv"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":532,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":533,"author":{"gitId":"m1oojv"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":534,"author":{"gitId":"m1oojv"},"content":"deleteAllTask","lastModifiedDate":"2023-10-05"},{"lineNumber":535,"author":{"gitId":"m1oojv"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":536,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":537,"author":{"gitId":"m1oojv"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":538,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":539,"author":{"gitId":"m1oojv"},"content":"- `deleteAllTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":540,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":541,"author":{"gitId":"m1oojv"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":542,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":543,"author":{"gitId":"m1oojv"},"content":"![deleteAllTask success](images/output/deleteAllTask_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":544,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":545,"author":{"gitId":"m1oojv"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":546,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":547,"author":{"gitId":"m1oojv"},"content":"### 14. Marking a task as done: `markTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":548,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":549,"author":{"gitId":"m1oojv"},"content":"Allows you to indicate that a specific task as **completed**.","lastModifiedDate":"2023-10-05"},{"lineNumber":550,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":551,"author":{"gitId":"m1oojv"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":552,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":553,"author":{"gitId":"m1oojv"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":554,"author":{"gitId":"m1oojv"},"content":"markTask INDEX","lastModifiedDate":"2023-10-05"},{"lineNumber":555,"author":{"gitId":"m1oojv"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":556,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":557,"author":{"gitId":"m1oojv"},"content":"- Marks the task at the specified `INDEX`.","lastModifiedDate":"2023-10-05"},{"lineNumber":558,"author":{"gitId":"m1oojv"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":559,"author":{"gitId":"m1oojv"},"content":"- The index **_must be a positive integer_** 1, 2, 3, …","lastModifiedDate":"2023-10-05"},{"lineNumber":560,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":561,"author":{"gitId":"m1oojv"},"content":"{% include admonition.html type\u003d\"info\" title\u003d\"Tasks are marked as not done by default.\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":562,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":563,"author":{"gitId":"m1oojv"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":564,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":565,"author":{"gitId":"m1oojv"},"content":"- `listTask` followed by `markTask 2` marks the 2nd task in the task list as **done**.","lastModifiedDate":"2023-10-05"},{"lineNumber":566,"author":{"gitId":"m1oojv"},"content":"- `findTask Call` followed by `markTask 1` marks the 1st task in the results of the `findTask` command as **done**.","lastModifiedDate":"2023-10-05"},{"lineNumber":567,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":568,"author":{"gitId":"m1oojv"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":569,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":570,"author":{"gitId":"m1oojv"},"content":"![markTask_success](images/output/markTask_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":571,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":572,"author":{"gitId":"m1oojv"},"content":"Errors:","lastModifiedDate":"2023-10-05"},{"lineNumber":573,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":574,"author":{"gitId":"m1oojv"},"content":"![markTask_error](images/error/markTask_error.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":575,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":576,"author":{"gitId":"m1oojv"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":577,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":578,"author":{"gitId":"m1oojv"},"content":"### 15. Marking a task as not done: `unmarkTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":579,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":580,"author":{"gitId":"m1oojv"},"content":"Allows you to indicate that a specific task as **not completed**.","lastModifiedDate":"2023-10-05"},{"lineNumber":581,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":582,"author":{"gitId":"m1oojv"},"content":"Format:","lastModifiedDate":"2023-10-05"},{"lineNumber":583,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":584,"author":{"gitId":"m1oojv"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":585,"author":{"gitId":"m1oojv"},"content":"unmarkTask INDEX","lastModifiedDate":"2023-10-05"},{"lineNumber":586,"author":{"gitId":"m1oojv"},"content":"```","lastModifiedDate":"2023-10-05"},{"lineNumber":587,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":588,"author":{"gitId":"m1oojv"},"content":"- Marks the task at the specified `INDEX`.","lastModifiedDate":"2023-10-05"},{"lineNumber":589,"author":{"gitId":"m1oojv"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-10-05"},{"lineNumber":590,"author":{"gitId":"m1oojv"},"content":"- The index **_must be a positive integer_** 1, 2, 3, …","lastModifiedDate":"2023-10-05"},{"lineNumber":591,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":592,"author":{"gitId":"m1oojv"},"content":"{% include admonition.html type\u003d\"info\" title\u003d\"Tasks are marked as not done by default.\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":593,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":594,"author":{"gitId":"m1oojv"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":595,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":596,"author":{"gitId":"m1oojv"},"content":"- `listTask` followed by `unmarkTask 2` marks the 2nd task in the task list as **not done**.","lastModifiedDate":"2023-10-05"},{"lineNumber":597,"author":{"gitId":"m1oojv"},"content":"- `findTask Call` followed by `unmarkTask 1` marks the 1st task in the results of the `findTask` command as **not done**.","lastModifiedDate":"2023-10-05"},{"lineNumber":598,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":599,"author":{"gitId":"m1oojv"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":600,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":601,"author":{"gitId":"m1oojv"},"content":"![unmarkTask_success](images/output/unmarkTask_success.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":602,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":603,"author":{"gitId":"m1oojv"},"content":"Errors:","lastModifiedDate":"2023-10-05"},{"lineNumber":604,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":605,"author":{"gitId":"m1oojv"},"content":"![unmarkTask_error](images/error/unmarkTask_error.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"HugeNoob"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"pra-navi"},"content":"### 16. Exiting the program : `exit`","lastModifiedDate":"2023-10-05"},{"lineNumber":610,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":611,"author":{"gitId":"pra-navi"},"content":"Once you are done with your work in CoordiMate, you can exit the program by typing a command.","lastModifiedDate":"2023-10-05"},{"lineNumber":612,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":613,"author":{"gitId":"pra-navi"},"content":"Format: `exit`","lastModifiedDate":"2023-10-05"},{"lineNumber":614,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":615,"author":{"gitId":"pra-navi"},"content":"Output:","lastModifiedDate":"2023-10-05"},{"lineNumber":616,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":617,"author":{"gitId":"pra-navi"},"content":"- CoordiMate exits and the program window closes.","lastModifiedDate":"2023-10-05"},{"lineNumber":618,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":619,"author":{"gitId":"pra-navi"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":621,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"question\" title\u003d\"How do I transfer my data to another computer?\" body\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"jiakai-17"},"content":"Install the app in the other computer and overwrite the empty data file with your previous save file.","lastModifiedDate":"2023-10-05"},{"lineNumber":626,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":627,"author":{"gitId":"jiakai-17"},"content":"\" %}","lastModifiedDate":"2023-10-05"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":629,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":630,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":631,"author":{"gitId":"jiakai-17"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":635,"author":{"gitId":"jiakai-17"},"content":"{% include admonition.html type\u003d\"bug\" title\u003d\"Bug: The GUI will open off-screen if you switch between multiple screens.\" body\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":637,"author":{"gitId":"jiakai-17"},"content":"Delete the \u003ccode\u003epreferences.json\u003c/code\u003e file created by CoordiMate before running CoordiMate again.","lastModifiedDate":"2023-10-05"},{"lineNumber":638,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":639,"author":{"gitId":"jiakai-17"},"content":"\"%}","lastModifiedDate":"2023-10-05"},{"lineNumber":640,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":641,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":643,"author":{"gitId":"jiakai-17"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":645,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"jiakai-17"},"content":" Action | Format | Example","lastModifiedDate":"2023-10-05"},{"lineNumber":648,"author":{"gitId":"jiakai-17"},"content":"--------|--------|----------","lastModifiedDate":"2023-10-05"},{"lineNumber":649,"author":{"gitId":"jiakai-17"},"content":"[**View Help**](#1-viewing-help-help) | `help` | `help`","lastModifiedDate":"2023-10-05"},{"lineNumber":650,"author":{"gitId":"jiakai-17"},"content":"[**Add Person**](#2-adding-a-person-addperson)|`addPerson n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…`|`addPerson n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-10-05"},{"lineNumber":651,"author":{"gitId":"jiakai-17"},"content":"[**List All Person**](#3-listing-all-persons-listperson) | `listPerson` | `listPerson`","lastModifiedDate":"2023-10-05"},{"lineNumber":652,"author":{"gitId":"jiakai-17"},"content":"[**Edit Person**](#4-editing-a-person-editperson) | `editPerson INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` | `editPerson 1 p/91234567 e/johndoe@example.com`","lastModifiedDate":"2023-10-05"},{"lineNumber":653,"author":{"gitId":"jiakai-17"},"content":"[**Find Person**](#5-finding-a-specific-person-findperson) | `findPerson KEYWORD [MORE_KEYWORDS]…` | `findPerson John`","lastModifiedDate":"2023-10-05"},{"lineNumber":654,"author":{"gitId":"jiakai-17"},"content":"[**Delete Person**](#6-deleting-a-person-entry-deleteperson) | `deletePerson INDEX` | `deletePerson 1`","lastModifiedDate":"2023-10-05"},{"lineNumber":655,"author":{"gitId":"jiakai-17"},"content":"[**Delete All Person**](#7-clearing-all-person-entries-deleteallperson) | `deleteAllPerson` | `deleteAllPerson`","lastModifiedDate":"2023-10-05"},{"lineNumber":656,"author":{"gitId":"jiakai-17"},"content":"[**Add Task**](#8-adding-a-task-addtask) | `addTask t/TITLE n/NOTE` | `addTask t/Get Flowers n/Wedding Anniversary`","lastModifiedDate":"2023-10-05"},{"lineNumber":657,"author":{"gitId":"jiakai-17"},"content":"[**List All Task**](#9-listing-all-tasks-listtask) | `listTask` | `listTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":658,"author":{"gitId":"jiakai-17"},"content":"[**Edit Task**](#10-editing-a-task-edittask) | `editTask INDEX [t/TITLE] [n/NOTE]` | `editTask 1 t/Call Caterer`","lastModifiedDate":"2023-10-05"},{"lineNumber":659,"author":{"gitId":"jiakai-17"},"content":"[**Find Task**](#11-finding-a-specific-task-findtask) | `findTask KEYWORD [MORE_KEYWORDS]…` | `findTask Call Wedding`","lastModifiedDate":"2023-10-05"},{"lineNumber":660,"author":{"gitId":"jiakai-17"},"content":"[**Delete Task**](#12-deleting-a-task-entry-deletetask) | `deleteTask INDEX` | `deleteTask 1`","lastModifiedDate":"2023-10-05"},{"lineNumber":661,"author":{"gitId":"jiakai-17"},"content":"[**Delete All Task**](#13-clearing-all-task-entries-deletealltask) | `deleteAllTask` | `deleteAllTask`","lastModifiedDate":"2023-10-05"},{"lineNumber":662,"author":{"gitId":"jiakai-17"},"content":"[**Mark Task**](#14-marking-a-task-as-done-marktask) | `markTask INDEX` | `markTask 1`","lastModifiedDate":"2023-10-05"},{"lineNumber":663,"author":{"gitId":"jiakai-17"},"content":"[**Unmark Task**](#15-marking-a-task-as-not-done-unmarktask) | `unmarkTask INDEX` | `unmarkTask 1`","lastModifiedDate":"2023-10-05"},{"lineNumber":664,"author":{"gitId":"jiakai-17"},"content":"[**Exit**](#16-exiting-the-program--exit) | `exit` | `exit`","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"HugeNoob":83,"m1oojv":107,"jiakai-17":220,"pra-navi":67,"-":134,"freshcabbage123":53}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jiakai-17"},"content":"    content: \"CoordiMate\";","lastModifiedDate":"2023-09-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jiakai-17":1,"-":294}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Only the main Sass file needs front matter (the dashes are enough)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"// Adapted from: https://stackoverflow.com/a/39156436","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"$baseurl: \"{% if site.baseurl !\u003d \u0027/\u0027 %}{{ site.baseurl }}{% endif %}\";","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \"minima/skins/{{ site.minima.skin | default: \u0027classic\u0027 }}\",","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \"minima/initialize\",","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \"admonition\";","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":".icon {","lastModifiedDate":"2020-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    height: 21px;","lastModifiedDate":"2020-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    width: 21px","lastModifiedDate":"2020-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-01"}],"authorContributionMap":{"jiakai-17":3,"-":13}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"title: CoordiMate","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T10-2/tp/actions)","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T10-2/tp/graph/badge.svg)](https://app.codecov.io/gh/AY2324S1-CS2103T-T10-2/tp)","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"**CoordiMate** is a **desktop app for event planners**. It helps you **manage your contacts and tasks** for your events, so that you can focus on the event itself.","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"While it has a Graphical User Interface (GUI), most of the user interactions happen using a **Command Line Interface (CLI)**, allowing you to get your contact management tasks done **faster than traditional GUI apps**.","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"### Getting Started","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"* If you are interested in using CoordiMate, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"* If you are interested about developing CoordiMate, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"### Acknowledgements","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"* This site uses [Jekyll Admonitions styles created by Adam Douglas](https://www.adamsdesk.com/posts/admonitions-jekyll/) with additional styles from [Tailwind CSS](https://tailwindcss.com) for the [User Guide](UserGuide.html) and the [Developer Guide](DeveloperGuide.html).","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"jiakai-17":9,"-":14}},{"path":"docs/team/freshcabbage123.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"layout: page","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"title: Alan Lim\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"### Project: CoordiMate","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"CoordiMate is a **desktop app for event planners**. It helps you **manage your contacts and tasks** for your events, so that you can focus on the event itself.","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"CoordiMate is **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"If you can type fast, CoordiMate can help you get your contact management tasks done **faster than traditional GUI apps**.","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"  * What it does: To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"  * Justification: To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"  * Highlights: To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"  * Credits: To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"* **Code contributed**: To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"* **Project management**:","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"  * To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"* **Enhancement to existing features**:","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"  * To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"  * User Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"    * To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"    * To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"* **Community**:","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"  * PRs reviewed by me can be found [here](https://github.com/AY2324S1-CS2103T-T10-2/tp/pulls?q\u003dis%3Apr+reviewed-by%3Afreshcabbage123).","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"  * Forum discussions that I have participated in can be found [here](https://github.com/nus-cs2103-AY2324S1/forum/issues?q\u003dis%3Aissue+commenter%3Afreshcabbage123).","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"  * Reported bugs and suggestions for other teams in class: To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"  * Some parts of the history feature I added was adopted by several other class mates: To be added soon.","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"* **Tools**:","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"  * To be added soon.","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"freshcabbage123":43}},{"path":"docs/team/hugenoob.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"title: Xing Lingxi\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"### Project: CoordiMate","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"CoordiMate is a **desktop app for event planners**. It helps you **manage your contacts and tasks** for your events, so that you can focus on the event itself.","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"CoordiMate is **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"If you can type fast, CoordiMate can help you get your contact management tasks done **faster than traditional GUI apps**.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"  * What it does: To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"  * Justification: To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"  * Highlights: To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"  * Credits: To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"* **Code contributed**: To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"* **Project management**:","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"  * Introduced a [PR template](https://github.com/AY2324S1-CS2103T-T10-2/tp/pull/17) for the team to follow.","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"* **Enhancement to existing features**: ","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"  * To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"  * User Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"    * To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"    * To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"* **Community**:","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"  * PRs reviewed by me can be found [here](https://github.com/AY2324S1-CS2103T-T10-2/tp/pulls?q\u003dis%3Apr+reviewed-by%3AHugeNoob+).","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"  * Forum discussions that I have participated in can be found [here](https://github.com/nus-cs2103-AY2324S1/forum/issues?q\u003dis%3Aissue+commenter%3AHugeNoob+).","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"  * Reported bugs and suggestions for other teams in class: To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"HugeNoob"},"content":"  * Some parts of the history feature I added was adopted by several other class mates: To be added soon.","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"HugeNoob"},"content":"* **Tools**:","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"HugeNoob"},"content":"  * To be added soon.","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"HugeNoob":43}},{"path":"docs/team/jiakai-17.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"title: Li Jiakai\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"### Project: CoordiMate","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"CoordiMate is a **desktop app for event planners**. It helps you **manage your contacts and tasks** for your events, so that you can focus on the event itself.","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"CoordiMate is **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"If you can type fast, CoordiMate can help you get your contact management tasks done **faster than traditional GUI apps**.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"* **New Feature**: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"  * What it does: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"  * Justification: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"  * Highlights: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"  * Credits: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djiakai-17\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"* **Project management**:","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"  * To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"  * To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"  * User Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"    * Added Admonitions to User Guide [\\#2](https://github.com/AY2324S1-CS2103T-T10-2/tp/pull/2)","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"    * To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"* **Community**:","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"  * PRs reviewed (with non-trivial review comments): To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"  * Contributed to forum discussions: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"  * Reported bugs and suggestions for other teams in the class: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"  * Some parts of the history feature I added was adopted by several other class mates: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"* **Tools**:","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"  * Integrated Cloudflare Pages to test website deployments","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"  * Implemented automatic releases using GitHub Actions [\\#5](https://github.com/AY2324S1-CS2103T-T10-2/tp/pull/5)","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"jiakai-17":46}},{"path":"docs/team/m1oojv.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"title: Megan Loo\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"### Project: CoordiMate","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"CoordiMate is a **desktop app for event planners**. It helps you **manage your contacts and tasks** for your events, so that you can focus on the event itself.","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"CoordiMate is **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"If you can type fast, CoordiMate can help you get your contact management tasks done **faster than traditional GUI apps**.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"* **New Feature**: [Coming soon!]","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"  * What it does: ..","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"  * Justification: ..","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"  * Highlights: ..","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"  * Credits: ..","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dm1oojv\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"* **Project management**: [Coming soon!]","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"* **Enhancements to existing features**: [Coming soon!]","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"  * User Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"    * Added self drawn mockups of GUI for User Guide [\\#0a25954](https://github.com/AY2324S1-CS2103T-T10-2/tp/pull/20/commits/0a25954d0d7a5b4d0a5b5da7ddf313bd0861c78b)","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"  * Developer Guide: [Coming soon!]","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"* **Community**:","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"  * PRs reviewed (with non-trivial review comments): [Coming soon!]","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"  * Contributed to forum discussions: [Coming soon!]","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"  * Reported bugs and suggestions for other teams in the class: [Coming soon!]","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"  * Some parts of the history feature I added was adopted by several other class mates: [Coming soon!]","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"* **Tools**: [Coming soon!]","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"m1oojv":39}},{"path":"docs/team/pra-navi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pra-navi"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"pra-navi"},"content":"layout: page","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"pra-navi"},"content":"title: Pranavi\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"pra-navi"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"pra-navi"},"content":"### Project: CoordiMate","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"pra-navi"},"content":"CoordiMate is a **desktop app for event planners**. It helps you **manage your contacts and tasks** for your events, so that you can focus on the event itself.","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"pra-navi"},"content":"CoordiMate is **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"pra-navi"},"content":"If you can type fast, CoordiMate can help you get your contact management tasks done **faster than traditional GUI apps**.","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"pra-navi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"pra-navi"},"content":"* **New Feature**: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"pra-navi"},"content":"    * What it does: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"pra-navi"},"content":"    * Justification: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"pra-navi"},"content":"    * Highlights: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"pra-navi"},"content":"    * Credits: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"pra-navi"},"content":"* **Code contributed**: [Coming soon!]","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"pra-navi"},"content":"* **Project management**:","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"pra-navi"},"content":"    * To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"pra-navi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"pra-navi"},"content":"    * To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"pra-navi"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"pra-navi"},"content":"    * User Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"pra-navi"},"content":"        * Added the images for the user guide.","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"pra-navi"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"pra-navi"},"content":"        * To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"pra-navi"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"pra-navi"},"content":"* **Community**:","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"pra-navi"},"content":"    * PRs reviewed by me can be found [here](https://github.com/AY2324S1-CS2103T-T10-2/tp/pulls?q\u003dis%3Apr+reviewed-by%3Apra-navi).","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"pra-navi"},"content":"    * Forum issues that I have participated in can be found [here](https://github.com/nus-cs2103-AY2324S1/forum/issues?q\u003dis%3Aissue+commenter%3Apra-navi+).    * Reported bugs and suggestions for other teams in the class: To be added soon!","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"pra-navi"},"content":"    * Some parts of the history feature I added was adopted by several other class mates: To be added soon!","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"pra-navi":39}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"HugeNoob"},"content":"     * Formats the {@code task} for display to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"HugeNoob"},"content":"    public static String format(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"HugeNoob"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"HugeNoob"},"content":"        builder.append(task.getTitle())","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"HugeNoob"},"content":"                .append(\"; Note: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"HugeNoob"},"content":"                .append(task.getNote());","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"HugeNoob"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HugeNoob":12,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"    public static final String COMMAND_WORD \u003d \"addPerson\";","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"        if (!(other instanceof AddPersonCommand)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"        AddPersonCommand otherAddPersonCommand \u003d (AddPersonCommand) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"        return toAdd.equals(otherAddPersonCommand.toAdd);","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"-":76,"freshcabbage123":10}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NOTE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TITLE;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":" * Adds a task to the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"    public static final String COMMAND_WORD \u003d \"addTask\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the address book. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"            + PREFIX_TASK_TITLE + \"TITLE \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"            + PREFIX_TASK_NOTE + \"NOTE\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"            + PREFIX_TASK_TITLE + \"Get flowers \"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"            + PREFIX_TASK_NOTE + \"Wedding Anniversary\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book\";","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"    private final Task toAdd;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"        toAdd \u003d task;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"HugeNoob"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"HugeNoob"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"HugeNoob"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"HugeNoob"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"HugeNoob"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"HugeNoob"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"HugeNoob"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"HugeNoob"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"HugeNoob"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"HugeNoob"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"HugeNoob"},"content":"        if (!(other instanceof AddTaskCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"HugeNoob"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"HugeNoob"},"content":"        AddTaskCommand otherAddTaskCommand \u003d (AddTaskCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"HugeNoob"},"content":"        return toAdd.equals(otherAddTaskCommand.toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"HugeNoob"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"HugeNoob"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"HugeNoob"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"HugeNoob"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"HugeNoob":73}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAllPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":" * Deletes all persons in the contacts list.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"public class DeleteAllPersonCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"    public static final String COMMAND_WORD \u003d \"deleteAllPerson\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"    public static final String MESSAGE_DELETE_ALL_PERSON_SUCCESS \u003d \"Deleted all persons\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"        model.deleteAllPerson();","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"        return new CommandResult(MESSAGE_DELETE_ALL_PERSON_SUCCESS);","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"HugeNoob":21}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"pra-navi"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"pra-navi"},"content":"    public static final String COMMAND_WORD \u003d \"deletePerson\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"pra-navi"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"pra-navi"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"pra-navi"},"content":"        DeletePersonCommand otherDeleteCommand \u003d (DeletePersonCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"pra-navi":5,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"editPerson\";","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"m1oojv"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"m1oojv"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand otherEditPersonCommand \u003d (EditPersonCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"m1oojv"},"content":"        return index.equals(otherEditPersonCommand.index)","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"m1oojv"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditPersonCommand.editPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-10-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-10-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2023-10-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2023-10-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2023-10-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"m1oojv":7,"-":235}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"public class FindPersonCommand extends Command {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    public static final String COMMAND_WORD \u003d \"findPerson\";","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    public FindPersonCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"        if (!(other instanceof FindPersonCommand)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"        FindPersonCommand otherFindPersonCommand \u003d (FindPersonCommand) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"        return predicate.equals(otherFindPersonCommand.predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"jiakai-17":6,"-":52}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"-":53,"freshcabbage123":8}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NOTE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TITLE;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"     * AddTaskCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TASK_TITLE, PREFIX_TASK_NOTE);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK_TITLE, PREFIX_TASK_NOTE)","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TASK_TITLE, PREFIX_TASK_NOTE);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TASK_TITLE).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"        Note note \u003d ParserUtil.parseNote(argMultimap.getValue(PREFIX_TASK_NOTE).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"        Task task \u003d new Task(title, note);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"HugeNoob"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"HugeNoob"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"HugeNoob"},"content":"     * in the given","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"HugeNoob"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"HugeNoob"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"HugeNoob"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"HugeNoob":53}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.commands.DeleteAllPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"pra-navi"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"m1oojv"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"m1oojv"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"pra-navi"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"pra-navi"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"HugeNoob"},"content":"        case DeleteAllPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"HugeNoob"},"content":"            return new DeleteAllPersonCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"        case FindPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"            return new FindPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"HugeNoob"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"HugeNoob"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HugeNoob":7,"m1oojv":3,"pra-navi":3,"jiakai-17":3,"-":71,"freshcabbage123":3}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"    public static final Prefix PREFIX_TASK_NOTE \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"    public static final Prefix PREFIX_TASK_TITLE \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"HugeNoob":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"pra-navi"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"pra-navi"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"pra-navi"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"pra-navi"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"pra-navi"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"pra-navi"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"pra-navi"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"pra-navi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"pra-navi":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"                    pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"m1oojv"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"m1oojv"},"content":"        return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"m1oojv":11,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":" * Parses input arguments and creates a new FindPersonCommand object","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"public class FindPersonCommandParser implements Parser\u003cFindPersonCommand\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPersonCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"     * and returns a FindPersonCommand object for execution.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    public FindPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        return new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"jiakai-17":8,"-":25}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"HugeNoob"},"content":"     * Parses a {@code String title} into an {@code Title}.","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"HugeNoob"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"HugeNoob"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"HugeNoob"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"HugeNoob"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"HugeNoob"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"HugeNoob"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"HugeNoob"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"HugeNoob"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"HugeNoob"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"HugeNoob"},"content":"     * Parses a {@code String note} into an {@code Note}.","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"HugeNoob"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"HugeNoob"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"HugeNoob"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"HugeNoob"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"HugeNoob"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"HugeNoob"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"HugeNoob"},"content":"        if (!Note.isValidNote(trimmedNote)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"HugeNoob"},"content":"            throw new ParseException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"HugeNoob"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"HugeNoob":32,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"    public AddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"HugeNoob"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"HugeNoob"},"content":"     * Removes all persons from the contact list.","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"HugeNoob"},"content":"    public void removeAllPerson() {","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"HugeNoob"},"content":"        persons.removeAll();","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"HugeNoob"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Task Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"jiakai-17"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"jiakai-17"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"jiakai-17"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"jiakai-17"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"jiakai-17"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"jiakai-17"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"jiakai-17"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"jiakai-17"},"content":"        tasks.add(t);","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":150,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"jiakai-17"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"jiakai-17"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"HugeNoob":11,"jiakai-17":35,"-":128}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"HugeNoob"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"HugeNoob"},"content":"     * Deletes all persons in the contact list.","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"HugeNoob"},"content":"    void deleteAllPerson();","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"HugeNoob"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Task Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"HugeNoob"},"content":"     * Returns true if a task with the same title and note as {@code task} exists in","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"HugeNoob"},"content":"     * the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"HugeNoob"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"HugeNoob"},"content":"     * Adds the given task.","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"HugeNoob"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"HugeNoob"},"content":"    void addTask(Task task);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"HugeNoob"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"HugeNoob"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"HugeNoob"},"content":"     * Updates the filter of the filtered task list to filter by the given","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"HugeNoob"},"content":"     * {@code predicate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"HugeNoob"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"HugeNoob"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"HugeNoob"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"HugeNoob":35,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"HugeNoob"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"HugeNoob"},"content":"    public void deleteAllPerson() {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"HugeNoob"},"content":"        addressBook.removeAllPerson();","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"HugeNoob"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Task Level Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"HugeNoob"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"HugeNoob"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"HugeNoob"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"HugeNoob"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"HugeNoob"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"HugeNoob"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"HugeNoob"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"HugeNoob"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"HugeNoob"},"content":"     * internal list of","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"HugeNoob"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"HugeNoob"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"HugeNoob"},"content":"        return filteredTasks;","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"HugeNoob"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"HugeNoob"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"HugeNoob"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":187,"author":{"gitId":"HugeNoob"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"HugeNoob"},"content":"                \u0026\u0026 filteredTasks.equals(otherModelManager.filteredTasks);","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"HugeNoob":44,"-":147}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jiakai-17":7,"-":17}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"HugeNoob"},"content":"     * Removes all persons from the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"HugeNoob"},"content":"    public void removeAll() {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"HugeNoob"},"content":"        internalList.clear();","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"jiakai-17"},"content":"     * Replaces the contents of this list with another {@code UniquePersonList}.","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"jiakai-17"},"content":"     * @param replacement the {@code UniquePersonList} to replace this list with.","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HugeNoob":7,"jiakai-17":4,"-":150}},{"path":"src/main/java/seedu/address/model/task/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":" * Represents a Task\u0027s note in the task list.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNote(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"public class Note {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"            \"Notes can take any value, as long as it is not blank and does not start with a whitespace\";","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"     * The first character of the task note must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S.*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"     * @param note A valid note for a task.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"    public Note(String note) {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"        checkArgument(isValidNote(note), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"        value \u003d note;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"     * Returns true if a given string is a valid note.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"    public static boolean isValidNote(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"        return value.equals(otherNote.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"        return Objects.hash(value);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jiakai-17":68}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"public class Task {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    // Identity fields","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    private final Title title;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    private final Note note;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"     * A Task consists of a title and a note.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"     * Both fields must be present and not null.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"    public Task(Title title, Note note) {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"        requireAllNonNull(title, note);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"    public Title getTitle() {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        return title;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"    public Note getNote() {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"        return note;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"     * Returns true if both tasks have the same title and note.","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"        return this.equals(otherTask);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"     * Returns true if both tasks have the same title and note.","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"        return title.equals(otherTask.title)","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"                \u0026\u0026 note.equals(otherTask.note);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"        return Objects.hash(title, note);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"                .add(\"title\", title)","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"                .add(\"note\", note)","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"                .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jiakai-17":77}},{"path":"src/main/java/seedu/address/model/task/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":" * Represents a Task\u0027s title in the task list.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"public class Title {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"            \"Titles can take any value, as long as it is not blank and does not start with a whitespace\";","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"     * The first character of the task title must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S.*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"     * @param title A valid title for a task.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"    public Title(String title) {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"        value \u003d title;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"        if (!(other instanceof Title)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"        Title otherTitle \u003d (Title) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"        return value.equals(otherTitle.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"        return Objects.hash(value);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jiakai-17":68}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":" * of tasks uses Task#isSameTask(Task) for equality to ensure that the task being added or updated is","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object)","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":" * to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"     * The task must exist in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"     * Replaces the contents of this list with another {@code UniqueTaskList}.","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"jiakai-17"},"content":"     * @param replacement the {@code UniqueTaskList} to replace this list with.","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"jiakai-17"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"jiakai-17"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"jiakai-17"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"jiakai-17"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"jiakai-17"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"jiakai-17"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"jiakai-17"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"jiakai-17"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"jiakai-17"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"jiakai-17"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"jiakai-17"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"jiakai-17"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"jiakai-17"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"jiakai-17"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"jiakai-17"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"jiakai-17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"jiakai-17"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"jiakai-17"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"jiakai-17"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"jiakai-17"},"content":"        if (!(other instanceof UniqueTaskList)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"jiakai-17"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"jiakai-17"},"content":"        UniqueTaskList otherUniqueTaskList \u003d (UniqueTaskList) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"jiakai-17"},"content":"        return internalList.equals(otherUniqueTaskList.internalList);","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"jiakai-17"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"jiakai-17"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"jiakai-17"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"jiakai-17"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"jiakai-17"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"jiakai-17"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"jiakai-17"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"jiakai-17"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"jiakai-17"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"jiakai-17"},"content":"                    return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"jiakai-17"},"content":"                }","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"jiakai-17"},"content":"        return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jiakai-17":153}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":" * Signals that the operation will result in duplicate Tasks.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":" * Tasks are considered duplicates if they have the same Title and Note.","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jiakai-17":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":" * Signals that the operation is unable to find the specified Task.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jiakai-17":6}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Note;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    private final String title;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"    private final String note;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    public JsonAdaptedTask(@JsonProperty(\"title\") String title, @JsonProperty(\"note\") String note) {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"        title \u003d source.getTitle().value;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"        note \u003d source.getNote().value;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"        if (!Note.isValidNote(note)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"            throw new IllegalValueException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"        return new Task(modelTitle, modelNote);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jiakai-17":62}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"                                       @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"            if (addressBook.hasTask(task)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jiakai-17":17,"-":58}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"import java.awt.Desktop;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"import java.net.URI;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-t10-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"    private Button openButton;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"HugeNoob"},"content":"     * Opens the user guide URL in the default web browser.","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"HugeNoob"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"HugeNoob"},"content":"    private void openInBrowser() {","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"HugeNoob"},"content":"        try {","lastModifiedDate":"2023-10-10"},{"lineNumber":117,"author":{"gitId":"HugeNoob"},"content":"            Desktop.getDesktop().browse(new URI(USERGUIDE_URL));","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"HugeNoob"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"HugeNoob"},"content":"            // Handle the IOException, which may occur when the system cannot open the","lastModifiedDate":"2023-10-10"},{"lineNumber":120,"author":{"gitId":"HugeNoob"},"content":"            // default browser.","lastModifiedDate":"2023-10-10"},{"lineNumber":121,"author":{"gitId":"HugeNoob"},"content":"            logger.warning(\"Failed to open URL in default browser: \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"HugeNoob"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"HugeNoob"},"content":"            // Handle the URISyntaxException, which may occur when the URL is not valid.","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"HugeNoob"},"content":"            logger.warning(\"Invalid URL specified: \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-10"},{"lineNumber":125,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"HugeNoob":26,"-":101}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"#copyButton, #openButton, #helpMessage {","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"#copyButton, #openButton {","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"#copyButton:hover, #openButton:hover {","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"#copyButton:armed, #openButton:armed {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"HugeNoob":4,"-":15}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"          \u003cButton fx:id\u003d\"openButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openInBrowser\" text\u003d\"Open in browser\"\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"HugeNoob":5,"-":44}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"pra-navi"},"content":"        String deletePersonCommand \u003d \"deletePerson 9\";","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"pra-navi"},"content":"        assertCommandException(deletePersonCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"freshcabbage123"},"content":"        String addCommand \u003d AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"pra-navi":2,"-":171,"freshcabbage123":2}},{"path":"src/test/java/seedu/address/logic/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.testutil.TypicalTasks.AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.testutil.TypicalTasks.BUDGET;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"public class MessagesTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"    public void format_person_alice() {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"        String expected \u003d \"Alice Pauline; Phone: 94351253; Email: alice@example.com;\"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"                + \" Address: 123, Jurong West Ave 6, #08-111; Tags: [friends]\";","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"        assertEquals(expected, Messages.format(ALICE));","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"    public void format_person_benson() {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"        String expected \u003d \"Benson Meier; Phone: 98765432; Email: johnd@example.com;\"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"                + \" Address: 311, Clementi Ave 2, #02-25; Tags: [owesMoney][friends]\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"        assertEquals(expected, Messages.format(BENSON));","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"    public void format_task_agenda() {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"        String expected \u003d \"Prepare Agenda; Note: To book venue\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"        assertEquals(expected, Messages.format(AGENDA));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"    public void format_task_budget() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"        String expected \u003d \"Prepare Budget; Note: For CS2102\";","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"        assertEquals(expected, Messages.format(BUDGET));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"HugeNoob":39}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model,","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"-":42,"freshcabbage123":6}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.ModelStub;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"        String expected \u003d AddPersonCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(expected, addPersonCommand.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"HugeNoob":1,"-":111,"freshcabbage123":13}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.testutil.TypicalTasks.AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.ModelStub;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, Messages.format(validTask)),","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"HugeNoob"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"HugeNoob"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"HugeNoob"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(validTask);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"HugeNoob"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"HugeNoob"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"HugeNoob"},"content":"                AddTaskCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addTaskCommand.execute(modelStub));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"HugeNoob"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"HugeNoob"},"content":"        Task caterer \u003d new TaskBuilder().withTitle(\"Call caterer\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"HugeNoob"},"content":"        Task hotel \u003d new TaskBuilder().withTitle(\"Call hotel\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"HugeNoob"},"content":"        AddTaskCommand addCatererCommand \u003d new AddTaskCommand(caterer);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"HugeNoob"},"content":"        AddTaskCommand addHotelCommand \u003d new AddTaskCommand(hotel);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"HugeNoob"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"HugeNoob"},"content":"        assertTrue(addCatererCommand.equals(addCatererCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"HugeNoob"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"HugeNoob"},"content":"        AddTaskCommand addCatererCommandCopy \u003d new AddTaskCommand(caterer);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"HugeNoob"},"content":"        assertTrue(addCatererCommand.equals(addCatererCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"HugeNoob"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"HugeNoob"},"content":"        assertFalse(addCatererCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"HugeNoob"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"HugeNoob"},"content":"        assertFalse(addCatererCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"HugeNoob"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"HugeNoob"},"content":"        assertFalse(addCatererCommand.equals(addHotelCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"HugeNoob"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"HugeNoob"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(AGENDA);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"HugeNoob"},"content":"        String expected \u003d AddTaskCommand.class.getCanonicalName() + \"{toAdd\u003d\" + AGENDA + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"HugeNoob"},"content":"        assertEquals(expected, addTaskCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"HugeNoob"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"HugeNoob"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"HugeNoob"},"content":"        private final Task task;","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"HugeNoob"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"HugeNoob"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"HugeNoob"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"HugeNoob"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"HugeNoob"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"HugeNoob"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"HugeNoob"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"HugeNoob"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"HugeNoob"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"HugeNoob"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"HugeNoob"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"HugeNoob"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"HugeNoob"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"HugeNoob"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"HugeNoob"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"HugeNoob"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"HugeNoob"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"HugeNoob"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"HugeNoob"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"HugeNoob"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"HugeNoob"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"HugeNoob"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"HugeNoob":125}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NOTE;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TITLE;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"    // person","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"HugeNoob"},"content":"    // task","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"HugeNoob"},"content":"    public static final String VALID_NOTE_AGENDA \u003d \"To book venue\";","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"HugeNoob"},"content":"    public static final String VALID_TITLE_AGENDA \u003d \"Prepare Agenda\";","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"HugeNoob"},"content":"    public static final String NOTE_DESC_AGENDA \u003d \" \" + PREFIX_TASK_NOTE + VALID_NOTE_AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"HugeNoob"},"content":"    public static final String TITLE_DESC_AGENDA \u003d \" \" + PREFIX_TASK_TITLE + VALID_TITLE_AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"HugeNoob"},"content":"    public static final String INVALID_NOTE_DESC \u003d \" \" + PREFIX_TASK_NOTE; // empty string not allowed for notes","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"HugeNoob"},"content":"    public static final String INVALID_TITLE_DESC \u003d \" \" + PREFIX_TASK_TITLE; // empty string not allowed for titles","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"HugeNoob"},"content":"    // shared","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"m1oojv"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"m1oojv"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"HugeNoob":14,"m1oojv":2,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAllPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"public class DeleteAllPersonCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"        assertCommandSuccess(new DeleteAllPersonCommand(), model,","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"                DeleteAllPersonCommand.MESSAGE_DELETE_ALL_PERSON_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"        assertCommandSuccess(new DeleteAllPersonCommand(), model,","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"                DeleteAllPersonCommand.MESSAGE_DELETE_ALL_PERSON_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"HugeNoob":5,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"pra-navi"},"content":" * {@code DeletePersonCommand}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"pra-navi"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"pra-navi"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"pra-navi"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"pra-navi"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"pra-navi"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"pra-navi"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"pra-navi"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"pra-navi"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"pra-navi"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"pra-navi"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"pra-navi"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"pra-navi"},"content":"        DeletePersonCommand deletePersonFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"pra-navi"},"content":"        DeletePersonCommand deletePersonSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"pra-navi"},"content":"        assertTrue(deletePersonFirstCommand.equals(deletePersonFirstCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"pra-navi"},"content":"        DeletePersonCommand deletePersonFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"pra-navi"},"content":"        assertTrue(deletePersonFirstCommand.equals(deletePersonFirstCommandCopy));","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"pra-navi"},"content":"        assertFalse(deletePersonFirstCommand.equals(1));","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"pra-navi"},"content":"        assertFalse(deletePersonFirstCommand.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"pra-navi"},"content":"        assertFalse(deletePersonFirstCommand.equals(deletePersonSecondCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"pra-navi"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"pra-navi"},"content":"        String expected \u003d DeletePersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"pra-navi"},"content":"        assertEquals(expected, deletePersonCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"pra-navi":23,"-":97}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPersonCommand.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"m1oojv"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"m1oojv"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"m1oojv"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"m1oojv"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"m1oojv"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"m1oojv"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"m1oojv"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"m1oojv"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"m1oojv"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"m1oojv"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"m1oojv"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"m1oojv"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"m1oojv"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"m1oojv"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"m1oojv"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"HugeNoob"},"content":"        assertFalse(standardCommand.equals(new DeleteAllPersonCommand()));","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"m1oojv"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"m1oojv"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"m1oojv"},"content":"        String expected \u003d EditPersonCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"m1oojv"},"content":"        assertEquals(expected, editPersonCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"m1oojv":34,"HugeNoob":1,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"m1oojv":1,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonCommand}.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"public class FindPersonCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"        FindPersonCommand findPersonFirstCommand \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"        FindPersonCommand findPersonSecondCommand \u003d new FindPersonCommand(secondPredicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(findPersonFirstCommand.equals(findPersonFirstCommand));","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"        FindPersonCommand findPersonFirstCommandCopy \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(findPersonFirstCommand.equals(findPersonFirstCommandCopy));","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(findPersonFirstCommand.equals(1));","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(findPersonFirstCommand.equals(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(findPersonFirstCommand.equals(findPersonSecondCommand));","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"  \");","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"jiakai-17"},"content":"        FindPersonCommand findPersonCommand \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"        String expected \u003d FindPersonCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(expected, findPersonCommand.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"jiakai-17":16,"-":75}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"                new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2023-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"freshcabbage123"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"freshcabbage123"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2023-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2023-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2023-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-10-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2023-10-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-10"},{"lineNumber":193,"author":{"gitId":"freshcabbage123"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-10"},{"lineNumber":194,"author":{"gitId":"freshcabbage123"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"-":187,"freshcabbage123":9}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NOTE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NOTE;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TITLE;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.testutil.TypicalTasks.AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"        Task expectedTask \u003d new TaskBuilder(AGENDA).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TITLE_DESC_AGENDA + NOTE_DESC_AGENDA,","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"                new AddTaskCommand(expectedTask));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"HugeNoob"},"content":"        String validExpectedTaskString \u003d TITLE_DESC_AGENDA + NOTE_DESC_AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"HugeNoob"},"content":"        // multiple titles","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser, TITLE_DESC_AGENDA + validExpectedTaskString,","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"HugeNoob"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_TITLE));","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"HugeNoob"},"content":"        // multiple notes","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser, NOTE_DESC_AGENDA + validExpectedTaskString,","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"HugeNoob"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_NOTE));","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"HugeNoob"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"HugeNoob"},"content":"                validExpectedTaskString + TITLE_DESC_AGENDA + NOTE_DESC_AGENDA + validExpectedTaskString,","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"HugeNoob"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_TITLE, PREFIX_TASK_NOTE));","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"HugeNoob"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"HugeNoob"},"content":"        // invalid title","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser, INVALID_TITLE_DESC + validExpectedTaskString,","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"HugeNoob"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_TITLE));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"HugeNoob"},"content":"        // invalid note","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser, INVALID_NOTE_DESC + validExpectedTaskString,","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"HugeNoob"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_NOTE));","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"HugeNoob"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"HugeNoob"},"content":"        // invalid title","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser, validExpectedTaskString + INVALID_TITLE_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"HugeNoob"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_TITLE));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"HugeNoob"},"content":"        // invalid note","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser, validExpectedTaskString + INVALID_NOTE_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"HugeNoob"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_NOTE));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"HugeNoob"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"HugeNoob"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"HugeNoob"},"content":"        // missing title prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser, VALID_TITLE_AGENDA + NOTE_DESC_AGENDA,","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"HugeNoob"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"HugeNoob"},"content":"        // missing note prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser, TITLE_DESC_AGENDA + VALID_NOTE_AGENDA,","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"HugeNoob"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"HugeNoob"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"HugeNoob"},"content":"        // invalid title","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser, INVALID_TITLE_DESC + NOTE_DESC_AGENDA,","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"HugeNoob"},"content":"                Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"HugeNoob"},"content":"        // invalid note","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"HugeNoob"},"content":"        assertParseFailure(parser, TITLE_DESC_AGENDA + INVALID_NOTE_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"HugeNoob"},"content":"                Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"HugeNoob":100}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.commands.DeleteAllPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"pra-navi"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.testutil.TaskUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"    public void parseCommand_addPerson() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddPersonCommand(person));","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"HugeNoob"},"content":"    public void parseCommand_deleteAllPerson() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"HugeNoob"},"content":"        assertTrue(parser.parseCommand(DeleteAllPersonCommand.COMMAND_WORD) instanceof DeleteAllPersonCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"HugeNoob"},"content":"        assertTrue(parser.parseCommand(DeleteAllPersonCommand.COMMAND_WORD + \" 3\") instanceof DeleteAllPersonCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"pra-navi"},"content":"    public void parseCommand_deletePerson() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"pra-navi"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"pra-navi"},"content":"                DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"pra-navi"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"m1oojv"},"content":"    public void parseCommand_editPerson() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(EditPersonCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"m1oojv"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"    public void parseCommand_findPerson() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"        FindPersonCommand command \u003d (FindPersonCommand) parser.parseCommand(","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"jiakai-17"},"content":"                FindPersonCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(new FindPersonCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"HugeNoob"},"content":"    public void parseCommand_addTask() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"HugeNoob"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"HugeNoob"},"content":"        AddTaskCommand command \u003d (AddTaskCommand) parser.parseCommand(TaskUtil.getAddTaskCommand(task));","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"HugeNoob"},"content":"        assertEquals(new AddTaskCommand(task), command);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"HugeNoob":15,"m1oojv":5,"pra-navi":5,"jiakai-17":5,"-":77,"freshcabbage123":4}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"pra-navi"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"pra-navi"},"content":" * outside of the DeletePersonCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"pra-navi"},"content":" * same path through the DeletePersonCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"pra-navi"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"pra-navi"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"pra-navi"},"content":"    public void parse_validArgs_returnsDeletePersonCommand() {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"pra-navi"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"pra-navi"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"pra-navi"},"content":"                DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"pra-navi":9,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"m1oojv"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"m1oojv"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"m1oojv"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"m1oojv"},"content":"        assertParseFailure(parser, \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"m1oojv"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"m1oojv"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"m1oojv"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"m1oojv"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"freshcabbage123"},"content":"        // AddPersonCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"m1oojv"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"m1oojv":14,"-":193,"freshcabbage123":1}},{"path":"src/test/java/seedu/address/logic/parser/FindPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"public class FindPersonCommandParserTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    private FindPersonCommandParser parser \u003d new FindPersonCommandParser();","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    public void parse_validArgs_returnsFindPersonCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"        FindPersonCommand expectedFindPersonCommand \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"                new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindPersonCommand);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindPersonCommand);","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"jiakai-17":10,"-":25}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"HugeNoob"},"content":"    public void removeAllPerson_clearsPersonList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"HugeNoob"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"HugeNoob"},"content":"        newData.removeAllPerson();","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"HugeNoob"},"content":"        assertEquals(addressBook.getPersonList(), newData.getPersonList());","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"jiakai-17"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"jiakai-17"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"jiakai-17"},"content":"            return null;","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"HugeNoob":7,"jiakai-17":6,"-":108}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.testutil.TypicalTasks.AGENDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"HugeNoob"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"HugeNoob"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"HugeNoob"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"HugeNoob"},"content":"        assertFalse(modelManager.hasTask(AGENDA));","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"HugeNoob"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"HugeNoob"},"content":"        modelManager.addTask(AGENDA);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"HugeNoob"},"content":"        assertTrue(modelManager.hasTask(AGENDA));","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"HugeNoob"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"HugeNoob"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"HugeNoob"},"content":"    // TODO: Improve on equals test after adding withTask to AddressBookBuilder","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"HugeNoob":23,"-":132}},{"path":"src/test/java/seedu/address/model/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"HugeNoob"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"HugeNoob"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"HugeNoob"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"HugeNoob"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"HugeNoob"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"HugeNoob"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"HugeNoob"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"HugeNoob"},"content":"    public void deleteAllPerson() {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"HugeNoob"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"HugeNoob"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"HugeNoob"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"HugeNoob"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"HugeNoob"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"HugeNoob"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"HugeNoob"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"HugeNoob"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"HugeNoob"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"HugeNoob":109}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"HugeNoob"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"HugeNoob"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"HugeNoob"},"content":"    public void removeAll_clearsList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"HugeNoob"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"HugeNoob"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"HugeNoob"},"content":"        uniquePersonList.removeAll();","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"HugeNoob"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"HugeNoob":9,"-":175}},{"path":"src/test/java/seedu/address/model/task/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"public class NoteTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"    public void constructor_invalidNote_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"        // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Note(\"\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"        // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Note(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"        // starts with a whitespace","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Note(\" do work\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"    public void isValidNote() {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        // null note","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(NullPointerException.class, () -\u003e Note.isValidNote(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"        // invalid notes","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(Note.isValidNote(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(Note.isValidNote(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(Note.isValidNote(\" do work\")); // starts with a whitespace","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"        // valid notes","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Note.isValidNote(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Note.isValidNote(\"SELECT*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Note.isValidNote(\"do work\")); // alphabets only","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Note.isValidNote(\"12345\")); // numbers only","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Note.isValidNote(\"submit by the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Note.isValidNote(\"CS2103\")); // with capital letters","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Note.isValidNote(\"CoordiMate for Event Planners of CS2103\")); // long notes","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"\\uD83D\\uDC4B\\uD83C\\uDFFB \\uD83C\\uDDF8\\uD83C\\uDDEC\")); // emojis","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"(ノಠ益ಠ)ノ彡┻━┻\")); // non-English characters","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"        Note note \u003d new Note(\"Valid Note\");","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(note, new Note(\"Valid Note\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(note, note);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"        // assertNotEquals calls the 1st argument\u0027s equals method","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(note, null);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(note, 5.0f);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(note, new Note(\"Other Valid Note\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"        Note note \u003d new Note(\"Valid Note\");","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(\"Valid Note\", note.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"jiakai-17"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"jiakai-17"},"content":"        Note note \u003d new Note(\"Valid Note\");","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"        // same note -\u003e same hashcode","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(note.hashCode(), new Note(\"Valid Note\").hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"jiakai-17"},"content":"        // different note -\u003e different hashcode","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(note.hashCode(), new Note(\"Other Valid Note\").hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"jiakai-17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(note.hashCode(), \"Test Note\".hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jiakai-17":90}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"public class TaskTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"    private static final Task TEST_TASK_1_1 \u003d new Task(new Title(\"Test Task 1\"), new Note(\"Test Note 1\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"    private static final Task TEST_TASK_1_1_COPY \u003d new Task(new Title(\"Test Task 1\"), new Note(\"Test Note 1\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    private static final Task TEST_TASK_1_2 \u003d new Task(new Title(\"Test Task 1\"), new Note(\"Test Note 2\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    private static final Task TEST_TASK_2_1 \u003d new Task(new Title(\"Test Task 2\"), new Note(\"Test Note 1\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    private static final Task TEST_TASK_2_2 \u003d new Task(new Title(\"Test Task 2\"), new Note(\"Test Note 2\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"    public void isSameTask() {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(TEST_TASK_1_1.isSameTask(TEST_TASK_1_1_COPY));","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(TEST_TASK_1_1.isSameTask(TEST_TASK_1_1));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(TEST_TASK_1_1.isSameTask(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        // different title, same note -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(TEST_TASK_1_1.isSameTask(TEST_TASK_2_1));","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"        // same title, different note -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(TEST_TASK_1_1.isSameTask(TEST_TASK_1_2));","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        // different title and note -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(TEST_TASK_1_1.isSameTask(TEST_TASK_2_2));","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(TEST_TASK_1_1, TEST_TASK_1_1_COPY);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(TEST_TASK_1_1, TEST_TASK_1_1);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"        // assertNotEquals calls the 1st argument\u0027s equals method","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(TEST_TASK_1_1, null);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(TEST_TASK_1_1, 5.0f);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"        // different title, same note -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(TEST_TASK_1_1, TEST_TASK_2_1);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"        // same title, different note -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(TEST_TASK_1_1, TEST_TASK_1_2);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"        // different title and note -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(TEST_TASK_1_1, TEST_TASK_2_2);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"        String expected \u003d Task.class.getCanonicalName() + \"{title\u003d\" + TEST_TASK_1_1.getTitle()","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"                + \", note\u003d\" + TEST_TASK_1_1.getNote() + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(expected, TEST_TASK_1_1.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(TEST_TASK_1_1.hashCode(), TEST_TASK_1_1_COPY.hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(TEST_TASK_1_1.hashCode(), TEST_TASK_1_1.hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"jiakai-17"},"content":"        // different title, same note -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(TEST_TASK_1_1.hashCode(), TEST_TASK_2_1.hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"jiakai-17"},"content":"        // same title, different note -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(TEST_TASK_1_1.hashCode(), TEST_TASK_1_2.hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"jiakai-17"},"content":"        // different title and note -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(TEST_TASK_1_1.hashCode(), TEST_TASK_2_2.hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"jiakai-17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(TEST_TASK_1_1.hashCode(), \"Test Task 1 Test Note 1\".hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jiakai-17":93}},{"path":"src/test/java/seedu/address/model/task/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"public class TitleTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"        // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(\"\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"        // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"        // starts with a whitespace","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(\" do work\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"    public void isValidTitle() {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        // null title","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"        // invalid titles","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(Title.isValidTitle(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(Title.isValidTitle(\" do work\")); // starts with a whitespace","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"        // valid titles","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"SELECT*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"do work\")); // alphabets only","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"12345\")); // numbers only","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"submit by the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"CS2103\")); // with capital letters","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"CoordiMate for Event Planners of CS2103\")); // long titles","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"\\uD83D\\uDC4B\\uD83C\\uDFFB \\uD83C\\uDDF8\\uD83C\\uDDEC\")); // emojis","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(Title.isValidTitle(\"(ノಠ益ಠ)ノ彡┻━┻\")); // non-English characters","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"        Title title \u003d new Title(\"Valid Title\");","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(title, new Title(\"Valid Title\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(title, title);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"        // assertNotEquals calls the 1st argument\u0027s equals method","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(title, null);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(title, 5.0f);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(title, new Title(\"Other Valid Title\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"        Title title \u003d new Title(\"Valid Title\");","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(\"Valid Title\", title.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"jiakai-17"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"jiakai-17"},"content":"        Title title \u003d new Title(\"Valid Title\");","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"        // same title -\u003e same hashcode","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(title.hashCode(), new Title(\"Valid Title\").hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"jiakai-17"},"content":"        // different title -\u003e different hashcode","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(title.hashCode(), new Title(\"Other Valid Title\").hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"jiakai-17"},"content":"        // different types -\u003e different hashcode","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"jiakai-17"},"content":"        assertNotEquals(title.hashCode(), \"Test Title\".hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jiakai-17":91}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import static seedu.address.testutil.TypicalTasks.AGENDA;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"        assertFalse(uniqueTaskList.contains(AGENDA));","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"        uniqueTaskList.add(AGENDA);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(uniqueTaskList.contains(AGENDA));","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"    public void contains_taskWithSameFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"        uniqueTaskList.add(AGENDA);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        String agendaTaskTitleString \u003d AGENDA.getTitle().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"        String agendaTaskNoteString \u003d AGENDA.getNote().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"        Task agendaCopy \u003d new TaskBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"                .withTitle(agendaTaskTitleString)","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"                .withNote(agendaTaskNoteString)","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"        assertTrue(uniqueTaskList.contains(agendaCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"    // TODO: Add more tests for different methods of UniqueTaskList","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"                -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(uniqueTaskList.asUnmodifiableObservableList().toString(), uniqueTaskList.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jiakai-17":57}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Note;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    public static final String EMPTY_TITLE \u003d \" \";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    public static final String EMPTY_NOTE \u003d \" \";","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    public static final String INVALID_TITLE \u003d \" Invalid Title 123\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"    public static final String INVALID_NOTE \u003d \" Invalid Note 123\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"    public static final String VALID_TITLE \u003d \"Valid Title 1234 !@#$\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"    public static final String VALID_NOTE \u003d \"Valid Note 1234 !@#$\";","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"    public static final Task VALID_TASK \u003d new Task(new Title(VALID_TITLE), new Note(VALID_NOTE));","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASK);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(VALID_TASK, task.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"        JsonAdaptedTask emptyTaskTitle \u003d new JsonAdaptedTask(EMPTY_TITLE, VALID_NOTE);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"        JsonAdaptedTask invalidTaskTitle \u003d new JsonAdaptedTask(INVALID_TITLE, VALID_NOTE);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        String expectedMessage \u003d Title.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, emptyTaskTitle::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, invalidTaskTitle::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_NOTE);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"    public void toModelType_invalidNote_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"        JsonAdaptedTask emptyTaskNote \u003d new JsonAdaptedTask(VALID_TITLE, EMPTY_NOTE);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"        JsonAdaptedTask invalidTaskNote \u003d new JsonAdaptedTask(VALID_TITLE, INVALID_NOTE);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"        String expectedMessage \u003d Note.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, emptyTaskNote::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, invalidTaskNote::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"    public void toModelType_nullNote_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TITLE, null);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName());","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jiakai-17":63}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    // test persons","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    // test tasks","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"    public static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksAddressBook.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"    public static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskAddressBook.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"    public static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskAddressBook.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"        AddressBook typicalTasksAddressBook \u003d TypicalTasks.getTypicalAddressBook();","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(addressBookFromFile, typicalTasksAddressBook);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jiakai-17":31,"-":47}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"m1oojv":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"     * Returns an addPerson command string for adding the {@code person}.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    public static String getAddPersonCommand(Person person) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"m1oojv":1,"-":57,"freshcabbage123":4}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Note;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"public class TaskBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"    public static final String DEFAULT_TITLE \u003d \"Plan the event\";","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"    public static final String DEFAULT_NOTE \u003d \"Come up with a comprehensive plan for the event.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    private Title title;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    private Note note;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    public TaskBuilder() {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"        note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        title \u003d taskToCopy.getTitle();","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"        note \u003d taskToCopy.getNote();","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"     * Sets the {@code Title} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"    public TaskBuilder withTitle(String title) {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"     * Sets the {@code Note} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"    public TaskBuilder withNote(String note) {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"    public Task build() {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"        return new Task(title, note);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jiakai-17":53}},{"path":"src/test/java/seedu/address/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HugeNoob"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NOTE;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"HugeNoob"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TITLE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"HugeNoob"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"HugeNoob"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"HugeNoob"},"content":" * A utility class for Task.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"HugeNoob"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"HugeNoob"},"content":"public class TaskUtil {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"HugeNoob"},"content":"     * Returns an addTask command string for adding the {@code task}.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"HugeNoob"},"content":"    public static String getAddTaskCommand(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"HugeNoob"},"content":"        return AddTaskCommand.COMMAND_WORD + \" \" + getTaskDetails(task);","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"HugeNoob"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"HugeNoob"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"HugeNoob"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"HugeNoob"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"HugeNoob"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"HugeNoob"},"content":"        sb.append(PREFIX_TASK_TITLE + task.getTitle().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"HugeNoob"},"content":"        sb.append(PREFIX_TASK_NOTE + task.getNote().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"HugeNoob"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"HugeNoob"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"HugeNoob"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"HugeNoob"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"HugeNoob":31}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    public static final Task AGENDA \u003d new TaskBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"            .withTitle(\"Prepare Agenda\")","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"            .withNote(\"To book venue\")","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"    public static final Task BUDGET \u003d new TaskBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"            .withTitle(\"Prepare Budget\")","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"            .withNote(\"For CS2102\")","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    public static final Task CATERING \u003d new TaskBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"            .withTitle(\"Book Catering\")","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"            .withNote(\"For CS2101\")","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"    public static final Task DRAFT \u003d new TaskBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"            .withTitle(\"Send Budget and Draft\")","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"            .withNote(\"For CS2100\")","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"    public static final Task ENTERTAINMENT \u003d new TaskBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"            .withTitle(\"Book Entertainment\")","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"            .withNote(\"For CS1101\")","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"    public static final Task FUNDING \u003d new TaskBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"            .withTitle(\"Prepare Funding\")","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"            .withNote(\"For MA2001\")","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"    public static final Task GUESTLIST \u003d new TaskBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"            .withTitle(\"Prepare Guestlist\")","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"            .withNote(\"For CS2103T\")","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"    public static final Task HOSPITALITY \u003d new TaskBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"            .withTitle(\"Ensure Hospitality\")","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"            .withNote(\"For CS2103T\")","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"    public static final Task INVITATION \u003d new TaskBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"            .withTitle(\"Send Invitations and Guestlist\")","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"            .withNote(\"For CS2103T\")","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"    // Keywords","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"    public static final String KEYWORD_MATCHING_BOOK \u003d \"Book\";","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"    public static final String KEYWORD_MATCHING_PREPARE \u003d \"Prepare\";","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"    public static final String KEYWORD_MATCHING_SEND \u003d \"Send\";","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"    public static final String KEYWORD_MATCHING_FOR \u003d \"For\";","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"    public static final String KEYWORD_MATCHING_CS2103T \u003d \"CS2103T\";","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"    private TypicalTasks() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"jiakai-17"},"content":"        return ab;","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"jiakai-17"},"content":"                AGENDA, BUDGET, CATERING, DRAFT, ENTERTAINMENT, FUNDING, GUESTLIST, HOSPITALITY, INVITATION));","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jiakai-17":85}}]

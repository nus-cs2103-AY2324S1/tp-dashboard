[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W11-4/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"* Link Tree.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"  * LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"* The project simulates an ongoing software project for a desktop application (called LinkTree) used for managing contact details.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"StevenLiudw":5,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"    implementation \u0027org.jetbrains:annotations:24.0.0\u0027","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"    implementation \u0027org.jetbrains:annotations:24.0.0\u0027","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Tang-Moyan":2,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"You can reach us at the email `linktreeltd@gmail.com`","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"### Liu Diwen","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"\u003cimg src\u003d\"images/stevenliudw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"[[github](https://github.com/stevenliudw)]","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"[[portfolio](team/stevenliudw.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"### Chen Jizhuo","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"\u003cimg src\u003d\"images/jizhuochen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"[[github](http://github.com/jizhuochen)]","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"[[portfolio](team/jizhuochen.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"### Adhitya Gopal","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"\u003cimg src\u003d\"images/adhigop13.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"[[github](http://github.com/adhigop13)] ","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"[[portfolio](team/adhigop13.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"### Kishore","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"\u003cimg src\u003d\"images/erohsikivar.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"[[github](http://github.com/erohsikivar)]","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"[[portfolio](team/erohsikivar.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"### Tang Moyan","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"\u003cimg src\u003d\"images/tang-moyan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"[[github](http://github.com/Tang-Moyan)]","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"[[portfolio](team/Tang-Moyan.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"StevenLiudw":23,"-":38}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"# LinkTree Developer Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"erohsikivar"},"content":"* Developers engaged in medium to large-scale software projects; ","lastModifiedDate":"2023-10-05"},{"lineNumber":273,"author":{"gitId":"erohsikivar"},"content":"* Collaborates frequently with multiple teams or departments; ","lastModifiedDate":"2023-10-05"},{"lineNumber":274,"author":{"gitId":"erohsikivar"},"content":"* Requires quick access to contact details of other team members based on their roles and responsibilities; ","lastModifiedDate":"2023-10-05"},{"lineNumber":275,"author":{"gitId":"erohsikivar"},"content":"* Prefers an organized and streamlined method for contact management; ","lastModifiedDate":"2023-10-05"},{"lineNumber":276,"author":{"gitId":"erohsikivar"},"content":"* Tech-savvy and open to adopting new tools for enhancing productivity.","lastModifiedDate":"2023-10-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"erohsikivar"},"content":"**Value proposition**: LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2023-10-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2023-10-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":285,"author":{"gitId":"StevenLiudw"},"content":"### User stories","lastModifiedDate":"2023-10-05"},{"lineNumber":286,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":287,"author":{"gitId":"StevenLiudw"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2023-10-05"},{"lineNumber":288,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"| Priority | As a …​             | I want to …​                                 | So that I can…​                                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"StevenLiudw"},"content":"|----------|---------------------|----------------------------------------------|--------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":295,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | developer           | view all members of my team                  | get their email address/contact                                                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":296,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | developer           | search contacts using a tag-based system     | swiftly find contacts relevant to specific responsibilities                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":297,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | developer           | view my team leader’s contact details        | contact him when I need direction on an issue                                    |","lastModifiedDate":"2023-10-05"},{"lineNumber":298,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | developer           | edit or update my information                | easily update my info                                                           |","lastModifiedDate":"2023-10-05"},{"lineNumber":299,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | developer           | set a status (available, busy, OOO)          | others know when to reach out to me                                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":300,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | developer           | search contact with partial information      | find the person without remembering their full name                              |","lastModifiedDate":"2023-10-05"},{"lineNumber":301,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | developer           | add a tag/short bio about my expertise       | others recognize my specialties                                                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":302,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | project manager     | access the names of all my developers        | contact them regarding the project                                              |","lastModifiedDate":"2023-10-05"},{"lineNumber":303,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | project manager     | view all my team leaders                     | contact them when collaborating on developing a certain feature                  |","lastModifiedDate":"2023-10-05"},{"lineNumber":304,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | project manager     | assign a node for a team leader              | target team leaders can fill in their information by themselves                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":305,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | project manager     | remove another user                          | if he leaves the team/company                                                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":306,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | project manager     | choose to share my contact information       | not everyone can contact me directly                                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":307,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | project manager     | archive old contacts or groups               | keep active list clutter-free while retaining old information                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":308,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | software team lead  | color-code my contacts                       | visually scan and prioritize my interactions                                    |","lastModifiedDate":"2023-10-05"},{"lineNumber":309,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | software team lead  | set a verification code                      | control who registers as a project manager                                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":310,"author":{"gitId":"StevenLiudw"},"content":"| `*`      | software team lead  | get notifications on birthdays               | maintain relationships through personal touches                                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":311,"author":{"gitId":"StevenLiudw"},"content":"| `*`      | software team lead  | create a public profile for my team          | external stakeholders can find and reach out to the right member                |","lastModifiedDate":"2023-10-05"},{"lineNumber":312,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | team leader         | assign a node for a developers               | target developer can fill in his information by himself                         |","lastModifiedDate":"2023-10-05"},{"lineNumber":313,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | team leader         | see info of other team leaders               | coordinate work for the project                                                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":314,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | new user            | use a help command                           | understand available functions of the app                                       |","lastModifiedDate":"2023-10-05"},{"lineNumber":315,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | user                | use bye command                              | close the app easily                                                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":316,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | user with access    | receive notifications on contact changes     | stay updated on team changes                                                    |","lastModifiedDate":"2023-10-05"},{"lineNumber":317,"author":{"gitId":"StevenLiudw"},"content":"| `* *`    | first-time user     | easily register                              | access the phonebook                                                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":318,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":319,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":320,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":321,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"erohsikivar"},"content":"(For all use cases below, the **System** is the `LinkTree` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"StevenLiudw"},"content":"**Use case: View all members of my team**","lastModifiedDate":"2023-10-05"},{"lineNumber":330,"author":{"gitId":"erohsikivar"},"content":"**Actor: Developer**","lastModifiedDate":"2023-10-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"StevenLiudw"},"content":"1. Developer requests to list team members.","lastModifiedDate":"2023-10-05"},{"lineNumber":335,"author":{"gitId":"erohsikivar"},"content":"2. LinkTree displays a list of team members.","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"StevenLiudw"},"content":"3. Developer views the members\u0027 contact information.","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"StevenLiudw"},"content":"* 2a. The team member list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":343,"author":{"gitId":"StevenLiudw"},"content":"  * 2a1. TeamDirectory indicates there are no members currently.","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":346,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"StevenLiudw"},"content":"**Use case: Search contacts using tags**","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"erohsikivar"},"content":"**Actor: Developer**","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"StevenLiudw"},"content":"1. Developer wants to find contacts with a specific tag.","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"StevenLiudw"},"content":"2. Developer inputs the desired tag into TeamDirectory.","lastModifiedDate":"2023-10-05"},{"lineNumber":355,"author":{"gitId":"StevenLiudw"},"content":"3. TeamDirectory displays a list of contacts with that tag.","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"StevenLiudw"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"StevenLiudw"},"content":"* 2a. No contacts have the specified tag.","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"StevenLiudw"},"content":"  * 2a1. TeamDirectory shows a message that no contacts were found with that tag.","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"StevenLiudw"},"content":"**Use case: Access names of developers**","lastModifiedDate":"2023-10-05"},{"lineNumber":368,"author":{"gitId":"erohsikivar"},"content":"**Actor: Project Manager**","lastModifiedDate":"2023-10-05"},{"lineNumber":369,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":370,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":371,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":372,"author":{"gitId":"StevenLiudw"},"content":"1. Project manager requests a list of all developers.","lastModifiedDate":"2023-10-05"},{"lineNumber":373,"author":{"gitId":"StevenLiudw"},"content":"2. TeamDirectory displays the list of developers.","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":375,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":377,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":379,"author":{"gitId":"StevenLiudw"},"content":"**Use case: Edit or update my information**","lastModifiedDate":"2023-10-05"},{"lineNumber":380,"author":{"gitId":"erohsikivar"},"content":"**Actor: Developer**","lastModifiedDate":"2023-10-05"},{"lineNumber":381,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":384,"author":{"gitId":"StevenLiudw"},"content":"1. Developer wants to update their contact info.","lastModifiedDate":"2023-10-05"},{"lineNumber":385,"author":{"gitId":"StevenLiudw"},"content":"2. Developer selects their profile and makes desired changes.","lastModifiedDate":"2023-10-05"},{"lineNumber":386,"author":{"gitId":"StevenLiudw"},"content":"3. TeamDirectory confirms the updates.","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":388,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":389,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":390,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":392,"author":{"gitId":"StevenLiudw"},"content":"**Use case: Assign a node for a team leader**","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"erohsikivar"},"content":"**Actor: Project Manager**","lastModifiedDate":"2023-10-05"},{"lineNumber":394,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":397,"author":{"gitId":"StevenLiudw"},"content":"1. Project manager wants to assign a node to a team leader.","lastModifiedDate":"2023-10-05"},{"lineNumber":398,"author":{"gitId":"StevenLiudw"},"content":"2. Project manager selects the desired team leader and assigns a node.","lastModifiedDate":"2023-10-05"},{"lineNumber":399,"author":{"gitId":"StevenLiudw"},"content":"3. TeamDirectory confirms the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":400,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":401,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":402,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":403,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":404,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":405,"author":{"gitId":"StevenLiudw"},"content":"**Use case: Create a public profile for a team**","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"erohsikivar"},"content":"**Actor: Team lead**","lastModifiedDate":"2023-10-05"},{"lineNumber":407,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":409,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":410,"author":{"gitId":"StevenLiudw"},"content":"1. Software team lead wants to create a public profile.","lastModifiedDate":"2023-10-05"},{"lineNumber":411,"author":{"gitId":"StevenLiudw"},"content":"2. Software team lead inputs relevant information for the public profile.","lastModifiedDate":"2023-10-05"},{"lineNumber":412,"author":{"gitId":"StevenLiudw"},"content":"3. TeamDirectory creates and displays the new public profile.","lastModifiedDate":"2023-10-05"},{"lineNumber":413,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":414,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"StevenLiudw"},"content":"**Use case: Remove a user**","lastModifiedDate":"2023-10-05"},{"lineNumber":419,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":420,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":421,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"StevenLiudw"},"content":"1. Project manager wants to remove a user.","lastModifiedDate":"2023-10-05"},{"lineNumber":423,"author":{"gitId":"StevenLiudw"},"content":"2. Project manager selects the user and requests removal.","lastModifiedDate":"2023-10-05"},{"lineNumber":424,"author":{"gitId":"StevenLiudw"},"content":"3. TeamDirectory confirms the removal of the user.","lastModifiedDate":"2023-10-05"},{"lineNumber":425,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":429,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":430,"author":{"gitId":"StevenLiudw"},"content":"**Use case: Set a verification code for project manager registration**","lastModifiedDate":"2023-10-05"},{"lineNumber":431,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":433,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":434,"author":{"gitId":"StevenLiudw"},"content":"1. Software team lead sets a verification code.","lastModifiedDate":"2023-10-05"},{"lineNumber":435,"author":{"gitId":"StevenLiudw"},"content":"2. New project managers must input this code to register.","lastModifiedDate":"2023-10-05"},{"lineNumber":436,"author":{"gitId":"StevenLiudw"},"content":"3. TeamDirectory verifies the code and allows the registration.","lastModifiedDate":"2023-10-05"},{"lineNumber":437,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":438,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":439,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":440,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":441,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":442,"author":{"gitId":"StevenLiudw"},"content":"**Use case: Receive notifications about contact changes**","lastModifiedDate":"2023-10-05"},{"lineNumber":443,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":444,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":445,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":446,"author":{"gitId":"StevenLiudw"},"content":"1. User with access wants to be notified of contact changes.","lastModifiedDate":"2023-10-05"},{"lineNumber":447,"author":{"gitId":"StevenLiudw"},"content":"2. TeamDirectory sends notifications whenever there are contact changes.","lastModifiedDate":"2023-10-05"},{"lineNumber":448,"author":{"gitId":"StevenLiudw"},"content":"3. User views the notifications.","lastModifiedDate":"2023-10-05"},{"lineNumber":449,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":450,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":451,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":452,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":453,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":454,"author":{"gitId":"StevenLiudw"},"content":"**Use case: Easily register as a first-time user**","lastModifiedDate":"2023-10-05"},{"lineNumber":455,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":456,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":457,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":458,"author":{"gitId":"StevenLiudw"},"content":"1. First-time user wants to register.","lastModifiedDate":"2023-10-05"},{"lineNumber":459,"author":{"gitId":"StevenLiudw"},"content":"2. First-time user inputs necessary details into TeamDirectory.","lastModifiedDate":"2023-10-05"},{"lineNumber":460,"author":{"gitId":"StevenLiudw"},"content":"3. TeamDirectory confirms successful registration.","lastModifiedDate":"2023-10-05"},{"lineNumber":461,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":462,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":463,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":464,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"adhigop13"},"content":"4.  Should be able to generate output in less than 5 seconds.","lastModifiedDate":"2023-10-05"},{"lineNumber":472,"author":{"gitId":"adhigop13"},"content":"5. Should be able to show correct input format in case the user enters the input in wrong format.","lastModifiedDate":"2023-10-05"},{"lineNumber":473,"author":{"gitId":"adhigop13"},"content":"6. The system should be usable by a new developer/intern who has not used such a software before.","lastModifiedDate":"2023-10-05"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"erohsikivar"},"content":"* **Team Directory**: The system or platform where all the contact details of developers, team leaders, and project managers are stored.","lastModifiedDate":"2023-10-05"},{"lineNumber":480,"author":{"gitId":"erohsikivar"},"content":"* **Node**: A designated area or profile within the Team Directory where specific users (like team leaders or developers) can input or update their information.","lastModifiedDate":"2023-10-05"},{"lineNumber":481,"author":{"gitId":"erohsikivar"},"content":"* **Tag-Based System**: A system in the Team Directory that allows contacts to be tagged with specific roles or responsibilities, like \"Database Management\" or \"Code Review\".","lastModifiedDate":"2023-10-05"},{"lineNumber":482,"author":{"gitId":"erohsikivar"},"content":"* **Public Profile**: A profile in the Team Directory visible to all users, containing non-sensitive information about a team or individual.","lastModifiedDate":"2023-10-05"},{"lineNumber":483,"author":{"gitId":"erohsikivar"},"content":"* **Status Feature**: A tool enabling users to set and display their current status or availability (e.g., online, busy, away) within the Team Directory.","lastModifiedDate":"2023-10-05"},{"lineNumber":484,"author":{"gitId":"erohsikivar"},"content":"* **Inventory Checking**: A feature that logs the state of an item (like an apartment) at a specific time, allowing for easy comparison at a later date.","lastModifiedDate":"2023-10-05"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":494,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":495,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"erohsikivar":21,"StevenLiudw":144,"-":371,"adhigop13":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"title: \"User Guide for LinkTree\"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"# LinkTree User Guide","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"LinkTree is a **desktop app optimized for developers engaged in medium to large-scale software projects** who require organized and streamlined methods for contact management. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"## Introduction","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"Target User Profile:","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"- Developers engaged in medium to large-scale software projects.","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"- Collaborates frequently with multiple teams or departments.","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"- Requires quick access to contact details of other team members based on their roles and responsibilities.","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"- Prefers an organized and streamlined method for contact management.","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"- Tech-savvy and open to adopting new tools for enhancing productivity.","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"Value Proposition:","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly.","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"## Getting Started","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"### Installation","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"1. Ensure you have Java `11` or above installed on your Computer.","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"2. Download the latest `LinkTree.jar` from [here](https://github.com/AY2324S1-CS2103T-W11-4/tp/releases).","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"3. Copy the file to the folder you wish to use as the _home folder_ for your smart contact book.","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"### Initial Setup","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"1. Open a command terminal, `cd` into the folder where you placed the jar file, and use the `java -jar addressbook.jar` command to run the application. A GUI similar to the one below should appear in a few seconds, containing some sample data.","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"2. Type a command into the command box and press Enter to execute it.","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"3. Refer to the [Basic Features](#basic-features) and [Advanced Features](#advanced-features) sections for details of each command.","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"## Basic Features","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"### Adding Contacts","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"* To add contacts for individual developers:","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"  - Command: `Add id [contacts]`","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"  - Example: `Add 1 [80888888]`","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"### Searching Contacts","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"* To search for a user or contact based on their id:","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"  - Command: `search [role] [contact_name]`","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"  - Example: `search [developer] [Peter]`","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"### Editing Contacts","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"* To edit personal information:","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"  - Command: `edit- [id] [field] [new_field]`","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"  - Example: `edit 01 email new.email@example.com`","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"### Deleting Contacts","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"* To delete existing contacts for developers:","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"  - Command: `Delete id [contacts]`","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"  - Example: `Delete 2 [12345678]`","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"* To delete groups for a project:","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"  - Command: `Delete id [name]`","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"  - Example: `Delete 2 [name]`","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"### Show Graph","lastModifiedDate":"2023-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"* Display all users in a tree diagram:","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"  - Command: `show linkTree`","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"  - Example: `show tree [team id]`","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"## Advanced Features","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"### Importing/Exporting Contacts","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"- Details coming soon...","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"### Creating Groups","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"- Details coming soon...","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"## Troubleshooting","lastModifiedDate":"2023-09-27"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"- Details coming soon...","lastModifiedDate":"2023-09-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"## FAQs","lastModifiedDate":"2023-09-27"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"- Details coming soon...","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"## Support","lastModifiedDate":"2023-09-27"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"- Details coming soon...","lastModifiedDate":"2023-09-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"StevenLiudw"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running it again.","lastModifiedDate":"2023-09-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"StevenLiudw"},"content":"- Details coming soon...","lastModifiedDate":"2023-09-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"StevenLiudw":63,"-":57}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eLinkTree\u003c/a\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"StevenLiudw":1,"-":65}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"# **LinkTree**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"**LinkTree is the top contact solution for software professionals.** Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"* If you are interested in using LinkTree, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"* If you are interested about developing LinkTree, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JizhuoChen":4,"-":17}},{"path":"docs/team/adhigop13.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"  title: \"Adhitya\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"### Project: LinkTree","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    * Transform the form of our previous User Guide draft and upload into github","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"  * Contributed to forum discussions to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"  * Reported bugs and suggestions for other teams in the class to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"  * Some parts of the history feature I added was adopted by several other classmates to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":" to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"adhigop13":35}},{"path":"docs/team/erohsikivar.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"erohsikivar"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"erohsikivar"},"content":"  title: \"Ravi Kishore\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"erohsikivar"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"### Project: LinkTree","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"erohsikivar"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"erohsikivar"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"    * Transform the form of our previous User Guide draft and upload into github","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"    to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"erohsikivar"},"content":"  * Contributed to forum discussions to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"erohsikivar"},"content":"  * Reported bugs and suggestions for other teams in the class to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"erohsikivar"},"content":"  * Some parts of the history feature I added was adopted by several other classmates to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"erohsikivar"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"erohsikivar"},"content":" to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"erohsikivar":36}},{"path":"docs/team/jizhuochen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"  title: \"Chen Jizhuo\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"### Project: LinkTree","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"        * Transform the form of our previous User Guide draft and upload into github","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"      to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    * Contributed to forum discussions to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"    * Reported bugs and suggestions for other teams in the class to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    * Some parts of the history feature I added was adopted by several other classmates to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"  to be added soon","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"JizhuoChen":34}},{"path":"docs/team/stevenliudw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"  layout: default.md","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"  title: \"Liu Diwen\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"### Project: LinkTree","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"  * User Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    * Transform the form of our previous User Guide draft and upload into github","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"* **Community**:","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"  * Contributed to forum discussions to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"  * Reported bugs and suggestions for other teams in the class to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"  * Some parts of the history feature I added was adopted by several other classmates to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"* **Tools**:","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":" to be added soon","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"StevenLiudw":36}},{"path":"docs/team/tang-moyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"  layout: default.md","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"  title: \"Tang Moyan\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"### Project: LinkTree","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"LinkTree is the top contact solution for software professionals. ","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"Using our unique tag-based system, access contacts by roles and responsibilities instantly.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"With LinkTree, swiftly connect with the right stakeholder, ","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Tang-Moyan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Tang-Moyan"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Tang-Moyan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Tang-Moyan"},"content":"    * User Guide:","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":"        * Transform the form of our previous User Guide draft and upload into github","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"      to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"* **Community**:","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Tang-Moyan"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Tang-Moyan"},"content":"    * Contributed to forum discussions to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Tang-Moyan"},"content":"    * Reported bugs and suggestions for other teams in the class to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"    * Some parts of the history feature I added was adopted by several other classmates to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"  to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Tang-Moyan":38}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Team;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing LinkTree ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"JizhuoChen"},"content":"        return new ModelManager(initialData, userPrefs, new ArrayList\u003cTeam\u003e());","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JizhuoChen":4,"-":184}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"            + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"            + PREFIX_REMARK + \"likes to swim\"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":3,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":"        model.clearAddressBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tang-Moyan":1,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"JizhuoChen"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"JizhuoChen"},"content":"        private Remark remark;","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"JizhuoChen"},"content":"            setRemark((toCopy.remark));","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"JizhuoChen"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"JizhuoChen"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"JizhuoChen"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":205,"author":{"gitId":"JizhuoChen"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"JizhuoChen"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":241,"author":{"gitId":"JizhuoChen"},"content":"                    \u0026\u0026 Objects.equals(remark, otherEditPersonDescriptor.remark)","lastModifiedDate":"2023-10-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":252,"author":{"gitId":"JizhuoChen"},"content":"                    .add(\"remark\", remark)","lastModifiedDate":"2023-10-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"JizhuoChen":17,"-":240}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"(Opened help window.)\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"            + \"Command summary: \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"            + \"  add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":3,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"import java.util.List;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"    private final Index index;","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"        model.updateFilteredPersonList(model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"        // short circuit if same object","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"            return true;","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"            return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"        // state check","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"JizhuoChen"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"JizhuoChen"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"JizhuoChen"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"JizhuoChen"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"JizhuoChen":88,"erohsikivar":4}},{"path":"src/main/java/seedu/address/logic/commands/WelcomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"public class WelcomeCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    public static final String COMMAND_WORD \u003d \"Hi\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"        String strDate \u003d formatter.format(date);","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        String welcomeMessage \u003d \"Welcome from Linktree, Current date and time: \" + strDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        return new CommandResult(welcomeMessage);","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"StevenLiudw":19,"Tang-Moyan":4}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"                        PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        String optionalRemark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"        Person person;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"        if (optionalRemark !\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"            Remark remark \u003d ParserUtil.parseRemark(optionalRemark);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"            person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"            person \u003d new Person(name, phone, email, address, new Remark(\"\"), tagList);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"JizhuoChen":12,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.logic.commands.WelcomeCommand;","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"        case WelcomeCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"            return new WelcomeCommand();","lastModifiedDate":"2023-09-27"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":4,"StevenLiudw":4,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"        List\u003cPrefixPosition\u003e resultList \u003d Arrays.stream(prefixes)","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"        System.out.println(resultList);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"        return resultList;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"JizhuoChen":3,"-":147}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JizhuoChen":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"                        PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JizhuoChen":6,"-":84}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"     * Parses a {@code String remark} into an {@code remark}.","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"JizhuoChen"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"JizhuoChen"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"JizhuoChen"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"JizhuoChen"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"JizhuoChen"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JizhuoChen":16,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"        Index index;","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"JizhuoChen":36,"erohsikivar":1}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"//import java.util.TreeMap;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.Team;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.UniqueTeamList;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":"    private final UniqueTeamList teams;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"        teams \u003d new UniqueTeamList();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"Tang-Moyan"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied, List\u003cTeam\u003e teamStructure) {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"        resetData(toBeCopied, teamStructure);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeamsStructure(List\u003cTeam\u003e teams) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Tang-Moyan"},"content":"        this.teams.setTeams(teams);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Tang-Moyan"},"content":"     * Clears all existing data in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"Tang-Moyan"},"content":"    public void clear() {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"        AddressBook empty \u003d new AddressBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Tang-Moyan"},"content":"        setPersons(empty.getPersonList());","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Tang-Moyan"},"content":"        setTeamsStructure(empty.getTeamList());","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"Tang-Moyan"},"content":"    public void resetData(ReadOnlyAddressBook newData, List\u003cTeam\u003e newStructure) {","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(newStructure);","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":78,"author":{"gitId":"Tang-Moyan"},"content":"        setTeamsStructure(newStructure);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"Tang-Moyan"},"content":"    //// person-level operations-------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"Tang-Moyan"},"content":"    public Person getPersonByHashCode(int hash) {","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"Tang-Moyan"},"content":"        return persons.getPersonByHashCode(hash);","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"Tang-Moyan"},"content":"    //// teams-level operations----------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"JizhuoChen"},"content":"     * @param team TODO(I added to pass checkstyle but im not sure what it is)","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"Tang-Moyan"},"content":"     * @return a boolean indicating whether there is any existing team in the teams of address book","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean hasTeam(Team team) {","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(team);","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"Tang-Moyan"},"content":"        return teams.contains(team);","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"Tang-Moyan"},"content":"     * Adds a team to the team structure.","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"Tang-Moyan"},"content":"     * The team must not already exist in the teams of address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"Tang-Moyan"},"content":"    public void addTeam(Team t) {","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"Tang-Moyan"},"content":"        teams.add(t);","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"Tang-Moyan"},"content":"     * Removes {@code key} from team structure.","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"Tang-Moyan"},"content":"     * {@code key} must exist in the teams of address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"Tang-Moyan"},"content":"    public void removeTeam(Team key) {","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"Tang-Moyan"},"content":"        teams.remove(key);","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"Tang-Moyan"},"content":"     * Replaces the given team {@code target} in the list with {@code editedTeam}.","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"Tang-Moyan"},"content":"     * {@code target} must exist in the teams of address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"Tang-Moyan"},"content":"     * The team identity of {@code editedTeam} must not be the same as another existing Team in the","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"Tang-Moyan"},"content":"     * teams of address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeam(Team target, Team editedTeam) {","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(editedTeam);","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"Tang-Moyan"},"content":"        teams.setTeam(target, editedTeam);","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":181,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"Tang-Moyan"},"content":"    public ObservableList\u003cTeam\u003e getTeamList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"Tang-Moyan"},"content":"        return teams.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":199,"author":{"gitId":"Tang-Moyan"},"content":"        return persons.equals(otherAddressBook.persons) \u0026\u0026 teams.equals(otherAddressBook.teams);","lastModifiedDate":"2023-10-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":203,"author":{"gitId":"Tang-Moyan"},"content":"    //todo: see if we need to incorporate the hash code of teams","lastModifiedDate":"2023-10-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"Tang-Moyan"},"content":"        //return persons.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"Tang-Moyan"},"content":"        return Objects.hash(persons, teams);","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JizhuoChen":4,"Tang-Moyan":82,"-":124}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.Team;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"Tang-Moyan"},"content":"    Predicate\u003cTeam\u003e PREDICATE_SHOW_ALL_TEAMS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"Tang-Moyan"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook, List\u003cTeam\u003e teamStructure);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Tang-Moyan"},"content":"    void clearAddressBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"    //Person related function----------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Tang-Moyan"},"content":"    ","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"Tang-Moyan"},"content":"    ","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"Tang-Moyan"},"content":"    //Team related functions-----------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Tang-Moyan"},"content":"     * Returns true if a Team with the same identity as {@code Team} exists in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Tang-Moyan"},"content":"    boolean hasTeam(Team team);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"Tang-Moyan"},"content":"     * Deletes the given Team.","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Tang-Moyan"},"content":"     * The Team must exist in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"Tang-Moyan"},"content":"    void deleteTeam(Team target);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"Tang-Moyan"},"content":"     * Adds the given Team.","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"Tang-Moyan"},"content":"     * {@code Team} must not already exist in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"Tang-Moyan"},"content":"    void addTeam(Team team);","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"Tang-Moyan"},"content":"     * Replaces the given Team {@code target} with {@code editedTeam}.","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"Tang-Moyan"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"Tang-Moyan"},"content":"     * The Team identity of {@code editedTeam} must not be the same as another existing Team in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Tang-Moyan"},"content":"    void setTeam(Team target, Team editedTeam);","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"Tang-Moyan"},"content":"    /** Returns an unmodifiable view of the filtered Team list */","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"Tang-Moyan"},"content":"    ObservableList\u003cTeam\u003e getFilteredTeamList();","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"Tang-Moyan"},"content":"     * Updates the filter of the filtered Team list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"Tang-Moyan"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"Tang-Moyan"},"content":"    void updateFilteredTeamList(Predicate\u003cTeam\u003e predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Tang-Moyan":43,"-":86}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.Team;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"    private final FilteredList\u003cTeam\u003e filteredTeams;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"Tang-Moyan"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, List\u003cTeam\u003e teamStructure) {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"        this.addressBook \u003d new AddressBook(addressBook, teamStructure);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"        filteredTeams \u003d new FilteredList\u003c\u003e(this.addressBook.getTeamList());","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"     * Constructor for ModelManager","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"Tang-Moyan"},"content":"        this.addressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Tang-Moyan"},"content":"        this.userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Tang-Moyan"},"content":"        filteredTeams \u003d new FilteredList\u003c\u003e(this.addressBook.getTeamList());","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"Tang-Moyan"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook, List\u003cTeam\u003e teamStructure) {","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"Tang-Moyan"},"content":"        this.addressBook.resetData(addressBook, teamStructure);","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"Tang-Moyan"},"content":"    public void clearAddressBook() {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"Tang-Moyan"},"content":"        this.addressBook.clear();","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"Tang-Moyan"},"content":"    // Person related functions-------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"Tang-Moyan"},"content":"    // Team related functions-------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean hasTeam(Team team) {","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(team);","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"Tang-Moyan"},"content":"        return addressBook.hasTeam(team);","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"Tang-Moyan"},"content":"    public void deleteTeam(Team target) {","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"Tang-Moyan"},"content":"        addressBook.removeTeam(target);","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"Tang-Moyan"},"content":"    public void addTeam(Team Team) {","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"Tang-Moyan"},"content":"        addressBook.addTeam(Team);","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"Tang-Moyan"},"content":"        updateFilteredTeamList(PREDICATE_SHOW_ALL_TEAMS);","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeam(Team target, Team editedTeam) {","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"Tang-Moyan"},"content":"        requireAllNonNull(target, editedTeam);","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"Tang-Moyan"},"content":"        addressBook.setTeam(target, editedTeam);","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"Tang-Moyan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Team List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"Tang-Moyan"},"content":"     * Returns an unmodifiable view of the list of {@code Team} backed by the internal list of","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"Tang-Moyan"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"Tang-Moyan"},"content":"    public ObservableList\u003cTeam\u003e getFilteredTeamList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"Tang-Moyan"},"content":"        return filteredTeams;","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"Tang-Moyan"},"content":"    public void updateFilteredTeamList(Predicate\u003cTeam\u003e predicate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"Tang-Moyan"},"content":"        filteredTeams.setPredicate(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":202,"author":{"gitId":"Tang-Moyan"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"Tang-Moyan"},"content":"                \u0026\u0026 filteredTeams.equals(otherModelManager.filteredTeams);","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JizhuoChen":3,"Tang-Moyan":61,"-":142}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.Team;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"Tang-Moyan"},"content":"    ObservableList\u003cTeam\u003e getTeamList();","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tang-Moyan":2,"-":17}},{"path":"src/main/java/seedu/address/model/person/Developer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":" * Represents a Developer in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" * Inherits from the Person class.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"public class Developer extends Person {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Developer instance.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"     * @param name    The name of the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"     * @param phone   The phone number of the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     * @param email   The email of the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * @param address The address of the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     * @param remark  Any remarks related to the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     * @param tags    Any tags associated with the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    public Developer(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        super(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"StevenLiudw":26}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"        return remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"                \u0026\u0026 remark.equals(otherPerson.remark)","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"JizhuoChen"},"content":"        return Objects.hash(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"JizhuoChen"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":10,"-":114}},{"path":"src/main/java/seedu/address/model/person/ProjectManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" * Represents a Project Manager in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" * A Project Manager manages multiple teams.","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" * Inherits from the Person class.","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class ProjectManager extends Person {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    private final ArrayList\u003cTeam\u003e teams;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new ProjectManager instance.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     * @param name    The name of the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     * @param phone   The phone number of the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     * @param email   The email of the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     * @param address The address of the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     * @param remark  Any remarks related to the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     * @param tags    Any tags associated with the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    public ProjectManager(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        super(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        this.teams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     * Adds a team under this project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     * @param team The team to be added.","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    public void addTeam(Team team) {","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"        this.teams.add(team);","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the list of teams managed by this project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * @return A list of teams.","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    public List\u003cTeam\u003e getTeams() {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"        return teams;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"StevenLiudw":50}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"public class Remark {","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remark can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"     * The first character of the remark must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    public final String value;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"     * Instantiates a new Remark.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"     * @param remark the remark","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"        value \u003d remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"    public String toString() {","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"        return value;","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"JizhuoChen":47,"erohsikivar":5}},{"path":"src/main/java/seedu/address/model/person/Team.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":" * Represents a Team in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":" * An instance of Team consists of a TeamLeader and multiple Developers.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"public class Team {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Tang-Moyan"},"content":"    private final int leaderHashCode;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    private String teamName \u003d \"unassigned\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":"    //todo: set will ignore duplicated values, do we need to notify the user that he added a duplicate value or not?","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Tang-Moyan"},"content":"    //use the hash code for representing each developer. The hash code will be updated when there is a change","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"    //to the developer\u0027s information.","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"    private final List\u003cInteger\u003e developerHashCodes;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Team instance with the specified TeamLeader.","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     * @param leader The leader of the team.","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    public Team(TeamLeader leader) {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"        this.leaderHashCode \u003d leader.hashCode();","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"        this.developerHashCodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Tang-Moyan"},"content":"     * Constructs a new Team instance with the specified TeamLeader and team name.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Tang-Moyan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Tang-Moyan"},"content":"     * @param leader The leader of the team.","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"     * @param teamName The name of the team.","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Tang-Moyan"},"content":"    public Team(TeamLeader leader, String teamName) {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Tang-Moyan"},"content":"        this.leaderHashCode \u003d leader.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Tang-Moyan"},"content":"        this.developerHashCodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean hasDeveloper(int developerHashCode) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Tang-Moyan"},"content":"        return this.developerHashCodes.contains(developerHashCode);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Tang-Moyan"},"content":"     * Adds a Developer to the team.","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Tang-Moyan"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"     * @param developerHashCode The developer hash code to be added.","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Tang-Moyan"},"content":"    public void addDeveloper(int developerHashCode) {","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Tang-Moyan"},"content":"        if (hasDeveloper(developerHashCode)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Tang-Moyan"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Tang-Moyan"},"content":"            this.developerHashCodes.add(developerHashCode);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Tang-Moyan"},"content":"     * Adds a Developer to the team.","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Tang-Moyan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Tang-Moyan"},"content":"     * @param developer The developer to be added.","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Tang-Moyan"},"content":"    public void addDeveloper(Developer developer) {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Tang-Moyan"},"content":"        addDeveloper(developer.hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"Tang-Moyan"},"content":"     * Removes a Developer to the team.","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"Tang-Moyan"},"content":"     * @param developerHashCode The developer to be removed.","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"Tang-Moyan"},"content":"    public void removeDeveloper(int developerHashCode) {","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"Tang-Moyan"},"content":"        if (hasDeveloper(developerHashCode)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"Tang-Moyan"},"content":"            this.developerHashCodes.remove(developerHashCode);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"Tang-Moyan"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"Tang-Moyan"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the TeamLeader of the team.","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"     * @return The TeamLeader of the team.","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"Tang-Moyan"},"content":"    public int getLeaderHashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"Tang-Moyan"},"content":"        return leaderHashCode;","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean isSameTeam(Team team) {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"Tang-Moyan"},"content":"        //return hasSameTeamName(team) \u0026\u0026 hasSameTeamLeader(team) \u0026\u0026 hasSameDevelopers(team);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Tang-Moyan"},"content":"        return hasSameTeamName(team);","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean hasSameTeamLeader(Team team) {","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"Tang-Moyan"},"content":"        requireAllNonNull(team);","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"Tang-Moyan"},"content":"        return leaderHashCode \u003d\u003d team.getLeaderHashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean hasSameDevelopers(Team team) {","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"Tang-Moyan"},"content":"        requireAllNonNull(team);","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Tang-Moyan"},"content":"        //todo: fix this warning","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Tang-Moyan"},"content":"        return developerHashCodes.equals(team.getLeaderHashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean hasSameTeamName(Team team) {","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"Tang-Moyan"},"content":"        return this.teamName.equals(team.getTeamName());","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"Tang-Moyan"},"content":"     * Retrieves the Set of Developers in the team.","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"Tang-Moyan"},"content":"     * @return A Set of Developers.","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"Tang-Moyan"},"content":"    public List\u003cInteger\u003e getDevelopers() {","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"Tang-Moyan"},"content":"        return developerHashCodes;","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeamName(String teamName) {","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"Tang-Moyan"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"Tang-Moyan"},"content":"    public String getTeamName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"Tang-Moyan"},"content":"        return teamName;","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"Tang-Moyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"Tang-Moyan"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":147,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"Tang-Moyan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"Tang-Moyan"},"content":"        if (!(other instanceof Team)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"Tang-Moyan"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"Tang-Moyan"},"content":"        Team otherTeam \u003d (Team) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"Tang-Moyan"},"content":"        return isSameTeam(otherTeam);","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"JizhuoChen":2,"StevenLiudw":34,"Tang-Moyan":122}},{"path":"src/main/java/seedu/address/model/person/TeamLeader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":" * Represents a TeamLeader in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" * A TeamLeader is a specialized person who leads a team.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"public class TeamLeader extends Person {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new TeamLeader instance.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"     * @param name The name of the TeamLeader.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"     * @param phone The phone number of the TeamLeader.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     * @param email The email address of the TeamLeader.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * @param address The address of the TeamLeader.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     * @param remark Any remarks associated with the TeamLeader.","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     * @param tags Tags associated with the TeamLeader.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    public TeamLeader(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        super(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"StevenLiudw":26}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"Tang-Moyan"},"content":"    //todo: more data protection. Maybe have two functions. One for displaying and one for editing.","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"Tang-Moyan"},"content":"    public Person getPersonByHashCode(int targetHashCode) {","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"Tang-Moyan"},"content":"        Person foundPerson \u003d null;","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"Tang-Moyan"},"content":"        for (Person p : internalList) {","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"Tang-Moyan"},"content":"            if (p.hashCode() \u003d\u003d targetHashCode) {","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"Tang-Moyan"},"content":"                foundPerson \u003d p;","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"Tang-Moyan"},"content":"                break;","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"Tang-Moyan"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"Tang-Moyan"},"content":"        if (foundPerson !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"Tang-Moyan"},"content":"            return foundPerson;","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"Tang-Moyan"},"content":"        } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"Tang-Moyan"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tang-Moyan":18,"-":150}},{"path":"src/main/java/seedu/address/model/person/UniqueTeamList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.Team;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.exceptions.DuplicateTeamException;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.exceptions.TeamNotFoundException;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Tang-Moyan"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Tang-Moyan"},"content":" * A list of Teams that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":" * A team is considered unique by comparing using {@code Team#isSameTeam(Team)}. As such, adding and updating of","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Tang-Moyan"},"content":" * Teams uses Team#isSameTeam(Team) for equality so as to ensure that the Team being added or updated is","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Tang-Moyan"},"content":" * unique in terms of identity in the UniqueTeamList. However, the removal of a Team uses Team#equals(Object) so","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Tang-Moyan"},"content":" * as to ensure that the Team with exactly the same fields will be removed.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Tang-Moyan"},"content":" *","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Tang-Moyan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":" *","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Tang-Moyan"},"content":" * @see Team#isSameTeam(Team)","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"public class UniqueTeamList implements Iterable\u003cTeam\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"    private final ObservableList\u003cTeam\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Tang-Moyan"},"content":"    private final ObservableList\u003cTeam\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Tang-Moyan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"     * Returns true if the list contains an equivalent Team as the given argument.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean contains(Team toCheck) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Tang-Moyan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTeam);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Tang-Moyan"},"content":"     * Adds a Team to the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"     * The Team must not already exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Tang-Moyan"},"content":"    public void add(Team toAdd) {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Tang-Moyan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"            throw new DuplicateTeamException();","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Tang-Moyan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Tang-Moyan"},"content":"     * Replaces the Team {@code target} in the list with {@code editedTeam}.","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Tang-Moyan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Tang-Moyan"},"content":"     * The Team identity of {@code editedTeam} must not be the same as another existing Team in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeam(Team target, Team editedTeam) {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"        requireAllNonNull(target, editedTeam);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Tang-Moyan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Tang-Moyan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Tang-Moyan"},"content":"            throw new TeamNotFoundException();","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Tang-Moyan"},"content":"        if (!target.isSameTeam(editedTeam) \u0026\u0026 contains(editedTeam)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Tang-Moyan"},"content":"            throw new DuplicateTeamException();","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Tang-Moyan"},"content":"        internalList.set(index, editedTeam);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Tang-Moyan"},"content":"     * Removes the equivalent Team from the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Tang-Moyan"},"content":"     * The Team must exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Tang-Moyan"},"content":"    public void remove(Team toRemove) {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Tang-Moyan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Tang-Moyan"},"content":"            throw new TeamNotFoundException();","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeams(UniqueTeamList replacement) {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"Tang-Moyan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"Tang-Moyan"},"content":"     * Replaces the contents of this list with {@code Teams}.","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"Tang-Moyan"},"content":"     * {@code Teams} must not contain duplicate Teams.","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeams(List\u003cTeam\u003e Teams) {","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"Tang-Moyan"},"content":"        requireAllNonNull(Teams);","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Tang-Moyan"},"content":"        if (!TeamsAreUnique(Teams)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Tang-Moyan"},"content":"            throw new DuplicateTeamException();","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Tang-Moyan"},"content":"        internalList.setAll(Teams);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Tang-Moyan"},"content":"    //todo: more data protection. Maybe have two functions. One for displaying and one for editing.","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"Tang-Moyan"},"content":"    public Team getTeamByName(String name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"Tang-Moyan"},"content":"        Team foundTeam \u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Tang-Moyan"},"content":"        for (Team t : internalList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Tang-Moyan"},"content":"            if (t.getTeamName().equals(name)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"Tang-Moyan"},"content":"                foundTeam \u003d t;","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"Tang-Moyan"},"content":"                break;","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"Tang-Moyan"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"Tang-Moyan"},"content":"        if (foundTeam !\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"Tang-Moyan"},"content":"            return foundTeam;","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"Tang-Moyan"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"Tang-Moyan"},"content":"            throw new TeamNotFoundException();","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"Tang-Moyan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"Tang-Moyan"},"content":"    public ObservableList\u003cTeam\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"Tang-Moyan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"Tang-Moyan"},"content":"    public Iterator\u003cTeam\u003e iterator() {","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"Tang-Moyan"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"Tang-Moyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"Tang-Moyan"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"Tang-Moyan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"Tang-Moyan"},"content":"        if (!(other instanceof UniqueTeamList)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"Tang-Moyan"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"Tang-Moyan"},"content":"        UniqueTeamList otherUniqueTeamList \u003d (UniqueTeamList) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"Tang-Moyan"},"content":"        return internalList.equals(otherUniqueTeamList.internalList);","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"Tang-Moyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"Tang-Moyan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"Tang-Moyan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"Tang-Moyan"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"Tang-Moyan"},"content":"     * Returns true if {@code Teams} contains only unique Teams.","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"Tang-Moyan"},"content":"    private boolean TeamsAreUnique(List\u003cTeam\u003e Teams) {","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"Tang-Moyan"},"content":"        for (int i \u003d 0; i \u003c Teams.size() - 1; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"Tang-Moyan"},"content":"            for (int j \u003d i + 1; j \u003c Teams.size(); j++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"Tang-Moyan"},"content":"                if (Teams.get(i).isSameTeam(Teams.get(j))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"Tang-Moyan"},"content":"                    return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"Tang-Moyan"},"content":"                }","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"Tang-Moyan"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"Tang-Moyan"},"content":"        return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"Tang-Moyan"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Tang-Moyan":172}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateTeamException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":" * Signals that the operation will result in duplicate Teams (Teams are considered duplicates if they have the same","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":" * team name).","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"public class DuplicateTeamException extends RuntimeException{","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"    public DuplicateTeamException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Tang-Moyan":11}},{"path":"src/main/java/seedu/address/model/person/exceptions/TeamNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":" * Signals that the operation is unable to find the specified team.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"public class TeamNotFoundException  extends RuntimeException {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Tang-Moyan":7}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    //public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9]+\";","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":1,"-":62}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"JizhuoChen":10,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    private final String remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"            @JsonProperty(\"remark\") String remark, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"JizhuoChen"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"JizhuoChen"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"JizhuoChen"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"JizhuoChen"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JizhuoChen":11,"-":107}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"    private Label remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"JizhuoChen":3,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JizhuoChen":1,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"JizhuoChen":2,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"JizhuoChen":40}},{"path":"src/test/java/seedu/address/logic/commands/WelcomeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Date;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class WelcomeCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    public void execute_welcomeMessageGenerated_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        // Create a new WelcomeCommand and execute it","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"        WelcomeCommand welcomeCommand \u003d new WelcomeCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        Model model \u003d new ModelManager(); // Assuming a no-arg constructor exists for ModelManager","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        CommandResult result \u003d welcomeCommand.execute(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        // Generate expected welcome message","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        String strDate \u003d formatter.format(date);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        String expectedMessage \u003d \"Welcome from Linktree, Current date and time: \" + strDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        // Assert that the welcome message is as expected","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"StevenLiudw":32}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"JizhuoChen"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"JizhuoChen"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"JizhuoChen"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"JizhuoChen"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JizhuoChen":11,"-":101}},{"path":"src/test/java/seedu/address/model/person/DeveloperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"public class DeveloperTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"        Developer aliceDeveloper \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"                new Developer(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"        Developer bobDeveloper \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"                new Developer(BOB.getName(), BOB.getPhone(), BOB.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"                        BOB.getAddress(), BOB.getRemark(), BOB.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceDeveloper.equals(aliceDeveloper));","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        // different developers -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(!aliceDeveloper.equals(bobDeveloper));","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"StevenLiudw":26}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"JizhuoChen"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-08"},{"lineNumber":97,"author":{"gitId":"JizhuoChen"},"content":"                + \", remark\u003d\" + ALICE.getRemark() + \"}\";","lastModifiedDate":"2023-10-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"JizhuoChen":2,"-":98}},{"path":"src/test/java/seedu/address/model/person/ProjectManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"public class ProjectManagerTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"    public void constructor_validParameters_createsProjectManager() {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"        ProjectManager aliceManager \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"                new ProjectManager(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceManager !\u003d null);","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        ProjectManager aliceManager \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"                new ProjectManager(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceManager.equals(aliceManager));","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        ProjectManager bobManager \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"                new ProjectManager(BOB.getName(), BOB.getPhone(), BOB.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"                        BOB.getAddress(), BOB.getRemark(), BOB.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(aliceManager.equals(bobManager));","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    public void addTeam_addSingleTeam_successful() {","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"        ProjectManager aliceManager \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"                new ProjectManager(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"        TeamLeader aliceLeader \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"                new TeamLeader(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"        Team aliceTeam \u003d new Team(aliceLeader);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        aliceManager.addTeam(aliceTeam);","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceManager.getTeams().contains(aliceTeam));","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"StevenLiudw":51}},{"path":"src/test/java/seedu/address/model/person/TeamLeaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"public class TeamLeaderTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"        TeamLeader aliceLeader \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"                new TeamLeader(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"                ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"        TeamLeader bobLeader \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"                new TeamLeader(BOB.getName(), BOB.getPhone(), BOB.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"                        BOB.getAddress(), BOB.getRemark(), BOB.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceLeader.equals(aliceLeader));","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        // different team leaders -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(!aliceLeader.equals(bobLeader));","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"StevenLiudw":26}},{"path":"src/test/java/seedu/address/model/person/TeamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"public class TeamTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"    public void constructor_validParameters_createsTeam() {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"        TeamLeader aliceLeader \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"                new TeamLeader(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        Team aliceTeam \u003d new Team(aliceLeader);","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceTeam !\u003d null);","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"        TeamLeader aliceLeader \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"                new TeamLeader(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        Team aliceTeam \u003d new Team(aliceLeader);","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceTeam.equals(aliceTeam));","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        TeamLeader bobLeader \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"                new TeamLeader(BOB.getName(), BOB.getPhone(), BOB.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"                        BOB.getAddress(), BOB.getRemark(), BOB.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        Team bobTeam \u003d new Team(bobLeader);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(aliceTeam.equals(bobTeam));","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    public void addDeveloper_addSingleDeveloper_successful() {","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"        TeamLeader aliceLeader \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"                new TeamLeader(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"        Team aliceTeam \u003d new Team(aliceLeader);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"        Developer bobDeveloper \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"                new Developer(BOB.getName(), BOB.getPhone(), BOB.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"                        BOB.getAddress(), BOB.getRemark(), BOB.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        aliceTeam.addDeveloper(bobDeveloper);","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"Tang-Moyan"},"content":"        assertTrue(aliceTeam.getDevelopers().contains(bobDeveloper.hashCode()));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"StevenLiudw":54,"Tang-Moyan":1}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"erohsikivar"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"erohsikivar"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"JizhuoChen"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"JizhuoChen"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"JizhuoChen"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, invalidTags);","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JizhuoChen":12,"erohsikivar":2,"-":101}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"JizhuoChen"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"        return new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"JizhuoChen":13,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"JizhuoChen":3,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"            .withRemark(\"She likes aardvarks.\")","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"            .withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"JizhuoChen":4,"-":75}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W11-4/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"* Link Tree.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"  * LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"* The project simulates an ongoing software project for a desktop application (called LinkTree) used for managing contact details.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"StevenLiudw":5,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"    implementation \u0027org.jetbrains:annotations:24.0.0\u0027","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"    implementation \u0027org.jetbrains:annotations:24.0.0\u0027","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"//    testImplementation \u0027org.testfx:testfx-core:4.0.16-alpha\u0027","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"//    testImplementation \u0027org.testfx:testfx-junit5:4.0.16-alpha\u0027","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"    archiveFileName \u003d \u0027addressbook_1.3.jar\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"erohsikivar"},"content":"run {","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"erohsikivar"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JizhuoChen":4,"erohsikivar":2,"Tang-Moyan":2,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"You can reach us at the email `linktreeltd@gmail.com`","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"### Liu Diwen","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"\u003cimg src\u003d\"images/stevenliudw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"[[github](https://github.com/stevenliudw)]","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"[[portfolio](team/stevenliudw.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"### Chen Jizhuo","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"\u003cimg src\u003d\"images/jizhuochen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"[[github](http://github.com/jizhuochen)]","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"[[portfolio](team/jizhuochen.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"* Role: Developer","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"### Adhitya Gopal","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"\u003cimg src\u003d\"images/adhigop13.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"[[github](http://github.com/adhigop13)] ","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"[[portfolio](team/adhigop13.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"### Kishore","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"\u003cimg src\u003d\"images/erohsikivar.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"[[github](http://github.com/erohsikivar)]","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"[[portfolio](team/erohsikivar.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"### Tang Moyan","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"\u003cimg src\u003d\"images/tang-moyan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"[[github](http://github.com/Tang-Moyan)]","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"[[portfolio](team/Tang-Moyan.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"StevenLiudw":23,"-":38}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"# LinkTree Developer Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"![UI Class Diagram](images/UML_images/UiDiagram.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, ","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"`StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures ","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"JizhuoChen"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"[`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands, and it also ","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"displays the statistical information of how many developers and teams are there at the moment.","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"JizhuoChen"},"content":"* depends on some classes in the `Model` component, as it displays `Person` and `Team` object residing in the `Model`.","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"Tang-Moyan"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-W11-4/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Tang-Moyan"},"content":"![Logic Class Diagram](images/UML_images/LogicClassDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"Tang-Moyan"},"content":"The display in UI is depended on the `CommandResult` returned by Logic component. ","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"Tang-Moyan"},"content":"For example, UI will have a **new window** for displaying \"LinkTree\" if command","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"Tang-Moyan"},"content":"`Tree` is received by the Logic component.","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"Tang-Moyan"},"content":"![Delete Sequence Diagram](images/UML_images/DeleteSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"Tang-Moyan"},"content":"![Parser Class Image](images/UML_images/ParserClasses.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"erohsikivar"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"erohsikivar"},"content":"The `Model` component:","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"erohsikivar"},"content":"* stores the addressbook and teambook date i.e., all `Person` objects and `Team` objects (which are contained in a `UniquePersonList` and `UniqueTeamList` respectively).","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"erohsikivar"},"content":"* maintains a filtered list of `Person`, `Team` objects and stores the currently \u0027selected\u0027 `Person` or `Team` objects (eg., results of a search query) as a separate filtered list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` and `ObservableList\u003cTeam\u003e` that can be observed.","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"erohsikivar"},"content":"* stores a `UserPref` object that represents the user’s preferences. This part is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"erohsikivar"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, this means that model should make sense on their own without depending on other components).","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"StevenLiudw"},"content":"**API**: [`Storage.java`](https://github.com/AY2324S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"StevenLiudw"},"content":"![Storage UML Diagram](images/UML_images/StorageUML.jpg)  ","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"StevenLiudw"},"content":"The `Storage` component:","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"StevenLiudw"},"content":"- Can save address book data, user preference data, and team book data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"StevenLiudw"},"content":"- Inherits from `AddressBookStorage`, `UserPrefStorage`, and `TeamBookStorage`, which means it can be treated as any one of them (if only the functionality of one is needed).","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"StevenLiudw"},"content":"- Depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`).","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"adhigop13"},"content":"### Feature: Create a new team","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"adhigop13"},"content":"####  Introduction","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"adhigop13"},"content":"The create new team feature is facilitated by the AddTeamCommand. It extends `Command` class.","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"adhigop13"},"content":"The operations are exposed in the `Model` interface as `Model#addTeam()`.","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"adhigop13"},"content":"#### Usage","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"adhigop13"},"content":"Given below is an example usage scenario and how the add team behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"adhigop13"},"content":"Step 1. The user launches the application and uses the `newteam` command and specifies a `teamname` and `teamLeader` name.","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"adhigop13"},"content":"Step 2. The user executes the `newteam` command `newteam tn/Team1 tl/John` to create a new team `Team1` with `John` set as team leader.","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"adhigop13"},"content":"Step 3. LinkTree provides a feedback based on whether the operation was successful or not.","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"adhigop13"},"content":"**Note:** If a command fails its execution, it will not call `Model#addTeam()`, so the `team` will not be saved to `TeamBook`.","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"adhigop13"},"content":"#### Step-by-Step Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"adhigop13"},"content":"1. Create a newteam parser class called `AddTeamCommandParser` to parse input from user. This implements the `Parser` interface for type `AddTeamCommand`","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"adhigop13"},"content":"2. Create a `parse` method in `AddTeamCommandParser` that parses the user input and specify the user flags that are used `tn/` for teamName and `tl/` for teamLeader.","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"adhigop13"},"content":"3. The flags for user input can be added to class `CliSyntax`.","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"adhigop13"},"content":"4. For the `AddTeamCommand` class, specify the Command Word. In this case, it is `newteam`.","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"adhigop13"},"content":"5. Add relevant messages for use cases like `Duplicate team creation` and `Person not found error`.","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"adhigop13"},"content":"6. Implement the `execute` method in `AddTeamCommand`. Handle the cases where a team with specified `teamName` already exists and also one where specified `person` with given `teamLeaderName` does not exist.","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"adhigop13"},"content":"7. Use the `Model#addTeam` and `Model#containsPerson` to do these checks.","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"adhigop13"},"content":"8. Throw exception in the case where adding new team is not possible.","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"adhigop13"},"content":"9. If not such exception is thrown, create the new team at this point. ","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"adhigop13"},"content":"10. Run the `Model#addTeam` method to add the created team to TeamBook.","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"adhigop13"},"content":"11. `Model#addTeam` calls `TeamBook#addTeam` which in turn calls `UniqueTeamList#add`. Finally this method calls the `ObservableList#add` which adds the `team` to the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"adhigop13"},"content":"**Aspect: Where the team is stored:**","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"adhigop13"},"content":"* **Alternative 1 (current choice):** Store the teams in a separate class called UniqueTeamList.","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"adhigop13"},"content":"  * Pros: Better use of OOP.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"adhigop13"},"content":"  * Cons: Multiple layers of abstraction(through Model, TeamBook, UniqueTeamList).","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"adhigop13"},"content":"* **Alternative 2:** Store the teams in the same class as Persons in the class AddressBook.","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"adhigop13"},"content":"  * Pros: Easier implementation.","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"adhigop13"},"content":"  * Cons: Breaks principle of abstraction and OOP. Information hiding is also not done.","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"erohsikivar"},"content":"### Feature: Remove an existing Team","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"erohsikivar"},"content":"#### Introduction","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"erohsikivar"},"content":"Removing an existing team feature is facilitated by the `DeleteTeamCommand`. It extends the `Command` class. ","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"erohsikivar"},"content":"The operations are exposed in the `Model` interface as `Model#deleteTeam()`.","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"erohsikivar"},"content":"#### Usage","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"erohsikivar"},"content":"Given below is an example usage scenario and how the \"Remove an existing team\" feature behaves at each step.","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"erohsikivar"},"content":"##### Step 1","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"erohsikivar"},"content":"The user launches the application and uses the `deleteteam` command to specify the `teamname` they want to delete.","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"erohsikivar"},"content":"##### Step 2","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"erohsikivar"},"content":"The user executes the `deleteteam` command `deleteteam tn/Team1` to delete the team named `Team1`.","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"erohsikivar"},"content":"##### Step 3","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"erohsikivar"},"content":"LinkTree provides feedback based on whether the operation was successful or not.","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"erohsikivar"},"content":"**Note:** If a command fails its execution, it will not call `Model#deleteTeam()`, so the team will not be removed from `TeamBook`.","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"erohsikivar"},"content":"#### Step-by-Step Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"erohsikivar"},"content":"1. Create a `deleteteam` parser class called `DeleteTeamCommandParser` to parse input from the user. This class implements the `Parser` interface for the type `DeleteTeamCommand`.","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"erohsikivar"},"content":"2. Create a `parse` method in `DeleteTeamCommandParser` that parses the user input and specifies the user flag used for `teamName` (e.g., `tn/` for teamName).","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"erohsikivar"},"content":"3. Add the flag for user input to the `CliSyntax` class.","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"erohsikivar"},"content":"4. For the `DeleteTeamCommand` class, specify the Command Word, which is `deleteteam`.","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"erohsikivar"},"content":"5. Add relevant error messages for use cases like \"The team name provided is invalid\".","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"erohsikivar"},"content":"6. Implement the `execute` method in `DeleteTeamCommand`. Handle cases where a team with the specified `teamName` does not exist.","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"erohsikivar"},"content":"7. Use the `Model#deleteTeam` method to perform these checks.","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"erohsikivar"},"content":"8. Throw exceptions in the case where deleting the team is not possible.","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"erohsikivar"},"content":"9. If no such exception is thrown, proceed to delete the team.","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"erohsikivar"},"content":"10. Run the `Model#deleteTeam` method to remove the specified team from TeamBook.","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"erohsikivar"},"content":"11. `Model#deleteTeam` calls `TeamBook#removeTeamByName`, which in turn calls `UniqueTeamList#remove`. Finally, this method calls `ObservableList#remove` to remove the team from the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"erohsikivar"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"erohsikivar"},"content":"**Aspect: Where the teams are stored:**","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"erohsikivar"},"content":"- **Alternative 1 (current choice):** Store the teams in a separate class called `UniqueTeamList`.","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"erohsikivar"},"content":"    - Pros: Better use of object-oriented programming.","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"erohsikivar"},"content":"    - Cons: Multiple layers of abstraction (through Model, TeamBook, UniqueTeamList).","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"erohsikivar"},"content":"- **Alternative 2:** Store the teams in the same class as persons in the `AddressBook` class.","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"erohsikivar"},"content":"    - Pros: Easier implementation.","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"erohsikivar"},"content":"    - Cons: Breaks the principle of abstraction and object-oriented programming. Information hiding is also not maintained.","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":287,"author":{"gitId":"erohsikivar"},"content":"The choice between these alternatives depends on your specific project requirements and architectural preferences.","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"adhigop13"},"content":"* Project managers engaged in software projects at the startup/small level companies; ","lastModifiedDate":"2023-10-26"},{"lineNumber":316,"author":{"gitId":"erohsikivar"},"content":"* Collaborates frequently with multiple teams or departments; ","lastModifiedDate":"2023-10-05"},{"lineNumber":317,"author":{"gitId":"erohsikivar"},"content":"* Requires quick access to contact details of other team members based on their roles and responsibilities; ","lastModifiedDate":"2023-10-05"},{"lineNumber":318,"author":{"gitId":"erohsikivar"},"content":"* Prefers an organized and streamlined method for contact management; ","lastModifiedDate":"2023-10-05"},{"lineNumber":319,"author":{"gitId":"erohsikivar"},"content":"* Tech-savvy and open to adopting new tools for enhancing productivity.","lastModifiedDate":"2023-10-05"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"erohsikivar"},"content":"**Value proposition**: LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"erohsikivar"},"content":"| Priority | As a …          | I want to …                                                   | So that I can…​                                                           |","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"adhigop13"},"content":"|----------|-----------------|---------------------------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2023-10-26"},{"lineNumber":330,"author":{"gitId":"adhigop13"},"content":"| `* * *`  | project manager | view all members of my project                                | get their email address/contact                                           |","lastModifiedDate":"2023-10-26"},{"lineNumber":331,"author":{"gitId":"adhigop13"},"content":"| `* * *`  | project manager | search contacts using a tag-based system                      | swiftly find contacts relevant to specific responsibilities               |","lastModifiedDate":"2023-10-26"},{"lineNumber":332,"author":{"gitId":"adhigop13"},"content":"| `* * *`  | project manager | view the leader of any team                                   | contact him when I want to find out about the status of a task            |","lastModifiedDate":"2023-10-26"},{"lineNumber":333,"author":{"gitId":"adhigop13"},"content":"| `* *`    | project manager | edit or update my information                                 | easily update my info                                                     |","lastModifiedDate":"2023-10-26"},{"lineNumber":334,"author":{"gitId":"adhigop13"},"content":"| `* *`    | project manager | search contact with partial information                       | find the person without remembering their full name                       |","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"adhigop13"},"content":"| `* *`    | project manager | add a tag/short bio about every developer                     | I can know the specialities/traits of every developer                     |","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | project manager | access the names of all my developers                         | contact them regarding the project                                        |","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | project manager | view all my team leaders                                      | contact them when collaborating on developing a certain feature           |","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | project manager | assign a node for a team leader                               | target team leaders can fill in their information by themselves           |","lastModifiedDate":"2023-10-05"},{"lineNumber":339,"author":{"gitId":"StevenLiudw"},"content":"| `* * *`  | project manager | remove another user                                           | if he leaves the team/company                                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":340,"author":{"gitId":"adhigop13"},"content":"| `*`      | project manager | archive old contacts or groups                                | keep active list clutter-free while retaining old information             |","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"adhigop13"},"content":"| `*`      | project manager | get notifications on birthdays                                | maintain relationships through personal touches                           |","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"adhigop13"},"content":"| `*`      | project manager | create a public profile for my project                        | external stakeholders can find and reach out to the right member          |","lastModifiedDate":"2023-10-26"},{"lineNumber":343,"author":{"gitId":"adhigop13"},"content":"| `* * *`  | project manager | use a help command                                            | understand available functions of the app                                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":344,"author":{"gitId":"adhigop13"},"content":"| `* *`    | project manager | use a bye command                                             | close the app easily                                                      |","lastModifiedDate":"2023-10-26"},{"lineNumber":345,"author":{"gitId":"adhigop13"},"content":"| `*`      | project manager | receive request to change contact information                 | stay updated on team changes                                              |","lastModifiedDate":"2023-10-26"},{"lineNumber":346,"author":{"gitId":"adhigop13"},"content":"| `* * *`  | project manager | view my teams and all members in my organisation side by side | have a glance at the current structure of my organisation                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"adhigop13"},"content":"| `* * *`  | project manager | remove all the users and teams                                | create a new project with new team members.                               |","lastModifiedDate":"2023-10-26"},{"lineNumber":348,"author":{"gitId":"adhigop13"},"content":"| `* * *`  | project manager | create a new team                                             | reflect the changes done in actual project structure accurately           |","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"adhigop13"},"content":"| `* * *`  | project manager | add new developers after a team is created                    | reflect the growth in size of my teams                                    |","lastModifiedDate":"2023-10-26"},{"lineNumber":350,"author":{"gitId":"adhigop13"},"content":"| `* * *`  | project manager | remove developers from a team                                 | keep my information up to date when a developer shifts to another project |","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"adhigop13"},"content":"| `* * *`  | project manager | receive request to change contact information                 | stay updated on team changes                                              |","lastModifiedDate":"2023-10-26"},{"lineNumber":352,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"erohsikivar"},"content":"(For all use cases below, the **System** is the `LinkTree` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"adhigop13"},"content":"**Use case: View all members of my project**","lastModifiedDate":"2023-10-26"},{"lineNumber":361,"author":{"gitId":"adhigop13"},"content":"**Actor: Project Manager**","lastModifiedDate":"2023-10-26"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"adhigop13"},"content":"1. Project manager requests to list members.","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"erohsikivar"},"content":"2. LinkTree displays a list of team members.","lastModifiedDate":"2023-10-05"},{"lineNumber":367,"author":{"gitId":"adhigop13"},"content":"3. Project manager views the members\u0027 contact information.","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"adhigop13"},"content":"* 2a. The member list is empty.","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"adhigop13"},"content":"  * 2a1. LinkTree indicates there are no members currently.","lastModifiedDate":"2023-10-26"},{"lineNumber":375,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":377,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":379,"author":{"gitId":"adhigop13"},"content":"**Use case: Search for team leaders**","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"adhigop13"},"content":"**Actor: Project Manager **","lastModifiedDate":"2023-10-26"},{"lineNumber":381,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":384,"author":{"gitId":"adhigop13"},"content":"1. User wants to find team leader of a given team.","lastModifiedDate":"2023-10-26"},{"lineNumber":385,"author":{"gitId":"adhigop13"},"content":"2. User inputs the desired team name into LinkTree.","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"adhigop13"},"content":"3. LinkTree displays the name of the team leader.","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"StevenLiudw"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"adhigop13"},"content":"* 2a. No such team exists","lastModifiedDate":"2023-10-26"},{"lineNumber":393,"author":{"gitId":"adhigop13"},"content":"  * 2a1. LinkTree shows a message that no such team exists.","lastModifiedDate":"2023-10-26"},{"lineNumber":394,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"StevenLiudw"},"content":"**Use case: Access names of developers**","lastModifiedDate":"2023-10-05"},{"lineNumber":399,"author":{"gitId":"erohsikivar"},"content":"**Actor: Project Manager**","lastModifiedDate":"2023-10-05"},{"lineNumber":400,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":401,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":402,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":403,"author":{"gitId":"StevenLiudw"},"content":"1. Project manager requests a list of all developers.","lastModifiedDate":"2023-10-05"},{"lineNumber":404,"author":{"gitId":"adhigop13"},"content":"2. LinkTree displays the list of developers.","lastModifiedDate":"2023-10-26"},{"lineNumber":405,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":407,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":409,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":410,"author":{"gitId":"adhigop13"},"content":"**Use case: Edit or update information**","lastModifiedDate":"2023-10-26"},{"lineNumber":411,"author":{"gitId":"adhigop13"},"content":"**Actor: Project Manager**","lastModifiedDate":"2023-10-26"},{"lineNumber":412,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":413,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":414,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"adhigop13"},"content":"1. User wants to update the contact info of a developer.","lastModifiedDate":"2023-10-26"},{"lineNumber":416,"author":{"gitId":"adhigop13"},"content":"2. User provides the name of person and info to edit","lastModifiedDate":"2023-10-26"},{"lineNumber":417,"author":{"gitId":"adhigop13"},"content":"3. LinkTree confirms the updates.","lastModifiedDate":"2023-10-26"},{"lineNumber":418,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":419,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":420,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":421,"author":{"gitId":"adhigop13"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":422,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":423,"author":{"gitId":"adhigop13"},"content":"* 2a. No such person exists","lastModifiedDate":"2023-10-26"},{"lineNumber":424,"author":{"gitId":"adhigop13"},"content":"    * 2a1. LinkTree shows a message that no such person exists.","lastModifiedDate":"2023-10-26"},{"lineNumber":425,"author":{"gitId":"StevenLiudw"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":429,"author":{"gitId":"adhigop13"},"content":"**Use case: Change the team leader**","lastModifiedDate":"2023-10-26"},{"lineNumber":430,"author":{"gitId":"adhigop13"},"content":"**Actor: Project Manager**","lastModifiedDate":"2023-10-26"},{"lineNumber":431,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":433,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":434,"author":{"gitId":"adhigop13"},"content":"1. Project manager wants to change the team leader of a team.","lastModifiedDate":"2023-10-26"},{"lineNumber":435,"author":{"gitId":"adhigop13"},"content":"2. Project manager selects the team and provides a new team leader name.","lastModifiedDate":"2023-10-26"},{"lineNumber":436,"author":{"gitId":"adhigop13"},"content":"3. LinkTree confirms the change.","lastModifiedDate":"2023-10-26"},{"lineNumber":437,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":438,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":439,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":440,"author":{"gitId":"adhigop13"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":442,"author":{"gitId":"adhigop13"},"content":"* 2a. No such team exists","lastModifiedDate":"2023-10-26"},{"lineNumber":443,"author":{"gitId":"adhigop13"},"content":"    * 2a1. LinkTree shows a message that no such team exists.","lastModifiedDate":"2023-10-26"},{"lineNumber":444,"author":{"gitId":"adhigop13"},"content":"      Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":445,"author":{"gitId":"adhigop13"},"content":"  2b. No such person exists","lastModifiedDate":"2023-10-26"},{"lineNumber":446,"author":{"gitId":"adhigop13"},"content":"    * 2b1. LinkTree shows a message that no such person exists.","lastModifiedDate":"2023-10-26"},{"lineNumber":447,"author":{"gitId":"adhigop13"},"content":"    * Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":448,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":449,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":450,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":451,"author":{"gitId":"adhigop13"},"content":"**Use case: Remove a person from project**","lastModifiedDate":"2023-10-26"},{"lineNumber":452,"author":{"gitId":"adhigop13"},"content":"**Actor: Project Manager**","lastModifiedDate":"2023-10-26"},{"lineNumber":453,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":454,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":455,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":456,"author":{"gitId":"adhigop13"},"content":"1. Project manager wants to remove a person from project.","lastModifiedDate":"2023-10-26"},{"lineNumber":457,"author":{"gitId":"adhigop13"},"content":"2. Project manager provides name and requests the removal.","lastModifiedDate":"2023-10-26"},{"lineNumber":458,"author":{"gitId":"adhigop13"},"content":"3. LinkTree confirms the removal of the person.","lastModifiedDate":"2023-10-26"},{"lineNumber":459,"author":{"gitId":"StevenLiudw"},"content":"    ","lastModifiedDate":"2023-10-05"},{"lineNumber":460,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":461,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":462,"author":{"gitId":"adhigop13"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":463,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":464,"author":{"gitId":"adhigop13"},"content":"* 2a. No such person exists","lastModifiedDate":"2023-10-26"},{"lineNumber":465,"author":{"gitId":"adhigop13"},"content":"    * 2a1. LinkTree shows a message that no such person exists.","lastModifiedDate":"2023-10-26"},{"lineNumber":466,"author":{"gitId":"adhigop13"},"content":"      Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":467,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":468,"author":{"gitId":"adhigop13"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":469,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":470,"author":{"gitId":"adhigop13"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":471,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":472,"author":{"gitId":"adhigop13"},"content":"* 2a. No such team exists","lastModifiedDate":"2023-10-26"},{"lineNumber":473,"author":{"gitId":"adhigop13"},"content":"    * 2a1. LinkTree shows a message that no such team exists.","lastModifiedDate":"2023-10-26"},{"lineNumber":474,"author":{"gitId":"StevenLiudw"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":475,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":476,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":477,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":478,"author":{"gitId":"adhigop13"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":479,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":480,"author":{"gitId":"adhigop13"},"content":"**Use case: Create a new team**","lastModifiedDate":"2023-10-26"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":482,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":484,"author":{"gitId":"adhigop13"},"content":"1. User provides a team name and team leader name.","lastModifiedDate":"2023-10-26"},{"lineNumber":485,"author":{"gitId":"adhigop13"},"content":"2. LinkTree creates team with given name and with team leader set to the provided name.","lastModifiedDate":"2023-10-26"},{"lineNumber":486,"author":{"gitId":"adhigop13"},"content":"3. LinkTree confirms creation of team","lastModifiedDate":"2023-10-26"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":490,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":492,"author":{"gitId":"adhigop13"},"content":"* 1a. Team already exists","lastModifiedDate":"2023-10-26"},{"lineNumber":493,"author":{"gitId":"adhigop13"},"content":"    * 1a1. LinkTree shows a message that you are trying to create a duplicate team.","lastModifiedDate":"2023-10-26"},{"lineNumber":494,"author":{"gitId":"adhigop13"},"content":"      Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":495,"author":{"gitId":"adhigop13"},"content":"  * 1b. No such person with given name exists","lastModifiedDate":"2023-10-26"},{"lineNumber":496,"author":{"gitId":"adhigop13"},"content":"      * 1b1. LinkTree shows a message that the person you are trying to set as team leader does not exist.","lastModifiedDate":"2023-10-26"},{"lineNumber":497,"author":{"gitId":"adhigop13"},"content":"        Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":498,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":499,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":500,"author":{"gitId":"adhigop13"},"content":"**Use case: Display the tree of organisation**","lastModifiedDate":"2023-10-26"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":502,"author":{"gitId":"StevenLiudw"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":504,"author":{"gitId":"adhigop13"},"content":"1. User requests for tree to be shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":505,"author":{"gitId":"adhigop13"},"content":"2. LinkTree displays existing tree","lastModifiedDate":"2023-10-26"},{"lineNumber":506,"author":{"gitId":"adhigop13"},"content":"3. User views the tree.","lastModifiedDate":"2023-10-26"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":508,"author":{"gitId":"StevenLiudw"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":510,"author":{"gitId":"adhigop13"},"content":"4. **Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":512,"author":{"gitId":"adhigop13"},"content":"* 1a. Tree is empty","lastModifiedDate":"2023-10-26"},{"lineNumber":513,"author":{"gitId":"adhigop13"},"content":"    * 1a1. LinkTree shows a message that the tree is empty.","lastModifiedDate":"2023-10-26"},{"lineNumber":514,"author":{"gitId":"adhigop13"},"content":"      Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":515,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"adhigop13"},"content":"2.  Should be able to hold up to 500 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-26"},{"lineNumber":521,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"adhigop13"},"content":"4.  Should be able to generate output in less than 5 seconds.","lastModifiedDate":"2023-10-05"},{"lineNumber":523,"author":{"gitId":"adhigop13"},"content":"5. Should be able to show correct input format in case the user enters the input in wrong format.","lastModifiedDate":"2023-10-05"},{"lineNumber":524,"author":{"gitId":"adhigop13"},"content":"6. The system should be usable by a new project manager who has not used such a software before.","lastModifiedDate":"2023-10-26"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"erohsikivar"},"content":"* **Team Directory**: The system or platform where all the contact details of developers, team leaders, and project managers are stored.","lastModifiedDate":"2023-10-05"},{"lineNumber":531,"author":{"gitId":"adhigop13"},"content":"* **Tag-Based System**: A system in LinkTree that allows contacts to be tagged with specific roles or responsibilities, like \"Database Management\" or \"Code Review\".","lastModifiedDate":"2023-10-26"},{"lineNumber":532,"author":{"gitId":"erohsikivar"},"content":"* **Public Profile**: A profile in the Team Directory visible to all users, containing non-sensitive information about a team or individual.","lastModifiedDate":"2023-10-05"},{"lineNumber":533,"author":{"gitId":"erohsikivar"},"content":"* **Status Feature**: A tool enabling users to set and display their current status or availability (e.g., online, busy, away) within the Team Directory.","lastModifiedDate":"2023-10-05"},{"lineNumber":534,"author":{"gitId":"erohsikivar"},"content":"* **Inventory Checking**: A feature that logs the state of an item (like an apartment) at a specific time, allowing for easy comparison at a later date.","lastModifiedDate":"2023-10-05"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"\u003c box type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":544,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":545,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"\u003c/ box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JizhuoChen":12,"erohsikivar":66,"Tang-Moyan":8,"StevenLiudw":71,"-":308,"adhigop13":124}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"title: \"User Guide for LinkTree\"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"# LinkTree User Guide","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"LinkTree is a **desktop app optimized for developers engaged in startups** who require organized and streamlined ","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"methods for contact management. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth ","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"project execution and superior collaboration.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"This user guide is designed to help our users to understand and make the most of out of LinkTree. This guide is to ","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"provide clear and comprehensive instructions, to assist our users in understanding the core features and functions of","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":"LinkTree application. It is your **companion** for unlocking the full potential of LinkTree to effectively manage your","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"erohsikivar"},"content":"teams.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"erohsikivar"},"content":"**Value Proposition**:","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"LinkTree is the top contact solution for software professionals. Using our unique tag-based system and tree structure,","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"you can access contacts by roles and responsibilities instantly.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"## Table of Contents","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"  * [Target User Profile](#target-user-profile)","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"  * [How to use this Guide?](#how-to-use-this-guide)","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"* [Getting Started](#getting-started)","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"  * [Installation](#installation)","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"  * [Initial Setup](#initial-setup)","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"erohsikivar"},"content":"  * [Understanding the GUI](#understanding-the-gui)","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"erohsikivar"},"content":"  * [Tutorial on using our Commands](#tutorial-on-using-our-commands)","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"erohsikivar"},"content":"* [Features](#features)","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"  * [Welcome to Linktree](#welcome-to-linktree)","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"erohsikivar"},"content":"  * [Managing developers](#managing-developers)","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"erohsikivar"},"content":"    * [Add developer](#add-developer)","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"erohsikivar"},"content":"    * [Remove developer](#remove-developer)","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"erohsikivar"},"content":"    * [Edit developer](#edit-developer)","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"erohsikivar"},"content":"    * [Find developer](#find-developer)","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"erohsikivar"},"content":"    * [List developers](#list-developers)","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"erohsikivar"},"content":"  * [Managing teams](#managing-teams)","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"erohsikivar"},"content":"    * [Create teams](#create-teams)","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"erohsikivar"},"content":"    * [Add developer to team](#add-developers-to-team)","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"erohsikivar"},"content":"    * [Delete teams](#delete-team)","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"erohsikivar"},"content":"    * [Remove developer from team](#remove-developer)","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"erohsikivar"},"content":"    * [Edit team name](#edit-team-name)","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"erohsikivar"},"content":"    * [Edit team leader](#edit-team-leader)","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"erohsikivar"},"content":"    * [Find team](#find-team)","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"erohsikivar"},"content":"    * [List teams](#list-teams)","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"erohsikivar"},"content":"  * [Display tree](#display-tree)","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"erohsikivar"},"content":"  * [Help](#help)","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"erohsikivar"},"content":"  * [Reset the project](#reset-the-project)","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"erohsikivar"},"content":"  * [Exit the application](#exit-the-application)","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"erohsikivar"},"content":"* [Troubleshooting](#troubleshooting)","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"erohsikivar"},"content":"* [FAQs](#faqs)","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"erohsikivar"},"content":"* [Support](#support)","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"erohsikivar"},"content":"* [Known issues](#known-issues)","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"erohsikivar"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"* [Future Enhancement](#future-enhancement)","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"## Introduction","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"erohsikivar"},"content":"### Target User Profile","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"erohsikivar"},"content":"- Project managers and Developers who are engaged in startups.","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"- Collaborates frequently with multiple teams or departments.","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"- Requires quick access to contact details of other team members based on their roles and responsibilities.","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"- Prefers an organized and streamlined method for contact management.","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"- Tech-savvy and open to adopting new tools for enhancing productivity.","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"erohsikivar"},"content":"### How to use this Guide?","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"erohsikivar"},"content":"**Navigating the Document**: This guide is divided into sections to help you quickly find the information you need. You","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"erohsikivar"},"content":"can use the table of contents to jump from one section to another section. Additionally, headings and subheadings are","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"erohsikivar"},"content":"used for easy navigation.","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"erohsikivar"},"content":"**Formatting and Icons**: Throughout the guide, we use bold text and colors to emphasize key points and important terms.","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"erohsikivar"},"content":"Icons are used to draw your attention to noteworthy tips and additional information.","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"erohsikivar"},"content":"Click [here](#table-of-contents) to go back to contents.","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"## Getting Started","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"### Installation","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"1. Ensure you have Java `11` or above installed on your Computer.","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"erohsikivar"},"content":"2. LinkTree is compatible with all major operating systems, including Windows, macOS and Linux.","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"erohsikivar"},"content":"3. Download the latest `LinkTree.jar` from [here](https://github.com/AY2324S1-CS2103T-W11-4/tp/releases).","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"erohsikivar"},"content":"4. Copy the file to the folder you wish to use as the _home folder_ for your smart contact book.","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"### Initial Setup","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"1. Open a command terminal, `cd` into the folder where you placed the jar file, and use the `java -jar addressbook.jar` command to run the application. A GUI similar to the one below should appear in a few seconds, containing some sample data.","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"erohsikivar"},"content":"2. Type a command into the command box and press Enter to execute it. For example. type `help` in the command box and press Enter.","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"erohsikivar"},"content":"It will open a new help window, and shows a command summary in the result box.","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"3. Refer to the [Basic Features](#basic-features) and [Advanced Features](#advanced-features) sections for details of each command.","lastModifiedDate":"2023-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"erohsikivar"},"content":"### Understanding the GUI","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"erohsikivar"},"content":" ![Understanding GUI](images/UG_images/Understanding%20GUI.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"erohsikivar"},"content":"Our GUI is simple and easy to understand.","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"erohsikivar"},"content":"1. **Command Box**: You have to type your commands in this box.","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"erohsikivar"},"content":"2. **Result Display**: Based on the inputs given, your result will be displayed in this box.","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"erohsikivar"},"content":"3. **Help Button**: If you are unsure, you can type `help` in the command box and you will see a help window pop up. ","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"erohsikivar"},"content":"Copy this URL to have a look at our user guide.","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"erohsikivar"},"content":"4. **Developers Panel**: Lists all the developers from your addressbook.","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"erohsikivar"},"content":"5. **Teams Panel**: Lists all the teams from your teambook.","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"erohsikivar"},"content":"### Tutorial on using our Commands","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"erohsikivar"},"content":"Will update soon...","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"erohsikivar"},"content":"Click [here](#table-of-contents) to go back to contents.","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":123,"author":{"gitId":"StevenLiudw"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"erohsikivar"},"content":"## Features","lastModifiedDate":"2023-11-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"StevenLiudw"},"content":"### Welcome to LinkTree","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":129,"author":{"gitId":"StevenLiudw"},"content":"#### What this command does:","lastModifiedDate":"2023-11-04"},{"lineNumber":130,"author":{"gitId":"StevenLiudw"},"content":"* The \"Hi\" command displays a welcome message along with the current date and time.","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":132,"author":{"gitId":"StevenLiudw"},"content":"Format: `Hi`","lastModifiedDate":"2023-11-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":134,"author":{"gitId":"StevenLiudw"},"content":"##### Features:","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":136,"author":{"gitId":"StevenLiudw"},"content":"- When the command is invoked, it returns a greeting from Linktree and the current date and time.","lastModifiedDate":"2023-11-04"},{"lineNumber":137,"author":{"gitId":"StevenLiudw"},"content":"- The output format is consistent, showing \"Welcome from Linktree, Current date and time: MM-DD-YYYY HH:MM:SS\".","lastModifiedDate":"2023-11-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":139,"author":{"gitId":"StevenLiudw"},"content":"##### Guidelines:","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":141,"author":{"gitId":"StevenLiudw"},"content":"- Please ensure that the first letter of the command is uppercase. For instance, use `Hi` instead of `hi` or `HI`.","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"StevenLiudw"},"content":"- The command does not take any additional arguments or keywords.","lastModifiedDate":"2023-11-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":144,"author":{"gitId":"StevenLiudw"},"content":"##### Examples:","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":146,"author":{"gitId":"StevenLiudw"},"content":"When you enter the command (Hi):","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":148,"author":{"gitId":"StevenLiudw"},"content":"  ![Welcome](images/UG_images/Hi.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":150,"author":{"gitId":"erohsikivar"},"content":"### Managing Developers","lastModifiedDate":"2023-11-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":152,"author":{"gitId":"erohsikivar"},"content":"### Add developer","lastModifiedDate":"2023-11-04"},{"lineNumber":153,"author":{"gitId":"adhigop13"},"content":"#### What this command does:","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"adhigop13"},"content":"* Allows you to add developer information into the storage.","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"erohsikivar"},"content":"##### Command format: ","lastModifiedDate":"2023-11-04"},{"lineNumber":157,"author":{"gitId":"adhigop13"},"content":"* `add n/[Developer Name] p/[Phone Number] e/[Email] a/[Address] (OPTIONAL r/[Remark] t/Tags)`","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"adhigop13"},"content":"  ","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"erohsikivar"},"content":"##### Example usage:","lastModifiedDate":"2023-11-04"},{"lineNumber":160,"author":{"gitId":"adhigop13"},"content":"* `add n/John p/89789678 e/John@gmail.com a/Singapore t/friend`","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"adhigop13"},"content":"  ![AddNewDevToListExample](images/UG_images/AddNewDevToListExample.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"erohsikivar"},"content":"### Remove developer","lastModifiedDate":"2023-11-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"erohsikivar"},"content":"#### What this command does:","lastModifiedDate":"2023-11-04"},{"lineNumber":167,"author":{"gitId":"erohsikivar"},"content":"* Performs deletion of existing developers from the storage. Specify the index number as shown on the list.","lastModifiedDate":"2023-11-04"},{"lineNumber":168,"author":{"gitId":"adhigop13"},"content":"#### Command format:","lastModifiedDate":"2023-11-03"},{"lineNumber":169,"author":{"gitId":"erohsikivar"},"content":"* `Delete [index number]`","lastModifiedDate":"2023-11-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"adhigop13"},"content":"#### Example usage:","lastModifiedDate":"2023-11-03"},{"lineNumber":172,"author":{"gitId":"erohsikivar"},"content":"- For example, to delete John from the list. First find the index number of John.","lastModifiedDate":"2023-11-04"},{"lineNumber":173,"author":{"gitId":"erohsikivar"},"content":"  ![DeletePersonFromListExample](images/UG_images/DeletePersonFromListExample.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":174,"author":{"gitId":"erohsikivar"},"content":"- In this example, the index of John is 7. So type, `delete 7`.","lastModifiedDate":"2023-11-04"},{"lineNumber":175,"author":{"gitId":"erohsikivar"},"content":"  ![DeletedPersonFromListExample](images/UG_images/DeletedPersonFromListExample.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"erohsikivar"},"content":"### Edit developer","lastModifiedDate":"2023-11-04"},{"lineNumber":178,"author":{"gitId":"adhigop13"},"content":"#### What this command does:","lastModifiedDate":"2023-11-03"},{"lineNumber":179,"author":{"gitId":"StevenLiudw"},"content":"* To edit personal information:","lastModifiedDate":"2023-09-27"},{"lineNumber":180,"author":{"gitId":"Tang-Moyan"},"content":"  - Command: `edit INDEX(must be a positive integer) [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/REMARK] [t/TAG]...`","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"Tang-Moyan"},"content":"  - Example: `edit 1 n/John Wick e/new.email@example.com`","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"Tang-Moyan"},"content":"  - Result: The person of index `1` now has a new name `John Wick` and a new","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"Tang-Moyan"},"content":"  email address `new.email@example.com`.","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"Tang-Moyan"},"content":"  - Note: You **do not need to provide** the arguments that you do not want to edit. In the","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"Tang-Moyan"},"content":"  given example above, I only want to edit this person\u0027s name and email address and nothing else,","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"Tang-Moyan"},"content":"  so I only provided this person\u0027s index `1`, new name `n/John Wick` ","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"Tang-Moyan"},"content":"  and new email address `e/new.email@example.com`.","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"erohsikivar"},"content":"### Find developer","lastModifiedDate":"2023-11-04"},{"lineNumber":191,"author":{"gitId":"StevenLiudw"},"content":"#### What this command does:","lastModifiedDate":"2023-11-04"},{"lineNumber":192,"author":{"gitId":"StevenLiudw"},"content":"* Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2023-11-04"},{"lineNumber":193,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":194,"author":{"gitId":"StevenLiudw"},"content":"##### Format: `find [KEYWORD]`","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"StevenLiudw"},"content":" - The search is case-insensitive. e.g hans will match Hans","lastModifiedDate":"2023-11-04"},{"lineNumber":196,"author":{"gitId":"StevenLiudw"},"content":" - The order of the keywords does not matter. e.g. Hans Bo will match Bo Hans","lastModifiedDate":"2023-11-04"},{"lineNumber":197,"author":{"gitId":"StevenLiudw"},"content":" - Only the name is searched.","lastModifiedDate":"2023-11-04"},{"lineNumber":198,"author":{"gitId":"StevenLiudw"},"content":" - Only full words will be matched e.g. Han will not match Hans","lastModifiedDate":"2023-11-04"},{"lineNumber":199,"author":{"gitId":"StevenLiudw"},"content":" - Persons matching at least one keyword will be returned (i.e. OR search). e.g. Hans Bo will return Hans Gruber, Bo Yang","lastModifiedDate":"2023-11-04"},{"lineNumber":200,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":201,"author":{"gitId":"StevenLiudw"},"content":"##### Note:","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"StevenLiudw"},"content":"The find command is designed to show only a list of developers. If you wish to view the team list again, you should use the `listt` command. To display the complete list of developers, use the `list` command. If you need to list both at the same time, you can use the `list` command twice or the `listt` command twice to revert to the default state.","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"StevenLiudw"},"content":"   ","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"StevenLiudw"},"content":"##### Examples:","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"StevenLiudw"},"content":" - find John returns john and John Doe","lastModifiedDate":"2023-11-04"},{"lineNumber":207,"author":{"gitId":"StevenLiudw"},"content":" - find alex david returns Alex Yeoh, David Li","lastModifiedDate":"2023-11-04"},{"lineNumber":208,"author":{"gitId":"StevenLiudw"},"content":"   ![Find](images/UG_images/Find.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":209,"author":{"gitId":"erohsikivar"},"content":"### List developers","lastModifiedDate":"2023-11-04"},{"lineNumber":210,"author":{"gitId":"adhigop13"},"content":"#### What this command does:","lastModifiedDate":"2023-11-03"},{"lineNumber":211,"author":{"gitId":"erohsikivar"},"content":"* Show only the list of all developers in the project.","lastModifiedDate":"2023-11-04"},{"lineNumber":212,"author":{"gitId":"JizhuoChen"},"content":"* Note: Any additional words provided after the command will be ignored.","lastModifiedDate":"2023-11-07"},{"lineNumber":213,"author":{"gitId":"JizhuoChen"},"content":"  (e.g. entering `list help delete 1 HAHAHA-1234` is equivalent to entering `list`)","lastModifiedDate":"2023-11-07"},{"lineNumber":214,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":215,"author":{"gitId":"erohsikivar"},"content":"#### Command format:","lastModifiedDate":"2023-11-04"},{"lineNumber":216,"author":{"gitId":"erohsikivar"},"content":"* `list`","lastModifiedDate":"2023-11-04"},{"lineNumber":217,"author":{"gitId":"adhigop13"},"content":"#### Example usage:","lastModifiedDate":"2023-11-03"},{"lineNumber":218,"author":{"gitId":"erohsikivar"},"content":"* `list` (and an example result is shown below)","lastModifiedDate":"2023-11-04"},{"lineNumber":219,"author":{"gitId":"erohsikivar"},"content":"  ![ListCommandExample](images/UG_images/ListCommandExample.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":221,"author":{"gitId":"erohsikivar"},"content":"### To return to the home page","lastModifiedDate":"2023-11-04"},{"lineNumber":222,"author":{"gitId":"erohsikivar"},"content":"* Use the same command `list`","lastModifiedDate":"2023-11-04"},{"lineNumber":223,"author":{"gitId":"erohsikivar"},"content":"* You will return to the home page.","lastModifiedDate":"2023-11-04"},{"lineNumber":224,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":225,"author":{"gitId":"erohsikivar"},"content":"**Example usage**: When you are at the main window, type `list` to show the developer list","lastModifiedDate":"2023-11-04"},{"lineNumber":226,"author":{"gitId":"erohsikivar"},"content":"and type `list` again when you want to go back to the main window.","lastModifiedDate":"2023-11-04"},{"lineNumber":227,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":228,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":229,"author":{"gitId":"erohsikivar"},"content":"## Managing Teams","lastModifiedDate":"2023-11-04"},{"lineNumber":230,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":231,"author":{"gitId":"erohsikivar"},"content":"### Create teams","lastModifiedDate":"2023-11-04"},{"lineNumber":232,"author":{"gitId":"adhigop13"},"content":"#### What this command does:","lastModifiedDate":"2023-11-03"},{"lineNumber":233,"author":{"gitId":"adhigop13"},"content":"* Creates a new team based on the given team name and leader name.","lastModifiedDate":"2023-11-03"},{"lineNumber":234,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":235,"author":{"gitId":"adhigop13"},"content":"#### Command format:","lastModifiedDate":"2023-11-03"},{"lineNumber":236,"author":{"gitId":"adhigop13"},"content":"* `newteam tn/[TeamName] tl/[TeamLeader]`","lastModifiedDate":"2023-11-03"},{"lineNumber":237,"author":{"gitId":"adhigop13"},"content":"#### Example usage:","lastModifiedDate":"2023-11-03"},{"lineNumber":238,"author":{"gitId":"adhigop13"},"content":"* `newteam tn/Team Delta tl/David Li`","lastModifiedDate":"2023-11-03"},{"lineNumber":239,"author":{"gitId":"adhigop13"},"content":"  ![AddTeamCommandExample](images/UG_images/AddTeamCommandExample.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":240,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":241,"author":{"gitId":"erohsikivar"},"content":"### Add developers to team","lastModifiedDate":"2023-11-04"},{"lineNumber":242,"author":{"gitId":"adhigop13"},"content":"#### What this command does:","lastModifiedDate":"2023-11-03"},{"lineNumber":243,"author":{"gitId":"adhigop13"},"content":"* To add a developer into an existing team:","lastModifiedDate":"2023-11-03"},{"lineNumber":244,"author":{"gitId":"adhigop13"},"content":"#### Command format:","lastModifiedDate":"2023-11-03"},{"lineNumber":245,"author":{"gitId":"adhigop13"},"content":"* `dev2team tn/[TeamName] n/[Developer Name]`","lastModifiedDate":"2023-11-03"},{"lineNumber":246,"author":{"gitId":"adhigop13"},"content":"#### Example usage:","lastModifiedDate":"2023-11-03"},{"lineNumber":247,"author":{"gitId":"adhigop13"},"content":"* `dev2team tn/Team Delta n/Irfan Ibrahim`","lastModifiedDate":"2023-11-03"},{"lineNumber":248,"author":{"gitId":"adhigop13"},"content":"  ![AddDeveloperToTeamExample](images/UG_images/AddDevToTeamCommandExample.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":249,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":250,"author":{"gitId":"erohsikivar"},"content":"### Delete team","lastModifiedDate":"2023-11-04"},{"lineNumber":251,"author":{"gitId":"JizhuoChen"},"content":"#### What this command does:","lastModifiedDate":"2023-11-03"},{"lineNumber":252,"author":{"gitId":"erohsikivar"},"content":"* Performs deletion of existing teams from the storage.","lastModifiedDate":"2023-11-04"},{"lineNumber":253,"author":{"gitId":"JizhuoChen"},"content":"#### Command format:","lastModifiedDate":"2023-11-03"},{"lineNumber":254,"author":{"gitId":"erohsikivar"},"content":"* `Delete id [name]`","lastModifiedDate":"2023-11-04"},{"lineNumber":255,"author":{"gitId":"JizhuoChen"},"content":"#### Example usage:","lastModifiedDate":"2023-11-03"},{"lineNumber":256,"author":{"gitId":"erohsikivar"},"content":"* Example: `Delete 2 [name]`","lastModifiedDate":"2023-11-04"},{"lineNumber":257,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":258,"author":{"gitId":"erohsikivar"},"content":"### Remove developer from team","lastModifiedDate":"2023-11-04"},{"lineNumber":259,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":260,"author":{"gitId":"erohsikivar"},"content":"### Edit team name","lastModifiedDate":"2023-11-04"},{"lineNumber":261,"author":{"gitId":"erohsikivar"},"content":"* To edit team name:","lastModifiedDate":"2023-11-04"},{"lineNumber":262,"author":{"gitId":"erohsikivar"},"content":"  - Command: `editTeamName [tn/TEAMNAME(original team name)] [tn/TEAMNAME(new team name)]`","lastModifiedDate":"2023-11-04"},{"lineNumber":263,"author":{"gitId":"erohsikivar"},"content":"  - Example: `editTeamName tn/Alpha Team tn/Beta Team`","lastModifiedDate":"2023-11-04"},{"lineNumber":264,"author":{"gitId":"erohsikivar"},"content":"  - Result: Now, the team with original team name `Alpha Team` changed its team name","lastModifiedDate":"2023-11-04"},{"lineNumber":265,"author":{"gitId":"erohsikivar"},"content":"    to `Beta Team`.","lastModifiedDate":"2023-11-04"},{"lineNumber":266,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":267,"author":{"gitId":"erohsikivar"},"content":"### Edit team leader","lastModifiedDate":"2023-11-04"},{"lineNumber":268,"author":{"gitId":"erohsikivar"},"content":"* To edit team leader:","lastModifiedDate":"2023-11-04"},{"lineNumber":269,"author":{"gitId":"erohsikivar"},"content":"  - Command: `editTeamLeader [tn/TEAMNAME] [tl/TEAMLEADER]`","lastModifiedDate":"2023-11-04"},{"lineNumber":270,"author":{"gitId":"erohsikivar"},"content":"  - Example: `editTeamLeader tn/Alpha Team tl/Bob`","lastModifiedDate":"2023-11-04"},{"lineNumber":271,"author":{"gitId":"erohsikivar"},"content":"  - Result: Now, the team with team name `Alpha Team` changed its team leader to be `Bob`.","lastModifiedDate":"2023-11-04"},{"lineNumber":272,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":273,"author":{"gitId":"StevenLiudw"},"content":"## Find Team","lastModifiedDate":"2023-11-04"},{"lineNumber":274,"author":{"gitId":"StevenLiudw"},"content":"### What this command does:","lastModifiedDate":"2023-11-04"},{"lineNumber":275,"author":{"gitId":"StevenLiudw"},"content":"- Finds teams whose names contain any of the given keywords.","lastModifiedDate":"2023-11-04"},{"lineNumber":276,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":277,"author":{"gitId":"StevenLiudw"},"content":"##### Format: `findteam KEYWORD`","lastModifiedDate":"2023-11-09"},{"lineNumber":278,"author":{"gitId":"StevenLiudw"},"content":"- The search is case-insensitive. e.g., \"team\" will match \"Team Alpha.\"","lastModifiedDate":"2023-11-04"},{"lineNumber":279,"author":{"gitId":"StevenLiudw"},"content":"- The order of the keywords does not matter. e.g., \"Alpha Bravo\" will match \"Bravo Alpha Team.\"","lastModifiedDate":"2023-11-04"},{"lineNumber":280,"author":{"gitId":"StevenLiudw"},"content":"- Only the team name is searched.","lastModifiedDate":"2023-11-04"},{"lineNumber":281,"author":{"gitId":"StevenLiudw"},"content":"- Only full words will be matched. e.g., \"Alph\" will not match \"Alpha Team.\"","lastModifiedDate":"2023-11-04"},{"lineNumber":282,"author":{"gitId":"StevenLiudw"},"content":"- Teams matching at least one keyword will be returned (i.e., OR search). e.g., \"Alpha Bravo\" will return \"Team Alpha,\" \"Bravo Team.\"","lastModifiedDate":"2023-11-04"},{"lineNumber":283,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":284,"author":{"gitId":"StevenLiudw"},"content":"##### Note:","lastModifiedDate":"2023-11-09"},{"lineNumber":285,"author":{"gitId":"StevenLiudw"},"content":"The find command is designed to show only a list of teams. If you wish to view the developer list again, you should use the `list` command. To display the complete list of teams, use the `listt` command. If you need to list both at the same time, you can use the `list` command twice or the `listt` command twice to revert to the default state.","lastModifiedDate":"2023-11-09"},{"lineNumber":286,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":287,"author":{"gitId":"StevenLiudw"},"content":"##### Examples:","lastModifiedDate":"2023-11-09"},{"lineNumber":288,"author":{"gitId":"StevenLiudw"},"content":"- `findteam Alpha` returns \"Team Alpha\" and \"Alpha Squad.\"","lastModifiedDate":"2023-11-04"},{"lineNumber":289,"author":{"gitId":"StevenLiudw"},"content":"- `findteam Bravo Charlie` returns \"Bravo Team,\" \"Charlie Crew,\" and \"Delta Bravo Charlie Team.\"","lastModifiedDate":"2023-11-04"},{"lineNumber":290,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":291,"author":{"gitId":"StevenLiudw"},"content":"![Find Team](images/UG_images/Findteam.png)","lastModifiedDate":"2023-11-04"},{"lineNumber":292,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":293,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":294,"author":{"gitId":"erohsikivar"},"content":"### List teams","lastModifiedDate":"2023-11-04"},{"lineNumber":295,"author":{"gitId":"JizhuoChen"},"content":"#### What this command does:","lastModifiedDate":"2023-11-03"},{"lineNumber":296,"author":{"gitId":"JizhuoChen"},"content":"* Show only the list of all existing teams in the project.","lastModifiedDate":"2023-11-03"},{"lineNumber":297,"author":{"gitId":"JizhuoChen"},"content":"* Note: Any additional words provided after the command will be ignored.","lastModifiedDate":"2023-11-07"},{"lineNumber":298,"author":{"gitId":"JizhuoChen"},"content":"  (e.g. entering `listt help delete 1 HAHAHA-1234` is equivalent to entering `listt`)","lastModifiedDate":"2023-11-07"},{"lineNumber":299,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":300,"author":{"gitId":"JizhuoChen"},"content":"#### Command format:","lastModifiedDate":"2023-11-03"},{"lineNumber":301,"author":{"gitId":"JizhuoChen"},"content":"* `listt`","lastModifiedDate":"2023-11-03"},{"lineNumber":302,"author":{"gitId":"JizhuoChen"},"content":"#### Example usage:","lastModifiedDate":"2023-11-03"},{"lineNumber":303,"author":{"gitId":"JizhuoChen"},"content":"* `listt` (and an example result is shown below)","lastModifiedDate":"2023-11-03"},{"lineNumber":304,"author":{"gitId":"JizhuoChen"},"content":"  ![ListTeamCommandExample](images/UG_images/ListTeamCommandExample.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":305,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":306,"author":{"gitId":"JizhuoChen"},"content":"  ","lastModifiedDate":"2023-11-03"},{"lineNumber":307,"author":{"gitId":"JizhuoChen"},"content":"### To return to the home page","lastModifiedDate":"2023-11-03"},{"lineNumber":308,"author":{"gitId":"JizhuoChen"},"content":"* Use the same command `listt`","lastModifiedDate":"2023-11-03"},{"lineNumber":309,"author":{"gitId":"JizhuoChen"},"content":"* You will return to the home page.","lastModifiedDate":"2023-11-03"},{"lineNumber":310,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":311,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":312,"author":{"gitId":"JizhuoChen"},"content":"**Example usage**: When you are at the main window, type `listt` to show the team list","lastModifiedDate":"2023-11-03"},{"lineNumber":313,"author":{"gitId":"JizhuoChen"},"content":"and type `listt` again when you want to go back to the main window.","lastModifiedDate":"2023-11-03"},{"lineNumber":314,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":315,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":316,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":317,"author":{"gitId":"erohsikivar"},"content":"### Display tree","lastModifiedDate":"2023-11-04"},{"lineNumber":318,"author":{"gitId":"adhigop13"},"content":"#### What this command does:","lastModifiedDate":"2023-11-03"},{"lineNumber":319,"author":{"gitId":"adhigop13"},"content":"* Provides a tree visualisation of all the teams and members in the project.","lastModifiedDate":"2023-11-03"},{"lineNumber":320,"author":{"gitId":"Tang-Moyan"},"content":"* Note: ","lastModifiedDate":"2023-11-08"},{"lineNumber":321,"author":{"gitId":"Tang-Moyan"},"content":"  - Any additional words provided after the command will be ignored.","lastModifiedDate":"2023-11-08"},{"lineNumber":322,"author":{"gitId":"JizhuoChen"},"content":"  (e.g. entering `tree list delete 1 HAHAHA-1234` is equivalent to entering `tree`)","lastModifiedDate":"2023-11-07"},{"lineNumber":323,"author":{"gitId":"Tang-Moyan"},"content":"  - The project name **cannot be edited** because our application is designed to hold","lastModifiedDate":"2023-11-08"},{"lineNumber":324,"author":{"gitId":"Tang-Moyan"},"content":"the contact information of all the developers in **one** software engineering project,","lastModifiedDate":"2023-11-08"},{"lineNumber":325,"author":{"gitId":"Tang-Moyan"},"content":"the naming of this project is not important since there is only one project, and","lastModifiedDate":"2023-11-08"},{"lineNumber":326,"author":{"gitId":"Tang-Moyan"},"content":"we do not need names to differentiate between different projects.","lastModifiedDate":"2023-11-08"},{"lineNumber":327,"author":{"gitId":"Tang-Moyan"},"content":"  - The content in the tree **will not be updated in real time** because that requires","lastModifiedDate":"2023-11-08"},{"lineNumber":328,"author":{"gitId":"Tang-Moyan"},"content":"too much computer resources. Instead, the tree is **updated every time you show it**.","lastModifiedDate":"2023-11-08"},{"lineNumber":329,"author":{"gitId":"Tang-Moyan"},"content":"So, when you have some changes to the data, you should **hide the tree first if it is","lastModifiedDate":"2023-11-08"},{"lineNumber":330,"author":{"gitId":"Tang-Moyan"},"content":"shown**, and call command `tree` again to show the tree. Then your changes will be ","lastModifiedDate":"2023-11-08"},{"lineNumber":331,"author":{"gitId":"Tang-Moyan"},"content":"reflected in the new tree. With that being said, if you enter command `tree` to","lastModifiedDate":"2023-11-08"},{"lineNumber":332,"author":{"gitId":"Tang-Moyan"},"content":"show LinkTree and make some changes to the data, your changes will not be reflected","lastModifiedDate":"2023-11-08"},{"lineNumber":333,"author":{"gitId":"Tang-Moyan"},"content":"in the current tree. You should hide the tree first and then call `tree` again to","lastModifiedDate":"2023-11-08"},{"lineNumber":334,"author":{"gitId":"Tang-Moyan"},"content":"obtain a new tree which will reflect the changes you made.","lastModifiedDate":"2023-11-08"},{"lineNumber":335,"author":{"gitId":"Tang-Moyan"},"content":"  - Team names and team leaders\u0027 names may not be shown fully if they are too long.","lastModifiedDate":"2023-11-10"},{"lineNumber":336,"author":{"gitId":"Tang-Moyan"},"content":"You can refer back to the team list for their full names.","lastModifiedDate":"2023-11-10"},{"lineNumber":337,"author":{"gitId":"Tang-Moyan"},"content":"### Command format: ","lastModifiedDate":"2023-11-08"},{"lineNumber":338,"author":{"gitId":"adhigop13"},"content":"* `tree`","lastModifiedDate":"2023-11-03"},{"lineNumber":339,"author":{"gitId":"adhigop13"},"content":"#### Example usage: ","lastModifiedDate":"2023-11-03"},{"lineNumber":340,"author":{"gitId":"adhigop13"},"content":"* `tree` (and an example result is shown below)","lastModifiedDate":"2023-11-03"},{"lineNumber":341,"author":{"gitId":"Tang-Moyan"},"content":"![TreeResultExample](images/UG_images/TreeResultExample.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":343,"author":{"gitId":"Tang-Moyan"},"content":"  ","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":345,"author":{"gitId":"adhigop13"},"content":"### To hide the tree","lastModifiedDate":"2023-11-03"},{"lineNumber":346,"author":{"gitId":"adhigop13"},"content":"  * Use the same command `tree`","lastModifiedDate":"2023-11-03"},{"lineNumber":347,"author":{"gitId":"adhigop13"},"content":"  * You will return to the home page.","lastModifiedDate":"2023-11-03"},{"lineNumber":348,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"adhigop13"},"content":"**Example usage**: When you are at the main window, type `tree` to show the tree graph","lastModifiedDate":"2023-11-03"},{"lineNumber":351,"author":{"gitId":"Tang-Moyan"},"content":"and type `tree` again when you want to hide the tree and go back to the main window.","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"erohsikivar"},"content":"### Help","lastModifiedDate":"2023-11-04"},{"lineNumber":355,"author":{"gitId":"JizhuoChen"},"content":"#### What this command does:","lastModifiedDate":"2023-11-07"},{"lineNumber":356,"author":{"gitId":"JizhuoChen"},"content":"* Opens up a window which shows the link to this User Guide, which also comes with a button allowing copying the link;","lastModifiedDate":"2023-11-07"},{"lineNumber":357,"author":{"gitId":"JizhuoChen"},"content":"* Display a summary of all commands of LinkTree, specifying the parameters needed.","lastModifiedDate":"2023-11-07"},{"lineNumber":358,"author":{"gitId":"JizhuoChen"},"content":"* Note: Any additional words provided after the command will be ignored.","lastModifiedDate":"2023-11-07"},{"lineNumber":359,"author":{"gitId":"JizhuoChen"},"content":"  (e.g. entering `help list delete 1 HAHAHA-1234` is equivalent to entering `help`)","lastModifiedDate":"2023-11-07"},{"lineNumber":360,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":361,"author":{"gitId":"JizhuoChen"},"content":"#### Command format:","lastModifiedDate":"2023-11-07"},{"lineNumber":362,"author":{"gitId":"JizhuoChen"},"content":"* `help`","lastModifiedDate":"2023-11-07"},{"lineNumber":363,"author":{"gitId":"JizhuoChen"},"content":"* Or simply press F1","lastModifiedDate":"2023-11-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":365,"author":{"gitId":"JizhuoChen"},"content":"#### Example usage:","lastModifiedDate":"2023-11-07"},{"lineNumber":366,"author":{"gitId":"JizhuoChen"},"content":"* `help` (and an example result is shown below)","lastModifiedDate":"2023-11-07"},{"lineNumber":367,"author":{"gitId":"JizhuoChen"},"content":"  ![HelpWindow](images/UG_images/HelpWindow.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":368,"author":{"gitId":"JizhuoChen"},"content":"  ![HelpCommandResult](images/UG_images/HelpCommandResult.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"erohsikivar"},"content":"### Reset the project","lastModifiedDate":"2023-11-04"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":373,"author":{"gitId":"erohsikivar"},"content":"### Exit the application","lastModifiedDate":"2023-11-04"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":375,"author":{"gitId":"StevenLiudw"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-27"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":377,"author":{"gitId":"StevenLiudw"},"content":"## Troubleshooting","lastModifiedDate":"2023-09-27"},{"lineNumber":378,"author":{"gitId":"StevenLiudw"},"content":"- Details coming soon...","lastModifiedDate":"2023-09-27"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":380,"author":{"gitId":"erohsikivar"},"content":"Click [here](#table-of-contents) to go back to contents.","lastModifiedDate":"2023-11-04"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":382,"author":{"gitId":"StevenLiudw"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-27"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"StevenLiudw"},"content":"## FAQ","lastModifiedDate":"2023-11-10"},{"lineNumber":385,"author":{"gitId":"StevenLiudw"},"content":"#### Q: How can I launch Linktree if clicking on the JAR file does not work?","lastModifiedDate":"2023-11-10"},{"lineNumber":386,"author":{"gitId":"StevenLiudw"},"content":"**A:** Below is the CLI way to launch Linktree when encountering issues with the JAR file.","lastModifiedDate":"2023-11-10"},{"lineNumber":387,"author":{"gitId":"StevenLiudw"},"content":"1. Open the Command Prompt.","lastModifiedDate":"2023-11-10"},{"lineNumber":388,"author":{"gitId":"StevenLiudw"},"content":"2. Navigate to the directory where the JAR file is located using the following command:","lastModifiedDate":"2023-11-10"},{"lineNumber":389,"author":{"gitId":"StevenLiudw"},"content":"3. Type the command below and press Enter: `cd [JAR file location]` followed by `java -jar linktree.jar`","lastModifiedDate":"2023-11-10"},{"lineNumber":390,"author":{"gitId":"StevenLiudw"},"content":"4. Linktree should now launch.","lastModifiedDate":"2023-11-10"},{"lineNumber":391,"author":{"gitId":"StevenLiudw"},"content":"- If this doesn’t work, check our GitHub to make sure you have the latest version of Tran$act downloaded.","lastModifiedDate":"2023-11-10"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":393,"author":{"gitId":"StevenLiudw"},"content":"#### Q: How can I transfer my Linktree data to another computer?","lastModifiedDate":"2023-11-10"},{"lineNumber":394,"author":{"gitId":"StevenLiudw"},"content":"**A:** To transfer your Linktree data, install the jar file on the new computer and replace the empty data files(addressbook.json \u0026 teambook.json) with the two from your previous Linktree home directory (tp/data).","lastModifiedDate":"2023-11-10"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":396,"author":{"gitId":"StevenLiudw"},"content":"#### Q: What are the steps to install Java 11?","lastModifiedDate":"2023-11-10"},{"lineNumber":397,"author":{"gitId":"StevenLiudw"},"content":"**A:**  To install Java 11, please refer to the [detailed download instructions available here](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html).","lastModifiedDate":"2023-11-10"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":399,"author":{"gitId":"StevenLiudw"},"content":"#### Q: Is Linktree compatible with Mac and Linux operating systems?","lastModifiedDate":"2023-11-10"},{"lineNumber":400,"author":{"gitId":"StevenLiudw"},"content":"**A:**  Linktree is compatible with a wide range of operating systems,","lastModifiedDate":"2023-11-10"},{"lineNumber":401,"author":{"gitId":"StevenLiudw"},"content":"including Windows, Mac and Linux, and it runs on systems that support Java 11, so you can use it on your favorite platform.","lastModifiedDate":"2023-11-10"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":403,"author":{"gitId":"StevenLiudw"},"content":"#### Q: What should I do if a command isn\u0027t working?","lastModifiedDate":"2023-11-10"},{"lineNumber":404,"author":{"gitId":"StevenLiudw"},"content":"**A:** Below are the 5 potential ways to solve your issue:","lastModifiedDate":"2023-11-10"},{"lineNumber":405,"author":{"gitId":"StevenLiudw"},"content":"1. **Review the Command Syntax**:","lastModifiedDate":"2023-11-10"},{"lineNumber":406,"author":{"gitId":"StevenLiudw"},"content":"  - Start by carefully reviewing the command you\u0027re trying to use. Ensure that you\u0027ve entered it correctly, including all required components like command names, options, and arguments.","lastModifiedDate":"2023-11-10"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":408,"author":{"gitId":"StevenLiudw"},"content":"2. **Check for Typos**:","lastModifiedDate":"2023-11-10"},{"lineNumber":409,"author":{"gitId":"StevenLiudw"},"content":"  - Typos are a common cause of command failures. Double-check the spelling of all command elements, including file paths and option names.","lastModifiedDate":"2023-11-10"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":411,"author":{"gitId":"StevenLiudw"},"content":"3. **Verify Input Requirements**:","lastModifiedDate":"2023-11-10"},{"lineNumber":412,"author":{"gitId":"StevenLiudw"},"content":"  - Commands often require specific inputs, such as file paths, URLs, or values. Ensure that you\u0027ve provided all the necessary inputs in the correct format.","lastModifiedDate":"2023-11-10"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":414,"author":{"gitId":"StevenLiudw"},"content":"4. **Refer to the user guide**:","lastModifiedDate":"2023-11-10"},{"lineNumber":415,"author":{"gitId":"StevenLiudw"},"content":"  - Look for the section that explains the command\u0027s usage and syntax. It provide examples and detailed explanations.","lastModifiedDate":"2023-11-10"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":417,"author":{"gitId":"StevenLiudw"},"content":"5. **Ask for Help**:                                                                                                                                                                                                                                                                          ","lastModifiedDate":"2023-11-10"},{"lineNumber":418,"author":{"gitId":"StevenLiudw"},"content":"  - If you\u0027ve exhausted all other options and the command still isn\u0027t working, don\u0027t hesitate to seek help.","lastModifiedDate":"2023-11-10"},{"lineNumber":419,"author":{"gitId":"StevenLiudw"},"content":"Reach out to your us in email or Github for assistance.","lastModifiedDate":"2023-11-10"},{"lineNumber":420,"author":{"gitId":"StevenLiudw"},"content":"Describe the problem in detail, including the command you\u0027re using, the error messages received, and any relevant context.","lastModifiedDate":"2023-11-10"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":422,"author":{"gitId":"StevenLiudw"},"content":"#### Q: Why does Linktree not show all developers/teams in the database?","lastModifiedDate":"2023-11-10"},{"lineNumber":423,"author":{"gitId":"StevenLiudw"},"content":"**A:** If not all customers or properties are appearing, it\u0027s likely due to certain commands like find, or findteam. ","lastModifiedDate":"2023-11-10"},{"lineNumber":424,"author":{"gitId":"StevenLiudw"},"content":"1. *If you wish to view the developer list, you should use the list command.*","lastModifiedDate":"2023-11-10"},{"lineNumber":425,"author":{"gitId":"StevenLiudw"},"content":"2. *To display the complete list of teams, use the listt command.*","lastModifiedDate":"2023-11-10"},{"lineNumber":426,"author":{"gitId":"StevenLiudw"},"content":"3. *If you need to list both at the same time, you can use the list command twice or the listt command twice to revert to the default state.*","lastModifiedDate":"2023-11-10"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":428,"author":{"gitId":"StevenLiudw"},"content":"#### Q: Is there a way to share my Linktree phonebook with others by exporting it to a different format such as a csv file?","lastModifiedDate":"2023-11-10"},{"lineNumber":429,"author":{"gitId":"StevenLiudw"},"content":"**A:** Linktree does not currently support sharing your phonebook with others or exporting it to an external format.","lastModifiedDate":"2023-11-10"},{"lineNumber":430,"author":{"gitId":"StevenLiudw"},"content":"Its main function is personal communication management for supervisors.","lastModifiedDate":"2023-11-10"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":432,"author":{"gitId":"StevenLiudw"},"content":"#### Q: I\u0027m confused about some terms in the guide. Where can I find explanations?","lastModifiedDate":"2023-11-10"},{"lineNumber":433,"author":{"gitId":"StevenLiudw"},"content":"**A:** You can check out the explanation of some of the complicated terms in our glossary","lastModifiedDate":"2023-11-10"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":435,"author":{"gitId":"StevenLiudw"},"content":"#### Q: I deleted my data file by mistake. Can I recover my lost data?","lastModifiedDate":"2023-11-10"},{"lineNumber":436,"author":{"gitId":"StevenLiudw"},"content":"**A:** If you\u0027ve accidentally deleted your data file, check your computer\u0027s trash or recycle bin.","lastModifiedDate":"2023-11-10"},{"lineNumber":437,"author":{"gitId":"StevenLiudw"},"content":"Unfortunately, if it\u0027s not there, recovering lost data is not possible.","lastModifiedDate":"2023-11-10"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":439,"author":{"gitId":"StevenLiudw"},"content":"#### Q: How do I uninstall Linktree?","lastModifiedDate":"2023-11-10"},{"lineNumber":440,"author":{"gitId":"StevenLiudw"},"content":"**A:** To uninstall Linktree, simply delete the folder that contains `linktree.jar` ","lastModifiedDate":"2023-11-10"},{"lineNumber":441,"author":{"gitId":"StevenLiudw"},"content":"- no installation on the hard drive means no complex uninstallation process.","lastModifiedDate":"2023-11-10"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":443,"author":{"gitId":"StevenLiudw"},"content":"#### Q: Do I need to be online to use Linktree?","lastModifiedDate":"2023-11-10"},{"lineNumber":444,"author":{"gitId":"StevenLiudw"},"content":"**A:** Linktree doesn\u0027t require an internet connection for regular use, but you will need to be online to download the application initially.","lastModifiedDate":"2023-11-10"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"erohsikivar"},"content":"Click [here](#table-of-contents) to go back to contents.","lastModifiedDate":"2023-11-04"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":450,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"StevenLiudw"},"content":"## Support","lastModifiedDate":"2023-09-27"},{"lineNumber":453,"author":{"gitId":"StevenLiudw"},"content":"- Details coming soon...","lastModifiedDate":"2023-09-27"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"erohsikivar"},"content":"Click [here](#table-of-contents) to go back to contents.","lastModifiedDate":"2023-11-04"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":457,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":461,"author":{"gitId":"StevenLiudw"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running it again.","lastModifiedDate":"2023-09-27"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":463,"author":{"gitId":"erohsikivar"},"content":"Click [here](#table-of-contents) to go back to contents.","lastModifiedDate":"2023-11-04"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":465,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":467,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"StevenLiudw"},"content":"- Details coming soon...","lastModifiedDate":"2023-09-27"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"erohsikivar"},"content":"Click [here](#table-of-contents) to go back to contents.","lastModifiedDate":"2023-11-04"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":474,"author":{"gitId":"StevenLiudw"},"content":"## Future Enhancement","lastModifiedDate":"2023-11-07"},{"lineNumber":475,"author":{"gitId":"StevenLiudw"},"content":"- Currently, the find and finteam functions output \"1 persons\" and \"1 teams\" respectively, regardless of the number. The objective is to modify these functions to correctly handle singular and plural nouns. When the count is 1, the function should output \"1 person\" or \"1 team,\" and for counts greater than 1, the function should output \"N persons\" or \"N teams\" appropriately.","lastModifiedDate":"2023-11-07"},{"lineNumber":476,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":477,"author":{"gitId":"StevenLiudw"},"content":"Click [here](#table-of-contents) to go back to contents.","lastModifiedDate":"2023-11-07"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"JizhuoChen":46,"erohsikivar":128,"StevenLiudw":127,"Tang-Moyan":33,"-":100,"adhigop13":44}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eLinkTree\u003c/a\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"StevenLiudw":1,"-":65}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"package UI {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"Class MainWindow","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"MainWindow .right.\u003e Logic","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"note bottom of MainWindow: Depends on the CommandResult\\nreturned by Logic","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"LogicManager .left.|\u003e Logic","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Tang-Moyan"},"content":"Logic ..down.\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Tang-Moyan"},"content":"LogicManager -down-\u003e\"          1\" AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"XYZCommand -down-|\u003e Command","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Tang-Moyan"},"content":"note \"Returned by Logic\\n to its caller.\" as dn","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Tang-Moyan"},"content":"dn .right.\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Tang-Moyan"},"content":"Class HiddenOutside2 #FFFFFF","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Tang-Moyan"},"content":"Command .[hidden]left.\u003e HiddenOutside2","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Tang-Moyan"},"content":"dn .[hidden]down.\u003e  HiddenOutside2","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Tang-Moyan":23,"-":39}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyTeamBook\" as ReadOnlyTeamBook","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"Class TeamBook","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"Class UniqueTeamList","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"Class Team","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"erohsikivar"},"content":"TeamBook .up.|\u003e ReadOnlyTeamBook","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"erohsikivar"},"content":"Model .down.\u003e ReadOnlyTeamBook","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"erohsikivar"},"content":"ModelManager -down-\u003e \"1\" TeamBook","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"erohsikivar"},"content":"TeamBook *--\u003e \"1\" UniqueTeamList","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"erohsikivar"},"content":"UniqueTeamList --\u003e \"~* all\" Team","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"erohsikivar"},"content":"ModelManager --\u003e \"~* filtered\" Team","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"erohsikivar":10,"-":54}},{"path":"docs/diagrams/Storage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"package \"Storage\" {","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"    interface Storage \u003c\u003cinterface\u003e\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"    package \"AddressBook Storage\" {","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"        interface AddressBookStorage \u003c\u003cinterface\u003e\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"        class JsonAddressBookStorage","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"        class JsonSerializableAddressBook","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"        class JsonAdaptedPerson","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"        class JsonAdaptedTag","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    package \"UserPrefs Storage\" {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"        interface UserPrefsStorage \u003c\u003cinterface\u003e\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"        class JsonUserPrefsStorage","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    package \"Team Storage\" {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        interface TeamBookStorage \u003c\u003cinterface\u003e\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"        class JsonTeamBookStorage","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        class JsonSerializableTeamBook","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        class JsonAdaptedTeam","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    class StorageManager","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    Storage \u003c|-- AddressBookStorage","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    Storage \u003c|-- UserPrefsStorage","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    Storage \u003c|-- TeamBookStorage","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    AddressBookStorage \u003c|.. JsonAddressBookStorage: 1","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    JsonAddressBookStorage --\u003e JsonSerializableAddressBook","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    JsonSerializableAddressBook --\u003e JsonAdaptedPerson: *","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    JsonSerializableAddressBook --\u003e JsonAdaptedTag: *","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    UserPrefsStorage \u003c|.. JsonUserPrefsStorage: 1","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    TeamBookStorage \u003c|.. JsonTeamBookStorage: 1","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    JsonTeamBookStorage --\u003e JsonSerializableTeamBook","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    JsonSerializableTeamBook --\u003e JsonAdaptedTeam: *","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    StorageManager --\u003e AddressBookStorage","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"    StorageManager --\u003e UserPrefsStorage","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"    StorageManager --\u003e TeamBookStorage","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"StevenLiudw":50}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"Class TeamListPanel","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"Class TeamCard","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"MainWindow *-down-\u003e \"1\" TeamListPanel","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"TeamListPanel -down-\u003e \"*\" TeamCard","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"TeamCard ..\u003e Model","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"JizhuoChen":6,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"# **LinkTree**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"**LinkTree is the top contact solution for software professionals.** Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"* If you are interested in using LinkTree, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"* If you are interested about developing LinkTree, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JizhuoChen":4,"-":17}},{"path":"docs/team/adhigop13.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"  title: \"Adhitya\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"### Project: LinkTree","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    * Transform the form of our previous User Guide draft and upload into github","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"  * Contributed to forum discussions to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"  * Reported bugs and suggestions for other teams in the class to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"  * Some parts of the history feature I added was adopted by several other classmates to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":" to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"adhigop13":35}},{"path":"docs/team/erohsikivar.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"erohsikivar"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"erohsikivar"},"content":"  title: \"Ravi Kishore\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"erohsikivar"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"### Project: LinkTree","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"erohsikivar"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"erohsikivar"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"    * Transform the form of our previous User Guide draft and upload into github","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"    to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"erohsikivar"},"content":"  * Contributed to forum discussions to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"erohsikivar"},"content":"  * Reported bugs and suggestions for other teams in the class to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"erohsikivar"},"content":"  * Some parts of the history feature I added was adopted by several other classmates to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"erohsikivar"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"erohsikivar"},"content":" to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"erohsikivar":36}},{"path":"docs/team/jizhuochen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"title: \"Chen Jizhuo\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"### Project: LinkTree","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"LinkTree is a CLI-based contact management solution for software professionals. ","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"Using our unique tag-based system, access contacts by roles and responsibilities ","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"instantly. With LinkTree, easily visualise the structure and team compositions, leaderships","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"of any software project, allowing you to instantly locate the target developer/ ","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"team that you are looking for in a sea of developers.","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"* **New Feature**: ","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"  * Allowing display of a list of teams in the current project, including the team names, ","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"  leaders and team members (developers);","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"  * Constantly display the statistics (how many existing developers, and teams in the project)","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"  * Display of a summary of all commands when \u0027help\u0027 command is entered;","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"  * Addition of the remark feature which acts as a short bio for developers.","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"  ","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djizhuochen\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"* **Project management**: ","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"  * Conducted regular checks and fixed style errors to maintain code quality;","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"  * Conducted regular checks and bug testing and provided constructive feedbacks for the team.","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"  * Allowed dynamic changes in visibility of original person list;","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"  * Allowed dynamic changes in size of the command result display area;","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"    * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"        * Made changes to UG at the following parts: List developers, List teams, Help, Statistics display.","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"      ","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"        * Made some changes and added UI UML diagrams;","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"    * PRs reviewed (with non-trivial review comments).","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"    * Contributed to forum discussions.","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"    * Reported bugs and suggestions for other teams in the class.","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"    * Some parts of the history feature I added was adopted by several other classmates.","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"    * Utilized various development tools to enhance project productivity and code quality","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"JizhuoChen":53}},{"path":"docs/team/stevenliudw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"layout: default.md","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"title: \"Liu Diwen\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"### Project: LinkTree","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"LinkTree is the top contact solution for software professionals. Using our unique tag-based system, access contacts by roles and responsibilities instantly. With LinkTree, swiftly connect with the right stakeholder, ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"* **New Features**:","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"  * Implemented a \"Welcome\" feature to greet users upon application start.","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"  * Added a \"FindTeam\" feature to help users locate project teams based on specific criteria.","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dStevenLiudw\u0026zR\u003dAY2324S1-CS2103T-W11-4%2Ftp%5Bmaster%5D\u0026zACS\u003d248.81983649544964\u0026zS\u003d2023-09-22\u0026zFS\u003d\u0026zU\u003d2023-11-06\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"* **Project management**:","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"  * Assigned multiple issues to team members for tracking and resolution.","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"  * Conducted regular checks and fixed style errors to maintain code quality.","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"  * Improved the \"Find\" feature and its GUI for better usability.","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"  * Overhauled the entire storage system for the team book to enhance performance and reliability.","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"  * User Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    * Updated and refined the User Guide to include the new \"Welcome\", \"Find\", and \"FindTeam\" features.","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    * Transformed the form of our previous User Guide draft and uploaded it to GitHub.","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"  ","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    * Added a new section detailing the storage architecture and its components.","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    * Included diagrams and instructions to aid in understanding the storage system.","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"* **Community**:","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"  * Reviewed PRs with non-trivial review comments.","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"  * Actively contributed to forum discussions.","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"  * Reported bugs and provided suggestions for other teams in the class.","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"  * Offered general suggestions to teammates on their pull requests.","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"* **Tools**:","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"  * Utilized various development tools to enhance project productivity and code quality : to be added soon","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"StevenLiudw":43}},{"path":"docs/team/tang-moyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"  layout: default.md","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"  title: \"Tang Moyan\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"### Project: LinkTree","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"LinkTree is the top contact solution for software professionals. ","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"Using our unique tag-based system, access contacts by roles and responsibilities instantly.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"With LinkTree, swiftly connect with the right stakeholder, ","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"ensuring smooth project execution and superior collaboration.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"* **New Feature**:","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":"  - Implemented `tree` command which will show all the contact information as well as team","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"Tang-Moyan"},"content":"information in a tree structure in GUI.","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dTang-Moyan\u0026tabRepo\u003dAY2324S1-CS2103T-W11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Tang-Moyan"},"content":"* **Project management**:","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"Tang-Moyan"},"content":"  - Defined the overall data structure and basic classes to be used for which to be modified","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"Tang-Moyan"},"content":"by other teammates later on.","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"Tang-Moyan"},"content":"  - Helping others with their questions and bugs.","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Tang-Moyan"},"content":"* **Enhancements to existing features**: ","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"  - Extended the \"edit\" feature such that users can not only edit personal information, but","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"also edit team name and team leader.","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Tang-Moyan"},"content":"    * User Guide:","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Tang-Moyan"},"content":"        * Updated the user guide for \"edit\" related features and `tree` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"        * Updated the UMl diagrams for our modifications in the Logic component.","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"* **Community**:","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Tang-Moyan"},"content":"    * Contributed to forum discussions to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"    * Reported bugs and suggestions for other teams in the class to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Tang-Moyan"},"content":"    * Some parts of the history feature I added was adopted by several other classmates.","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"Tang-Moyan"},"content":"For example, I first implemented storing developers in a team using his hashcode which they changed to use","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"Tang-Moyan"},"content":"a Identity code as and alternative.","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Tang-Moyan"},"content":"  to be added soon","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Tang-Moyan":47}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.TeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.storage.JsonTeamBookStorage;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing LinkTree ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"        JsonTeamBookStorage teamBookStorage \u003d new JsonTeamBookStorage(userPrefs.getTeamBookFilePath());","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"        storage \u003d new StorageManager(addressBookStorage, teamBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"    //todo: change the logger info","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"        Optional\u003cReadOnlyTeamBook\u003e teamBookOptional;","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"        ReadOnlyAddressBook initialAddressData;","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"        ReadOnlyTeamBook initialTeamData;","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"            initialAddressData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"            //storage.saveAddressBook(initialAddressData);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"            teamBookOptional \u003d storage.readTeamBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"            if (!teamBookOptional.isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"                logger.info(\"Creating a new data file \" + storage.getTeamBookFilePath()","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"                        + \" populated with a sample TeamBook.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"            initialTeamData \u003d teamBookOptional.orElseGet(SampleDataUtil::getSampleTeamBook);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"            //storage.saveTeamBook(initialTeamData);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":112,"author":{"gitId":"StevenLiudw"},"content":"            initialAddressData \u003d new AddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"StevenLiudw"},"content":"            initialTeamData \u003d new TeamBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"StevenLiudw"},"content":"        return new ModelManager(initialAddressData, initialTeamData, userPrefs);","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JizhuoChen":1,"StevenLiudw":26,"-":180,"adhigop13":3}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the TeamBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    ReadOnlyTeamBook getTeamBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    /** Returns an unmodifiable view of the filtered list of teams */","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"    ObservableList\u003cTeam\u003e getFilteredTeamList();","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the user prefs\u0027 team book file path.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    Path getTeamBookFilePath();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Tang-Moyan"},"content":"    Person getPersonByIdentityCode(IdentityCode id);","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"erohsikivar":1,"StevenLiudw":13,"Tang-Moyan":3,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"        commandResult \u003d command.execute(model); //command.execute() returns a CommandResult object","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"            storage.saveTeamBook(model.getTeamBook());","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"    public ReadOnlyTeamBook getTeamBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"        return model.getTeamBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"    public ObservableList\u003cTeam\u003e getFilteredTeamList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"        return model.getFilteredTeamList();","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"    public Path getTeamBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"        return model.getTeamBookFilePath();","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"Tang-Moyan"},"content":"    public Person getPersonByIdentityCode(IdentityCode id) {","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"Tang-Moyan"},"content":"        return model.getPersonByIdentityCode(id);","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"JizhuoChen":1,"erohsikivar":1,"StevenLiudw":14,"Tang-Moyan":6,"-":86,"adhigop13":1}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"    public static final String MESSAGE_INVALID_PERSON \u003d \"This person does not exist!\";","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    public static final String MESSAGE_TEAM_LEADER_IDENTITY_CODE_RETRIEVED \u003d \"The team leader listed!\";","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    public static final String MESSAGE_TEAM_NOT_FOUND \u003d \"The team is not found!\";","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"    public static final String MESSAGE_INVALID_TEAM_NAME_DISPLAYED \u003d \"The team name provided is invalid!\";","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"    public static final String MESSAGE_INVALID_PERSON_IN_TEAM \u003d \"The team does not have the developer you mentioned!\";","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    public static final String MESSAGE_PERSON_LISTED_OVERVIEW \u003d \"%1$d person listed!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    public static final String MESSAGE_TEAMS_LISTED_OVERVIEW \u003d \"%1$d teams listed!\";","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    public static final String MESSAGE_TEAM_LISTED_OVERVIEW \u003d \"%1$d team listed!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"     * @param duplicatePrefixes Array of prefixes that are duplicated.","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     * @return A formatted error message indicating which prefixes are duplicated.","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"     * Formats a given {@code Person} object for display to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"     * The formatting includes the person\u0027s name, phone, email, address, and associated tags.","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"     * @param person The person object to format.","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representation of the person object suitable for user display.","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"erohsikivar"},"content":"    //Update this after the uniqueteamlist class is implemented. Need a way to retrieve leader","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"erohsikivar"},"content":"    //name from the hashcode(which should be done in the new uniqueTeamList class)","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"    //Need to format a team to hold teamname, leadername and developer set for the structure.","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"     * Formats a given {@code Team} object for display to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"     * The formatting includes the team\u0027s name and the team leader\u0027s name.","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"     * @param team The team object to format.","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"     * @param leaderToAdd The name of the team leader to add to the display format.","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representation of the team object suitable for user display.","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"    public static String format(Team team, Name leaderToAdd) {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"        builder.append(team.getTeamName())","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"                .append(\"; LeaderName \")","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"                .append(leaderToAdd); //get leader name","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"     * Formats a message indicating a new member addition to a team.","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamToAddTo The team to which the member was added.","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"     * @param devToAddTo The developer name that was added to the team.","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string message indicating the addition of the developer to the team.","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"adhigop13"},"content":"    public static String format(String teamToAddTo, Name devToAddTo) {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"adhigop13"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"adhigop13"},"content":"        builder.append(teamToAddTo)","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"adhigop13"},"content":"                .append(\" got a new member! Hello \")","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"adhigop13"},"content":"                .append(devToAddTo);","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"adhigop13"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"     * Formats a message indicating a team name change.","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"     * @param originalTeamName The original name of the team.","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"StevenLiudw"},"content":"     * @param newTeamName The new name of the team.","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string message indicating the team\u0027s name change.","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"Tang-Moyan"},"content":"    public static String editTeamNameFormat(String originalTeamName, String newTeamName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"Tang-Moyan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"Tang-Moyan"},"content":"        builder.append(\"Original team: \")","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"Tang-Moyan"},"content":"                .append(originalTeamName)","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"Tang-Moyan"},"content":"                .append(\" changed its Team Name to: \")","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"Tang-Moyan"},"content":"                .append(newTeamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"Tang-Moyan"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"StevenLiudw"},"content":"     * Formats a message indicating a change in the team leader.","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamName The name of the team.","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"StevenLiudw"},"content":"     * @param originalTeamLeader The original team leader\u0027s name.","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"StevenLiudw"},"content":"     * @param newTeamLeader The new team leader\u0027s name.","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string message indicating the change in team leadership.","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"Tang-Moyan"},"content":"    public static String editTeamLeaderFormat(String teamName, Name originalTeamLeader, Name newTeamLeader) {","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"Tang-Moyan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"Tang-Moyan"},"content":"        builder.append(\"Team: \")","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"Tang-Moyan"},"content":"                .append(teamName)","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"Tang-Moyan"},"content":"                .append(\" changed its Team Leader from: \")","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"Tang-Moyan"},"content":"                .append(originalTeamLeader.toString())","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"Tang-Moyan"},"content":"                .append(\" to: \")","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"Tang-Moyan"},"content":"                .append(newTeamLeader.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"Tang-Moyan"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"erohsikivar":8,"StevenLiudw":43,"Tang-Moyan":19,"-":50,"adhigop13":20}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":" * Represents an AddCommand with the associated logic and the ability to be executed.","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]\"","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"            + PREFIX_REMARK + \"likes to swim \"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs an {@code AddCommand} to add the specified person to the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"     * @param person The person to be added.","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the AddCommand, adding a person to the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"     * @param model The current state of the application model.","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"     * @return A CommandResult indicating the result of executing this command on the given model.","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"     * @throws CommandException if the person already exists in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"     * Checks whether another object is equal to this AddCommand.","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"     * @return true if the other object is an AddCommand with the same person details, false otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"     * Returns a string representation of this AddCommand, including the person\u0027s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representing this command, including the person\u0027s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":2,"StevenLiudw":22,"-":81,"adhigop13":1}},{"path":"src/main/java/seedu/address/logic/commands/AddDevCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":" * Represents an AddDevCommand with the associated logic and the ability to be executed.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":" * Adds a developer to the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"public class AddDevCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    public static final String COMMAND_WORD \u003d \"newdev\";","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a developer to the Team. \"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New developer added: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This developer already exists in the team\";","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    private final Person devToAdd;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs an {@code AddDevCommand} to add the specified developer to the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     * @param person The developer to be added.","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"    public AddDevCommand(Person person) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        devToAdd \u003d person;","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the AddDevCommand, adding a developer to the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"     * @param model The current state of the application model.","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"     * @return A CommandResult indicating the result of executing this command on the given model.","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"     * @throws CommandException if the developer already exists in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"        if (model.hasPerson(devToAdd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"        model.addPerson(devToAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(devToAdd)));","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"     * Checks whether another object is equal to this AddDevCommand.","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"     * @return true if the other object is an AddDevCommand with the same developer details, false otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"        if (!(other instanceof AddDevCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"        AddDevCommand otherAddCommand \u003d (AddDevCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"        return devToAdd.equals(otherAddCommand.devToAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"     * Returns a string representation of this AddDevCommand, including the developer\u0027s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representing this command, including the developer\u0027s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"adhigop13"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"adhigop13"},"content":"                .add(\"devToAdd\", devToAdd)","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"adhigop13"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"StevenLiudw":23,"adhigop13":82}},{"path":"src/main/java/seedu/address/logic/commands/AddDevToTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.commands.AddTeamCommand.MESSAGE_INVALID_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":" * Represents an AddDevToTeam command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":" * Adds a developer to a team in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"public class AddDevToTeamCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    public static final String COMMAND_WORD \u003d \"dev2team\";","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds this developer to the Team. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_TEAMNAME + \"Team Name \"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_NAME + \"Developer Name \"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"            + \"\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_TEAMNAME + \"ABC \"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New developer added: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This developer already exists in this team!\";","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"    public static final String MESSAGE_INVALID_TEAM \u003d \"This team does not exists!\";","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"    private static final String MESSAGE_TEAMLEADER_ADD_DEV \u003d \"The leader of team cannot be added as a developer!\";","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"    private final Name devToAdd;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    private final String teamToAddTo;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs an {@code AddDevToTeamCommand} to add the specified developer to a team.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamName The name of the team to which the developer will be added.","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * @param developer The developer\u0027s name that will be added to the team.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"    public AddDevToTeamCommand(String teamName, Name developer) {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(developer);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"        this.devToAdd \u003d developer;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        this.teamToAddTo \u003d teamName;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the AddDevToTeamCommand, adding a developer to a specified team.","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"     * @param model The current state of the application model.","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"     * @return A CommandResult indicating the result of executing this command on the given model.","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"     * @throws CommandException if the team doesn\u0027t exist, the developer is already in the team,","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"     *          or the developer doesn\u0027t exist.","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"        //duplicate or team does not exist","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"        if (!model.invalidAddToTeam(teamToAddTo)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"            throw new CommandException(MESSAGE_INVALID_TEAM);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"erohsikivar"},"content":"        } else if (!model.containsPerson(devToAdd)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"        } else if (model.personAlreadyInTeam(teamToAddTo, devToAdd)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"        } else if (model.isLeaderOfTeam(teamToAddTo, devToAdd)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"            throw new CommandException(MESSAGE_TEAMLEADER_ADD_DEV);","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"            model.addToTeam(teamToAddTo, devToAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(teamToAddTo, devToAdd)));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"     * Checks whether another object is equal to this AddDevToTeamCommand.","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"     * @param other the object to compare with.","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"     * @return true if the other object is an AddDevToTeamCommand with the same developer name, false otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"        if (!(other instanceof AddDevToTeamCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"adhigop13"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"adhigop13"},"content":"        AddDevToTeamCommand otherAddCommand \u003d (AddDevToTeamCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"adhigop13"},"content":"        return devToAdd.equals(otherAddCommand.devToAdd) \u0026\u0026 teamToAddTo.equals(otherAddCommand.teamToAddTo);","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"     * Returns a string representation of this AddDevToTeamCommand, including the developer\u0027s name.","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representing this command, including the developer\u0027s name.","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"adhigop13"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"adhigop13"},"content":"                .add(\"devToAdd\", devToAdd)","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"adhigop13"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"JizhuoChen":1,"erohsikivar":3,"StevenLiudw":23,"Tang-Moyan":1,"adhigop13":84}},{"path":"src/main/java/seedu/address/logic/commands/AddTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMLEADER;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":" * Represents an AddTeamCommand with the associated logic to create and add a new team.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"public class AddTeamCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    public static final String COMMAND_WORD \u003d \"newteam\";","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a new team. \"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_TEAMNAME + \"TeamName \"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_TEAMLEADER + \"TeamLeader \"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_TEAMNAME + \"ABC \"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"            + PREFIX_TEAMLEADER + \"JOHN DOE \";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New team added: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_DUPLICATE_TEAM \u003d \"This team already exists in the project. Choose a new name!\";","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_INVALID_PERSON \u003d \"This person does not exist!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"    private String teamToAdd;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"    private Name leaderToAdd;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"    private IdentityCode teamLeaderIdentityCode;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs an {@code AddTeamCommand} to add the specified team with a given team leader.","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamName The name of the team to be added.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamLeader The name of the team leader for the team.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"    public AddTeamCommand(String teamName, Name teamLeader) {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(teamLeader);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"        teamToAdd \u003d teamName;","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"        leaderToAdd \u003d teamLeader;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the AddTeamCommand by adding a new team to the model.","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"     * @param model The current state of the application model.","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"     * @return A CommandResult indicating the result of executing this command on the given model.","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"     * @throws CommandException if the person does not exist in the model or if the team already exists.","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"        //if person doesn\u0027t exist in the persons list, throw invalid person message","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"erohsikivar"},"content":"        if (!model.containsPerson(leaderToAdd)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"        if (model.hasTeam(teamToAdd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TEAM);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"        //gets the Person object of leader, then his identity code","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"        IdentityCode teamLeaderIdentityCode \u003d model.getPersonByName(leaderToAdd).getIdentityCode();","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"        Team team \u003d new Team(teamLeaderIdentityCode, teamToAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"        model.addTeam(team);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(team, leaderToAdd)));","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"     * Checks whether another object is equal to this AddTeamCommand.","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"     * @return true if the other object is an AddTeamCommand with the same team name, false otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"        if (!(other instanceof AddTeamCommand)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"adhigop13"},"content":"        AddTeamCommand otherAddCommand \u003d (AddTeamCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"adhigop13"},"content":"        return teamToAdd.equals(otherAddCommand.teamToAdd) \u0026\u0026 leaderToAdd.equals(otherAddCommand.leaderToAdd);","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"     * Returns a string representation of this AddTeamCommand, primarily the team\u0027s name.","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representing this command, including the team\u0027s name.","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"adhigop13"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"adhigop13"},"content":"                .add(\"teamToAdd\", teamToAdd)","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"adhigop13"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"erohsikivar":6,"StevenLiudw":23,"adhigop13":80}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.TeamBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        model.setTeamBook(new TeamBook());","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":23,"adhigop13":3}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    /** The application should list all teams. */","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"    private final boolean listTeam;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"    /** The application should list all persons. */","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    private final boolean listPerson;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"    /** The application should show the Tree */","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    private final boolean showTree;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    /** The application should show the Persons found */","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    private final boolean findPerson;","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    /** The application should show the Teams found */","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    private final boolean findTeam;","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"                         boolean listTeam, boolean listPerson, boolean showTree, boolean findPerson, boolean findTeam) {","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"        this.listTeam \u003d listTeam;","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"        this.listPerson \u003d listPerson;","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"        this.showTree \u003d showTree;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"        this.findPerson \u003d findPerson;","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        this.findTeam \u003d findTeam;","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        this(feedbackToUser, false, false, false, false, false, false, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"    public boolean isListTeam() {","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"JizhuoChen"},"content":"        return listTeam;","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"    public boolean isListPerson() {","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"        return listPerson;","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"    public boolean isShowTree() {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"        return showTree;","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"    public boolean isFindPerson() {","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"        return findPerson;","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"    public boolean isFindTeam() {","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"        return findTeam;","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"                \u0026\u0026 listTeam \u003d\u003d otherCommandResult.listTeam","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"JizhuoChen"},"content":"                \u0026\u0026 listPerson \u003d\u003d otherCommandResult.listPerson","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"                \u0026\u0026 showTree \u003d\u003d otherCommandResult.showTree","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"                \u0026\u0026 findPerson \u003d\u003d otherCommandResult.findPerson","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"                \u0026\u0026 findTeam \u003d\u003d otherCommandResult.findTeam;","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"StevenLiudw"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, listTeam, listPerson, showTree, findPerson, findTeam);","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"JizhuoChen"},"content":"                .add(\"listTeam\", listTeam)","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"JizhuoChen"},"content":"                .add(\"listPerson\", listPerson)","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"JizhuoChen"},"content":"                .add(\"showTree\", showTree)","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"StevenLiudw"},"content":"                .add(\"findPerson\", findPerson)","lastModifiedDate":"2023-11-04"},{"lineNumber":125,"author":{"gitId":"StevenLiudw"},"content":"                .add(\"findTeam\", findTeam)","lastModifiedDate":"2023-11-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":31,"StevenLiudw":20,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":" * Represents a DeleteCommand with the associated logic to delete a person based on their displayed index.","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"    public static final String MESSAGE_TEAM_LEADER_CANNOT_BE_DELETED \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"            \"The developer you have mentioned is a team leader, you can only edit team leader.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"    public static final String MESSAGE_DELETE_PERSON_FROM_ALL_TEAMS \u003d \"Deleted Person : %1$s from all the teams.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs an {@code DeleteCommand} to delete the person identified by the specified index.","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     * @param targetIndex The index of the person to be deleted.","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the DeleteCommand by deleting the person identified by the target index from the model.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * @param model The current state of the application model.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     * @return A CommandResult indicating the result of executing this command on the given model.","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     * @throws CommandException if the target index is invalid for the current list of displayed persons.","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"erohsikivar"},"content":"        IdentityCode personID \u003d personToDelete.getIdentityCode();","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"erohsikivar"},"content":"        if (model.developerIsTeamLeader(personID)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"erohsikivar"},"content":"            throw new CommandException(MESSAGE_TEAM_LEADER_CANNOT_BE_DELETED);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"erohsikivar"},"content":"        } else if (model.removeDeveloperFromAllTeams(personID)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"erohsikivar"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"erohsikivar"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"erohsikivar"},"content":"                    MESSAGE_DELETE_PERSON_FROM_ALL_TEAMS, Messages.format(personToDelete)));","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"erohsikivar"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"     * Checks whether another object is equal to this DeleteCommand.","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"     * @return true if the other object is a DeleteCommand with the same target index, false otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"     * Returns a string representation of this DeleteCommand, primarily indicating the target index.","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representing this command, including the target index.","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"erohsikivar":12,"StevenLiudw":24,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/DeleteDeveloperFromTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"erohsikivar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":" * Represents a DeleteDeveloperFromTeamCommand with the associated logic to remove a developer from a team.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"erohsikivar"},"content":"public class DeleteDeveloperFromTeamCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"erohsikivar"},"content":"    public static final String COMMAND_WORD \u003d \"deletedev\";","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"            + \": Deletes the developer identified by the their name and team name used in the displayed team list.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"            + PREFIX_TEAMNAME + \"Team Name \"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"            + PREFIX_NAME + \"Developer Name \\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"            + \"Example: \" + COMMAND_WORD + PREFIX_TEAMNAME + \"Team Alpha \" + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"    public static final String MESSAGE_DELETE_DEVELOPER_FROM_TEAM_SUCCESS \u003d \"Deleted developer from team: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"erohsikivar"},"content":"    private final Name developerToDelete;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"erohsikivar"},"content":"    private final String teamName;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs an {@code DeleteDeveloperFromTeamCommand} to delete the developer identified by the provided name","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     * from the specified team.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamName The name of the team from which the developer is to be removed.","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     * @param developerToDelete The name of the developer to be removed from the team.","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"erohsikivar"},"content":"    public DeleteDeveloperFromTeamCommand(String teamName, Name developerToDelete) {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"erohsikivar"},"content":"        this.developerToDelete \u003d developerToDelete;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"erohsikivar"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the DeleteDeveloperFromTeamCommand by removing the specified developer from the given team in the model.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     * @param model The current state of the application model.","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     * @return A CommandResult indicating the result of executing this command on the given model.","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"     * @throws CommandException if the team name or developer name is invalid","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"     *          ,or if the developer is not part of the team.","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"erohsikivar"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"erohsikivar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"erohsikivar"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"erohsikivar"},"content":"        IdentityCode developerIndentityCode \u003d model.getIdentityCodeByName(developerToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"erohsikivar"},"content":"        if (!model.hasTeam(teamName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"erohsikivar"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TEAM_NAME_DISPLAYED);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"erohsikivar"},"content":"        } else if (!model.containsPerson(developerToDelete)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"erohsikivar"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"        } else if (!model.personAlreadyInTeam(teamName, developerToDelete)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"erohsikivar"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_IN_TEAM);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"erohsikivar"},"content":"        } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"erohsikivar"},"content":"            model.deleteDeveloperFromTeam(teamName, developerIndentityCode);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"erohsikivar"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_DEVELOPER_FROM_TEAM_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"erohsikivar"},"content":"                    developerToDelete.toString()));","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"erohsikivar"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"erohsikivar":50,"StevenLiudw":16,"adhigop13":3}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"erohsikivar"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":" * Represents a DeleteTeamCommand with the associated logic to remove a team.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"erohsikivar"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"public class DeleteTeamCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"    public static final String COMMAND_WORD \u003d \"deleteteam\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"            + \": Deletes the team identified by the team name used in the displayed team list.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"            + PREFIX_TEAMNAME + \"Team Name \\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"            + \"Example: \" + COMMAND_WORD + PREFIX_TEAMNAME + \" Team Alpha\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"    public static final String MESSAGE_DELETE_TEAM_SUCCESS \u003d \"Deleted Team: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"erohsikivar"},"content":"    private final String teamToDelete;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs an {@code DeleteTeamCommand} to delete the team identified by the provided name.","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamToDelete The name of the team to be deleted.","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"erohsikivar"},"content":"    public DeleteTeamCommand(String teamToDelete) {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"erohsikivar"},"content":"        this.teamToDelete \u003d teamToDelete;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the DeleteTeamCommand by removing the specified team from the model.","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     * @param model The current state of the application model.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     * @return A CommandResult indicating the result of executing this command on the given model.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * @throws CommandException if the team name is invalid.","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"erohsikivar"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"erohsikivar"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"erohsikivar"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"erohsikivar"},"content":"        List\u003cTeam\u003e lastShownList \u003d model.getFilteredTeamList();","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"erohsikivar"},"content":"        if (!model.hasTeam(teamToDelete)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"erohsikivar"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TEAM_NAME_DISPLAYED);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"erohsikivar"},"content":"        model.deleteTeam(teamToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"erohsikivar"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TEAM_SUCCESS, teamToDelete));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"     * Compares this command with another object for equality.","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"     * @return true if the objects are the same or equal, false otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"erohsikivar"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"erohsikivar"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"erohsikivar"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"erohsikivar"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"erohsikivar"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"erohsikivar"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"erohsikivar"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"erohsikivar"},"content":"        DeleteTeamCommand otherDeleteTeamCommandCommand \u003d (DeleteTeamCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"erohsikivar"},"content":"        return teamToDelete.equals(otherDeleteTeamCommandCommand.teamToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"     * Generates a string representation of this command.","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representing the team name to delete.","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"erohsikivar"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"erohsikivar"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"erohsikivar"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"erohsikivar"},"content":"                .add(\"teamToDelete\", teamToDelete)","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"erohsikivar"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"erohsikivar"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"erohsikivar":66,"StevenLiudw":24}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"JizhuoChen"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"Tang-Moyan"},"content":"        IdentityCode identityCode \u003d personToEdit.getIdentityCode();","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"Tang-Moyan"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"Tang-Moyan"},"content":"                updatedRemark, updatedTags, identityCode);","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"JizhuoChen"},"content":"        private Remark remark;","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"JizhuoChen"},"content":"            setRemark((toCopy.remark));","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"JizhuoChen"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"JizhuoChen"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-10-15"},{"lineNumber":205,"author":{"gitId":"JizhuoChen"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"JizhuoChen"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"JizhuoChen"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":244,"author":{"gitId":"JizhuoChen"},"content":"                    \u0026\u0026 Objects.equals(remark, otherEditPersonDescriptor.remark)","lastModifiedDate":"2023-10-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":255,"author":{"gitId":"JizhuoChen"},"content":"                    .add(\"remark\", remark)","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"JizhuoChen":15,"StevenLiudw":2,"Tang-Moyan":3,"-":240}},{"path":"src/main/java/seedu/address/logic/commands/EditTeamLeaderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMLEADER;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEAMS;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":" * The type Edit team leader command.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"Tang-Moyan"},"content":"public class EditTeamLeaderCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":"    public static final String COMMAND_WORD \u003d \"editTeamLeader\";","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Tang-Moyan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the Team Leader of the team \"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Tang-Moyan"},"content":"            + \"identified by its Team Name. \"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Tang-Moyan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Tang-Moyan"},"content":"            + PREFIX_TEAMNAME + \"Team Name \"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":"            + PREFIX_TEAMLEADER + \"Team Leader Name\"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Tang-Moyan"},"content":"            + \"\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"            + PREFIX_TEAMNAME + \"Alpha team \"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"            + PREFIX_TEAMLEADER + \"Bob\";","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Tang-Moyan"},"content":"    public static final String MESSAGE_EDIT_TEAM_LEADER_SUCCESS \u003d \"Edited Team Leader: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"Your new Team Leader should be different from \"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"           + \"your original Team Leader.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_TEAM_LEADER_NOT_FOUND \u003d \"Cannot find the developer with this Name\"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"           + \" in the Address book.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_TEAM_NOT_FOUND \u003d \"Cannot find the team with this Team Name\"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"           + \" in the Team book.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Tang-Moyan"},"content":"    private final String teamName;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"    private final Name newTeamLeaderName;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"     * Instantiates a new Edit team leader command.","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"     * @param teamName          the team name","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"     * @param newTeamLeaderName the new team leader name","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"Tang-Moyan"},"content":"    public EditTeamLeaderCommand(String teamName, Name newTeamLeaderName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(newTeamLeaderName);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Tang-Moyan"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Tang-Moyan"},"content":"        this.newTeamLeaderName \u003d newTeamLeaderName;","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Tang-Moyan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Tang-Moyan"},"content":"        if (!model.hasTeam(teamName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Tang-Moyan"},"content":"            throw new CommandException(MESSAGE_TEAM_NOT_FOUND);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"erohsikivar"},"content":"        if (!model.containsPerson(newTeamLeaderName)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Tang-Moyan"},"content":"            throw new CommandException(MESSAGE_TEAM_LEADER_NOT_FOUND);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Tang-Moyan"},"content":"        Name originalTeamLeaderName \u003d model.getTeamLeaderOfTeam(teamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Tang-Moyan"},"content":"        if (originalTeamLeaderName.equals(newTeamLeaderName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Tang-Moyan"},"content":"            throw new CommandException(MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"Tang-Moyan"},"content":"        IdentityCode newTeamLeaderID \u003d model.getIdentityCodeByName(newTeamLeaderName);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"Tang-Moyan"},"content":"        model.setTeamLeaderOfTeam(teamName, newTeamLeaderID);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"Tang-Moyan"},"content":"        model.updateFilteredTeamList(PREDICATE_SHOW_ALL_TEAMS);","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Tang-Moyan"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TEAM_LEADER_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"Tang-Moyan"},"content":"                Messages.editTeamLeaderFormat(teamName, originalTeamLeaderName, newTeamLeaderName)));","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Tang-Moyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Tang-Moyan"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Tang-Moyan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Tang-Moyan"},"content":"        if (!(other instanceof EditTeamLeaderCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Tang-Moyan"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"Tang-Moyan"},"content":"        EditTeamLeaderCommand otherEditCommand \u003d (EditTeamLeaderCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"Tang-Moyan"},"content":"        return teamName.equals(otherEditCommand.teamName)","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"Tang-Moyan"},"content":"                \u0026\u0026 newTeamLeaderName.equals(otherEditCommand.newTeamLeaderName);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"Tang-Moyan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Tang-Moyan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"Tang-Moyan"},"content":"                .add(\"Team Name\", teamName)","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"Tang-Moyan"},"content":"                .add(\"New Team Leader Name\", newTeamLeaderName)","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"Tang-Moyan"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"Tang-Moyan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"erohsikivar":1,"Tang-Moyan":87,"adhigop13":17}},{"path":"src/main/java/seedu/address/logic/commands/EditTeamNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEAMS;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":" * The type Edit team name command.","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"public class EditTeamNameCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":"    public static final String COMMAND_WORD \u003d \"editTeamName\";","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Tang-Moyan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the Team Name of the team \"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":"            + \"identified by its original Team Name. \"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Tang-Moyan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Tang-Moyan"},"content":"            + PREFIX_TEAMNAME + \"Original Team Name \"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Tang-Moyan"},"content":"            + PREFIX_TEAMNAME + \"New Team Name\"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Tang-Moyan"},"content":"            + \"\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Tang-Moyan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":"            + PREFIX_TEAMNAME + \"Alpha team \"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Tang-Moyan"},"content":"            + PREFIX_TEAMNAME + \"Beta team\";","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"    public static final String MESSAGE_EDIT_TEAM_NAME_SUCCESS \u003d \"Edited Team Name: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"Your new Team Name should be different from \"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"           + \"your original Team Name.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"Tang-Moyan"},"content":"    public static final String MESSAGE_DUPLICATE_TEAM_NAME \u003d \"This Team Name already exists in the Team book.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    public static final String MESSAGE_TEAM_NOT_FOUND \u003d \"Cannot find the team with this original Team Name\"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"          + \" in the Team book.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"    private final String originalTeamName;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"    private final String newTeamName;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"     * Instantiates a new Edit team name command.","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"     * @param originalTeamName the original team name","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"     * @param newTeamName      the new team name","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"    public EditTeamNameCommand(String originalTeamName, String newTeamName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(originalTeamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(newTeamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Tang-Moyan"},"content":"        this.originalTeamName \u003d originalTeamName;","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Tang-Moyan"},"content":"        this.newTeamName \u003d newTeamName;","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Tang-Moyan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Tang-Moyan"},"content":"        if (!model.hasTeam(originalTeamName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Tang-Moyan"},"content":"            throw new CommandException(MESSAGE_TEAM_NOT_FOUND);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Tang-Moyan"},"content":"        if (model.hasTeam(newTeamName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Tang-Moyan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TEAM_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Tang-Moyan"},"content":"        if (originalTeamName.equals(newTeamName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Tang-Moyan"},"content":"            throw new CommandException(MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Tang-Moyan"},"content":"        model.editTeamName(originalTeamName, newTeamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Tang-Moyan"},"content":"        model.updateFilteredTeamList(PREDICATE_SHOW_ALL_TEAMS);","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Tang-Moyan"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TEAM_NAME_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Tang-Moyan"},"content":"                Messages.editTeamNameFormat(originalTeamName, newTeamName)));","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"Tang-Moyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Tang-Moyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Tang-Moyan"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Tang-Moyan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"Tang-Moyan"},"content":"        if (!(other instanceof EditTeamNameCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"Tang-Moyan"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Tang-Moyan"},"content":"        EditTeamNameCommand otherEditCommand \u003d (EditTeamNameCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Tang-Moyan"},"content":"        return originalTeamName.equals(otherEditCommand.originalTeamName)","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Tang-Moyan"},"content":"                \u0026\u0026 newTeamName.equals(otherEditCommand.newTeamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"Tang-Moyan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"Tang-Moyan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"Tang-Moyan"},"content":"                .add(\"Original Team Name\", originalTeamName)","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"Tang-Moyan"},"content":"                .add(\"New Team Name\", newTeamName)","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Tang-Moyan"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Tang-Moyan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Tang-Moyan":83,"adhigop13":13}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"                false, true, false, false, false, false, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JizhuoChen":1,"StevenLiudw":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"        if (model.getFilteredPersonList().size() \u003c\u003d 1) {","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"            return new CommandResult(","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"                    String.format(Messages.MESSAGE_PERSON_LISTED_OVERVIEW, model.getFilteredPersonList().size()),","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"                    false, false, false, false, false, true, false);","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()),","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, false, false, true, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"StevenLiudw":7,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/FindTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.team.TeamContainsKeywordsPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":" * The type Find team command.","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class FindTeamCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    public static final String COMMAND_WORD \u003d \"findteam\";","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all teams whose names contain any of \"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"            + \"Example: \" + COMMAND_WORD + \" alpha beta gamma\";","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    private final TeamContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    public FindTeamCommand(TeamContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"        model.updateFilteredTeamList(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        if (model.getFilteredTeamList().size() \u003c\u003d 1) {","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"            return new CommandResult(","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"                    String.format(Messages.MESSAGE_TEAM_LISTED_OVERVIEW, model.getFilteredTeamList().size()),","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"                    false, false, false, false, false, false, true);","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"                String.format(Messages.MESSAGE_TEAMS_LISTED_OVERVIEW, model.getFilteredTeamList().size()),","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, false, false, false, true);","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        if (!(other instanceof FindTeamCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        FindTeamCommand otherFindTeamCommand \u003d (FindTeamCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        return predicate.equals(otherFindTeamCommand.predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"StevenLiudw":61,"adhigop13":3}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"(Opened help window.)\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"            + \"Command summary: \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"            //+ \"  -\u003e Hi\\n\"","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e add + n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e delete + INDEX\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"            + \"  -\u003e edit + \"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"            + \"INDEX (must be a positive integer) [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [r/REMARK] [t/TAG]\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e remark + INDEX (must be a positive integer) r/[REMARK]\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e list\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e newteam + tn/TeamName tl/TeamLeader Example: newteam tn/ABC tl/JOHN DOE\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e deleteteam + tn/Team Name\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e editTeamLeader + tn/Team Name tl/Team Leader Name\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e editTeamName + tn/Original Team Name tn/New Team Name\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e dev2team + tn/Team Name n/Developer Name\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e deletedev + tn/Team Name n/Developer Name\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e listt\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e clear (CAUTION! using the clear command might result in unintended loss of data!)\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"            + \"  -\u003e find + KEYWORD [MORE_KEYWORDS]\\n\";","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"    //+ \"  -\u003e findteam + KEYWORD [MORE_KEYWORDS]\\n\";","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE,","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"                true, false, false, false, false, false, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":18,"erohsikivar":2,"StevenLiudw":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"        return new CommandResult(MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, true, false, false, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":1,"StevenLiudw":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/ListTeamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEAMS;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":" * Lists all Teams in the address book to the user.","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"public class ListTeamCommand extends Command {","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    public static final String COMMAND_WORD \u003d \"listt\";","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all teams\";","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"     * Create a CommandResult instance, which the Ui will operate base on.","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"     * @return a CommandResult instance, which the Ui will operate base on.","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"        model.updateFilteredTeamList(PREDICATE_SHOW_ALL_TEAMS);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true, false, false, false, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"JizhuoChen":29,"StevenLiudw":1}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"import java.util.List;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"    private final Index index;","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags(), personToEdit.getIdentityCode());","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"        model.updateFilteredPersonList(model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"        // short circuit if same object","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"            return true;","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"            return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"        // state check","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"JizhuoChen"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"JizhuoChen"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"JizhuoChen"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"JizhuoChen"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"JizhuoChen":88,"erohsikivar":4}},{"path":"src/main/java/seedu/address/logic/commands/TreeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":" * Show the linked Tree to the user.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"public class TreeCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"    public static final String COMMAND_WORD \u003d \"tree\";","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Showing LinkTree !!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"        return new CommandResult(MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, false, true, false, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"JizhuoChen":22,"StevenLiudw":1}},{"path":"src/main/java/seedu/address/logic/commands/WelcomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"public class WelcomeCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    public static final String COMMAND_WORD \u003d \"Hi\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"        String strDate \u003d formatter.format(date);","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        String welcomeMessage \u003d \"Welcome from Linktree, Current date and time: \" + strDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        return new CommandResult(welcomeMessage);","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"StevenLiudw":19,"Tang-Moyan":4}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"                        PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"        String optionalRemark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"        Person person;","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"        if (optionalRemark !\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"            Remark remark \u003d ParserUtil.parseRemark(optionalRemark);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"            person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"            person \u003d new Person(name, phone, email, address, new Remark(\"\"), tagList);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"JizhuoChen":12,"erohsikivar":1,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddDevCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.AddDevCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"public class AddDevCommandParser implements Parser\u003cAddDevCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"    public AddDevCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDevCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"        return new AddDevCommand(person);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"adhigop13":63}},{"path":"src/main/java/seedu/address/logic/parser/AddDevToTeamParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.AddDevToTeamCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"public class AddDevToTeamParser implements Parser\u003cAddDevToTeamCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    public AddDevToTeamCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TEAMNAME, PREFIX_NAME);","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TEAMNAME, PREFIX_NAME)","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDevToTeamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TEAMNAME, PREFIX_NAME);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"        // Should it be parseTeamName here? Instead of parseName?","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d ParserUtil.parseTeamName(argMultimap.getValue(PREFIX_TEAMNAME).get());","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        Name devToAdd \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"        return new AddDevToTeamCommand(teamName, devToAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Tang-Moyan":1,"adhigop13":47}},{"path":"src/main/java/seedu/address/logic/parser/AddTeamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMLEADER;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.AddTeamCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"public class AddTeamCommandParser implements Parser\u003cAddTeamCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    public AddTeamCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TEAMNAME, PREFIX_TEAMLEADER);","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TEAMNAME, PREFIX_TEAMLEADER)","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTeamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TEAMNAME, PREFIX_TEAMLEADER);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        //returns the string representation of team","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d ParserUtil.parseTeamName(argMultimap.getValue(PREFIX_TEAMNAME).get());","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        Name teamLeaderName \u003d ParserUtil.parseTeamLeader(argMultimap.getValue(PREFIX_TEAMLEADER).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"        return new AddTeamCommand(teamName, teamLeaderName);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"adhigop13":50}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.AddDevCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.AddDevToTeamCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.AddTeamCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.DeleteDeveloperFromTeamCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.DeleteTeamCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.EditTeamLeaderCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.EditTeamNameCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.FindTeamCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.ListTeamCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.commands.TreeCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.commands.WelcomeCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"        case AddDevCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"            return new AddDevCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"        case AddTeamCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"            return new AddTeamCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"        case AddDevToTeamCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"            return new AddDevToTeamParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"Tang-Moyan"},"content":"        case EditTeamNameCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Tang-Moyan"},"content":"            return new EditTeamNameCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Tang-Moyan"},"content":"        case EditTeamLeaderCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Tang-Moyan"},"content":"            return new EditTeamLeaderCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"erohsikivar"},"content":"        case DeleteTeamCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"erohsikivar"},"content":"            return new DeleteTeamCommandParser().parse(arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"erohsikivar"},"content":"        case DeleteDeveloperFromTeamCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"erohsikivar"},"content":"            return new DeleteDeveloperFromTeamParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"        case FindTeamCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"            return new FindTeamCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"JizhuoChen"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"JizhuoChen"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"JizhuoChen"},"content":"        case ListTeamCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"JizhuoChen"},"content":"            return new ListTeamCommand();","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":122,"author":{"gitId":"StevenLiudw"},"content":"        case WelcomeCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-27"},{"lineNumber":123,"author":{"gitId":"StevenLiudw"},"content":"            return new WelcomeCommand();","lastModifiedDate":"2023-09-27"},{"lineNumber":124,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":125,"author":{"gitId":"JizhuoChen"},"content":"        case TreeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"JizhuoChen"},"content":"            return new TreeCommand();","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":10,"erohsikivar":6,"Tang-Moyan":6,"StevenLiudw":6,"-":86,"adhigop13":19}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"        List\u003cPrefixPosition\u003e resultList \u003d Arrays.stream(prefixes)","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"        System.out.println(resultList);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"        return resultList;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"JizhuoChen":3,"-":147}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":"    public static final Prefix PREFIX_TEAMNAME \u003d new Prefix(\"tn/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    public static final Prefix PREFIX_TEAMLEADER \u003d new Prefix(\"tl/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JizhuoChen":1,"erohsikivar":1,"-":15,"adhigop13":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"erohsikivar":1,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteDeveloperFromTeamParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.commands.DeleteDeveloperFromTeamCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"erohsikivar"},"content":"public class DeleteDeveloperFromTeamParser implements Parser\u003cDeleteDeveloperFromTeamCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"erohsikivar"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteDeveloperFromTeamCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"    public DeleteDeveloperFromTeamCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"        // Parse the developerToDelete string into team name and developer name","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TEAMNAME, PREFIX_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"erohsikivar"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TEAMNAME, PREFIX_NAME)","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"erohsikivar"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"erohsikivar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"erohsikivar"},"content":"                    DeleteDeveloperFromTeamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"erohsikivar"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TEAMNAME, PREFIX_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"erohsikivar"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"erohsikivar"},"content":"            String teamName \u003d ParserUtil.parseTeamName(argMultimap.getValue(PREFIX_TEAMNAME).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"erohsikivar"},"content":"            Name developerName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"erohsikivar"},"content":"            return new DeleteDeveloperFromTeamCommand(teamName, developerName);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"erohsikivar"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"erohsikivar"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"erohsikivar"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDeveloperFromTeamCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"erohsikivar"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"erohsikivar"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"erohsikivar"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"erohsikivar"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"erohsikivar"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"erohsikivar":54}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTeamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.commands.DeleteTeamCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":" * Parses input arguments and creates a new DeleteTeamCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":"public class DeleteTeamCommandParser implements Parser\u003cDeleteTeamCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"erohsikivar"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTeamCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"    public DeleteTeamCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TEAMNAME);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TEAMNAME)","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"erohsikivar"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTeamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"erohsikivar"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TEAMNAME);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"erohsikivar"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"erohsikivar"},"content":"            String teamName \u003d ParserUtil.parseTeamName(argMultimap.getValue(PREFIX_TEAMNAME).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"erohsikivar"},"content":"            return new DeleteTeamCommand(teamName);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"erohsikivar"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"erohsikivar"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"erohsikivar"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTeamCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"erohsikivar"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"erohsikivar"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"erohsikivar"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix prefix) {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"erohsikivar"},"content":"        return Stream.of(prefix).anyMatch(prefixes -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"erohsikivar"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"erohsikivar":48}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"                        PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JizhuoChen":6,"erohsikivar":1,"-":84}},{"path":"src/main/java/seedu/address/logic/parser/EditTeamLeaderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMLEADER;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.logic.commands.EditTeamLeaderCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":" * Parses input arguments and creates a new EditTeamLeaderCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Tang-Moyan"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Tang-Moyan"},"content":"public class EditTeamLeaderCommandParser implements Parser\u003cEditTeamLeaderCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Tang-Moyan"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTeamLeaderCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Tang-Moyan"},"content":"     * and returns an EditTeamLeaderCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Tang-Moyan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":"    public EditTeamLeaderCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Tang-Moyan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TEAMNAME, PREFIX_TEAMLEADER);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TEAMNAME, PREFIX_TEAMLEADER)","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"                    EditTeamLeaderCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TEAMNAME, PREFIX_TEAMLEADER);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"        String teamName \u003d ParserUtil.parseTeamName(argMultimap.getValue(PREFIX_TEAMNAME).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"        Name newTeamLeader \u003d ParserUtil.parseTeamLeader(argMultimap.getValue(PREFIX_TEAMLEADER).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Tang-Moyan"},"content":"        return new EditTeamLeaderCommand(teamName, newTeamLeader);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Tang-Moyan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Tang-Moyan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Tang-Moyan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Tang-Moyan"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Tang-Moyan":47,"adhigop13":4}},{"path":"src/main/java/seedu/address/logic/parser/EditTeamNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAMNAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.logic.commands.EditTeamNameCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":" * Parses input arguments and creates a new EditTeamNameCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Tang-Moyan"},"content":"public class EditTeamNameCommandParser implements Parser\u003cEditTeamNameCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Tang-Moyan"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTeamNameCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Tang-Moyan"},"content":"     * and returns an EditTeamNameCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Tang-Moyan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Tang-Moyan"},"content":"    public EditTeamNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Tang-Moyan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TEAMNAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TEAMNAME)","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTeamNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Tang-Moyan"},"content":"        List\u003cString\u003e teamNames \u003d argMultimap.getAllValues(PREFIX_TEAMNAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"        if (teamNames.size() !\u003d 2) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTeamNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"        String originalTeamName \u003d ParserUtil.parseTeamName(teamNames.get(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Tang-Moyan"},"content":"        String newTeamName \u003d ParserUtil.parseTeamName(teamNames.get(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Tang-Moyan"},"content":"        return new EditTeamNameCommand(originalTeamName, newTeamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Tang-Moyan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Tang-Moyan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Tang-Moyan"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Tang-Moyan":52,"adhigop13":1}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"erohsikivar":1,"-":33}},{"path":"src/main/java/seedu/address/logic/parser/FindTeamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.logic.commands.FindTeamCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.team.TeamContainsKeywordsPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" * Parses input arguments and creates a new FindTeamCommand object","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class FindTeamCommandParser implements Parser\u003cFindTeamCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTeamCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     * and returns a FindTeamCommand object for execution.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    public FindTeamCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTeamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        String[] teamKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        return new FindTeamCommand(new TeamContainsKeywordsPredicate(Arrays.asList(teamKeywords)));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"StevenLiudw":34}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"erohsikivar":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"     * Parses a {@code String remark} into an {@code remark}.","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"JizhuoChen"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"JizhuoChen"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"JizhuoChen"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"JizhuoChen"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"JizhuoChen"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"erohsikivar"},"content":"     * Parse team name string.","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"erohsikivar"},"content":"     * @param name the name","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"erohsikivar"},"content":"     * @return the string","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"erohsikivar"},"content":"     * @throws ParseException the parse exception","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"erohsikivar"},"content":"    public static String parseTeamName(String name) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"erohsikivar"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"erohsikivar"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"erohsikivar"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"erohsikivar"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"erohsikivar"},"content":"        return trimmedName;","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"adhigop13"},"content":"     * Parses a {@code String teamLeader} into an {@code TeamLeader}.","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"adhigop13"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"adhigop13"},"content":"     * @throws ParseException if the given {@code TeamLeader} is invalid.","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"adhigop13"},"content":"    public static Name parseTeamLeader(String teamLeader) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(teamLeader);","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"adhigop13"},"content":"        String trimmedTeamLeader \u003d teamLeader.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"adhigop13"},"content":"        Name teamLeaderName \u003d parseName(trimmedTeamLeader);","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"adhigop13"},"content":"        return teamLeaderName;","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JizhuoChen":16,"erohsikivar":15,"-":124,"adhigop13":12}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"        Index index;","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"        try {","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"JizhuoChen":36,"erohsikivar":2}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"     * Checks if the addressbook contains the given person based on their name.","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"     * @param name the name","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"erohsikivar"},"content":"    public boolean containsPerson(Name name) {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"erohsikivar"},"content":"        return persons.containsName(name);","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"erohsikivar"},"content":"    public Person getPersonByName(Name name) {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"erohsikivar"},"content":"        return persons.getPerson(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Tang-Moyan"},"content":"    public Person getPersonByIdentityCode(IdentityCode identityCode) {","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Tang-Moyan"},"content":"        return persons.getPerson(identityCode);","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"adhigop13"},"content":"    //// teams-level operations----------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"erohsikivar":6,"Tang-Moyan":7,"-":128,"adhigop13":12}},{"path":"src/main/java/seedu/address/model/IdentityCodeManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":" * Manages the generation and updating of unique identity codes for persons in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" * This ensures that each person has a unique identity code.","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"public class IdentityCodeManager {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"    private static int currentMaxID \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"     * Provides the next unique identity code.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"     * @return The next available identity code.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    public static int getNextIdentityCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        return ++currentMaxID;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     * Updates the maximum identity code value based on the given list of persons.","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     * This ensures that the identity code remains unique as persons are added or removed.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     * @param persons List of persons to determine the current maximum identity code.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    public static void updateMaxID(List\u003cPerson\u003e persons) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        currentMaxID \u003d persons.stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"                .mapToInt(person -\u003e person.getIdentityCode().getValue())","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"                .max()","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"                .orElse(0);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"StevenLiudw":35}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    Predicate\u003cTeam\u003e PREDICATE_SHOW_ALL_TEAMS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"     * @param userPrefs the user prefs","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"     * @return the user prefs","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"     * @return the gui settings","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"     * @param guiSettings the gui settings","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"     * @return the address book file path","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the user prefs\u0027 Team book file path.","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"     * @return the team book file path","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"    Path getTeamBookFilePath();","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"     * @param addressBookFilePath the address book file path","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"     * Sets the user prefs\u0027 team book file path.","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"     * @param teamBookFilePath the team book file path","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"    void setTeamBookFilePath(Path teamBookFilePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"     * @param addressBook the address book","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"     * @return Returns the AddressBook","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"     * @param person the person","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"adhigop13"},"content":"     * Returns true if a person with given {@code name} exists in the address book.","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"adhigop13"},"content":"     * @param name the name","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"adhigop13"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"erohsikivar"},"content":"    boolean containsPerson(Name name);","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"adhigop13"},"content":"     * Returns person based on the {@code name}.","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"adhigop13"},"content":"     * @param name the name","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"adhigop13"},"content":"     * @return the person by name","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"adhigop13"},"content":"    Person getPersonByName(Name name);","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"adhigop13"},"content":"     * Gets identity code by name.","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"adhigop13"},"content":"     * @param developerName the developer name","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"adhigop13"},"content":"     * @return the identity code by name","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"erohsikivar"},"content":"    IdentityCode getIdentityCodeByName(Name developerName);","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"adhigop13"},"content":"     * Gets name by identity code.","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"adhigop13"},"content":"     * @param developerID the developer id","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"adhigop13"},"content":"     * @return the name by identity code","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"Tang-Moyan"},"content":"    Name getNameByIdentityCode(IdentityCode developerID);","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"Tang-Moyan"},"content":"     * Gets person by identity code.","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"Tang-Moyan"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"Tang-Moyan"},"content":"     * @param id the person id","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"Tang-Moyan"},"content":"     * @return the name by identity code","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"Tang-Moyan"},"content":"    Person getPersonByIdentityCode(IdentityCode id);","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"adhigop13"},"content":"     * returns true if the team does not exist.","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"erohsikivar"},"content":"    boolean invalidAddToTeam(String teamToAddTo);","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":145,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"adhigop13"},"content":"     * @param target the target","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":153,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"adhigop13"},"content":"     * @param person the person","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"adhigop13"},"content":"     * @param target       the target","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"adhigop13"},"content":"     * @param editedPerson the edited person","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":168,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"adhigop13"},"content":"     * @return Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":175,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"adhigop13"},"content":"     * @param predicate the predicate","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"adhigop13"},"content":"     * Add to team.","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"adhigop13"},"content":"     * @param teamToAddTo the team to add to","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"adhigop13"},"content":"     * @param devToAdd    the dev to add","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"adhigop13"},"content":"    void addToTeam(String teamToAddTo, Name devToAdd);","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"StevenLiudw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TeamBook related methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"StevenLiudw"},"content":"     * Replaces team book data with the data in {@code teamBook}.","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":195,"author":{"gitId":"adhigop13"},"content":"     * @param teamBook the team book","lastModifiedDate":"2023-10-21"},{"lineNumber":196,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"StevenLiudw"},"content":"    void setTeamBook(ReadOnlyTeamBook teamBook);","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":200,"author":{"gitId":"adhigop13"},"content":"     * @return the TeamBook","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"StevenLiudw"},"content":"    ReadOnlyTeamBook getTeamBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"StevenLiudw"},"content":"     * Returns true if a team with the same identity as {@code teamName} exists in the team book.","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"adhigop13"},"content":"     * @param teamName the team name","lastModifiedDate":"2023-10-21"},{"lineNumber":209,"author":{"gitId":"adhigop13"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-21"},{"lineNumber":210,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"StevenLiudw"},"content":"    boolean hasTeam(String teamName);","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"StevenLiudw"},"content":"     * Deletes the given team.","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"StevenLiudw"},"content":"     * The team must exist in the team book.","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":217,"author":{"gitId":"adhigop13"},"content":"     * @param teamName the team name","lastModifiedDate":"2023-10-21"},{"lineNumber":218,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"StevenLiudw"},"content":"    void deleteTeam(String teamName);","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"StevenLiudw"},"content":"     * Adds the given team.","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"StevenLiudw"},"content":"     * {@code team} must not already exist in the team book.","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":225,"author":{"gitId":"adhigop13"},"content":"     * @param team the team","lastModifiedDate":"2023-10-21"},{"lineNumber":226,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"StevenLiudw"},"content":"    void addTeam(Team team);","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"adhigop13"},"content":"    boolean isLeaderOfTeam(String teamName, Name devToBeAdded);","lastModifiedDate":"2023-10-21"},{"lineNumber":230,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":231,"author":{"gitId":"erohsikivar"},"content":"    boolean developerIsTeamLeader(IdentityCode developerIdentityCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"erohsikivar"},"content":"    boolean removeDeveloperFromAllTeams(IdentityCode developerIdentityCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"erohsikivar"},"content":"     * Deletes the given developer from the specified team.","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"erohsikivar"},"content":"     * The developer and team must exist in the model.","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":238,"author":{"gitId":"adhigop13"},"content":"     * @param teamName              the team name","lastModifiedDate":"2023-10-21"},{"lineNumber":239,"author":{"gitId":"adhigop13"},"content":"     * @param developerIdentityCOde the developer identity c ode","lastModifiedDate":"2023-10-21"},{"lineNumber":240,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"erohsikivar"},"content":"    void deleteDeveloperFromTeam(String teamName, IdentityCode developerIdentityCOde);","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":244,"author":{"gitId":"adhigop13"},"content":"     * Person already in team boolean.","lastModifiedDate":"2023-10-21"},{"lineNumber":245,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":246,"author":{"gitId":"adhigop13"},"content":"     * @param teamToAddTo the team to add to","lastModifiedDate":"2023-10-21"},{"lineNumber":247,"author":{"gitId":"adhigop13"},"content":"     * @param devToAdd    the dev to add","lastModifiedDate":"2023-10-21"},{"lineNumber":248,"author":{"gitId":"adhigop13"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-21"},{"lineNumber":249,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":250,"author":{"gitId":"adhigop13"},"content":"    boolean personAlreadyInTeam(String teamToAddTo, Name devToAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":252,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":253,"author":{"gitId":"adhigop13"},"content":"     * Edit team name.","lastModifiedDate":"2023-10-21"},{"lineNumber":254,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":255,"author":{"gitId":"adhigop13"},"content":"     * @param originalTeamName the original team name","lastModifiedDate":"2023-10-21"},{"lineNumber":256,"author":{"gitId":"adhigop13"},"content":"     * @param newTeamName      the new team name","lastModifiedDate":"2023-10-21"},{"lineNumber":257,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":258,"author":{"gitId":"Tang-Moyan"},"content":"    void editTeamName(String originalTeamName, String newTeamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":259,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":260,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":261,"author":{"gitId":"adhigop13"},"content":"     * Gets team leader of team.","lastModifiedDate":"2023-10-21"},{"lineNumber":262,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":263,"author":{"gitId":"adhigop13"},"content":"     * @param teamName the team name","lastModifiedDate":"2023-10-21"},{"lineNumber":264,"author":{"gitId":"adhigop13"},"content":"     * @return the team leader of team","lastModifiedDate":"2023-10-21"},{"lineNumber":265,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":266,"author":{"gitId":"Tang-Moyan"},"content":"    Name getTeamLeaderOfTeam(String teamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":267,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":268,"author":{"gitId":"adhigop13"},"content":"    IdentityCode getTeamLeaderIdOfTeam(String teamName);","lastModifiedDate":"2023-10-24"},{"lineNumber":269,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":270,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":271,"author":{"gitId":"adhigop13"},"content":"     * Sets team leader of team.","lastModifiedDate":"2023-10-21"},{"lineNumber":272,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":273,"author":{"gitId":"adhigop13"},"content":"     * @param teamName        the team name","lastModifiedDate":"2023-10-21"},{"lineNumber":274,"author":{"gitId":"adhigop13"},"content":"     * @param newTeamLeaderID the new team leader id","lastModifiedDate":"2023-10-21"},{"lineNumber":275,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":276,"author":{"gitId":"Tang-Moyan"},"content":"    void setTeamLeaderOfTeam(String teamName, IdentityCode newTeamLeaderID);","lastModifiedDate":"2023-10-19"},{"lineNumber":277,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":278,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":279,"author":{"gitId":"adhigop13"},"content":"     * @return An unmodifiable view of the filtered team list","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":281,"author":{"gitId":"StevenLiudw"},"content":"    ObservableList\u003cTeam\u003e getFilteredTeamList();","lastModifiedDate":"2023-10-17"},{"lineNumber":282,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":283,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":284,"author":{"gitId":"StevenLiudw"},"content":"     * Updates the filter of the filtered team list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":285,"author":{"gitId":"StevenLiudw"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-17"},{"lineNumber":286,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":287,"author":{"gitId":"StevenLiudw"},"content":"    void updateFilteredTeamList(Predicate\u003cTeam\u003e predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"erohsikivar":15,"StevenLiudw":44,"Tang-Moyan":15,"-":86,"adhigop13":128}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":" * Represents the management model for address and team books.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":" * Provides functionality to interact and manipulate address and team books, as well as user preferences.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    private final TeamBook teamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    // Assuming teams can be filtered, let\u0027s add a FilteredList for Teams","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    private final FilteredList\u003cTeam\u003e filteredTeams;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes a ModelManager with the given addressBook, teamBook, and userPrefs.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     * @param addressBook the initial address book data.","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamBook    the initial team book data.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     * @param userPrefs   the initial user preferences data.","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyTeamBook teamBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"        requireAllNonNull(addressBook, teamBook, userPrefs);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"        logger.fine(\"Initializing with address book: \"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"                + addressBook + \", team book: \" + teamBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        this.teamBook \u003d new TeamBook(teamBook);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        filteredTeams \u003d new FilteredList\u003c\u003e(this.teamBook.getTeamList());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"     * Default constructor that initializes a ModelManager with default values.","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"Tang-Moyan"},"content":"        this.addressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Tang-Moyan"},"content":"        this.userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"        this.teamBook \u003d new TeamBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        filteredTeams \u003d new FilteredList\u003c\u003e(this.teamBook.getTeamList());","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"     * Updates the current user preferences.","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"     * @param userPrefs the new user preferences data.","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the current user preferences.","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"     * @return the user preferences.","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the current GUI settings from user preferences.","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"     * @return the GUI settings.","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"     * Updates the GUI settings in user preferences.","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"     * @param guiSettings the new GUI settings.","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the file path to the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"     * @return the file path to the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"StevenLiudw"},"content":"     * Sets the file path for the address book in user preferences.","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"StevenLiudw"},"content":"     * @param addressBookFilePath the new file path for the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the file path to the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"StevenLiudw"},"content":"     * @return the file path to the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"StevenLiudw"},"content":"    public Path getTeamBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"StevenLiudw"},"content":"        return userPrefs.getTeamBookFilePath();","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"StevenLiudw"},"content":"     * Sets the file path for the address book in user preferences.","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamBookFilePath the new file path for the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"StevenLiudw"},"content":"    public void setTeamBookFilePath(Path teamBookFilePath) {","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(teamBookFilePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"erohsikivar"},"content":"        userPrefs.setTeamBookFilePath(teamBookFilePath); // Corrected this line","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"StevenLiudw"},"content":"     * Replaces the current address book data with the given address book data.","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"StevenLiudw"},"content":"     * @param addressBook the new address book data.","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the current address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"StevenLiudw"},"content":"     * @return the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"StevenLiudw"},"content":"     * Checks if the given person exists in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"StevenLiudw"},"content":"     * @param person the person to check.","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"StevenLiudw"},"content":"     * @return true if the person exists, false otherwise.","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"erohsikivar"},"content":"    public boolean containsPerson(Name name) {","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"erohsikivar"},"content":"        return addressBook.containsPerson(name);","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"adhigop13"},"content":"    public Person getPersonByName(Name name) {","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"adhigop13"},"content":"        return addressBook.getPersonByName(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"erohsikivar"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"erohsikivar"},"content":"    public IdentityCode getIdentityCodeByName(Name developerName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"erohsikivar"},"content":"        return addressBook.getPersonByName(developerName).getIdentityCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"Tang-Moyan"},"content":"    public Name getNameByIdentityCode(IdentityCode developerID) {","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"Tang-Moyan"},"content":"        return addressBook.getPersonByIdentityCode(developerID).getName();","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"Tang-Moyan"},"content":"    public Person getPersonByIdentityCode(IdentityCode id) {","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"Tang-Moyan"},"content":"        return addressBook.getPersonByIdentityCode(id);","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"StevenLiudw"},"content":"     * Deletes the specified person from the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"StevenLiudw"},"content":"     * @param target the person to be deleted.","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"StevenLiudw"},"content":"     * Adds a new person to the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"StevenLiudw"},"content":"     * @param person the person to be added.","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":224,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"StevenLiudw"},"content":"     * Sets (or replaces) a person\u0027s details in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"StevenLiudw"},"content":"     * @param target the target person whose details are to be replaced.","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"StevenLiudw"},"content":"     * @param editedPerson the new details of the person.","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":248,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":249,"author":{"gitId":"StevenLiudw"},"content":"     * Updates the predicate used for filtering the list of persons.","lastModifiedDate":"2023-10-17"},{"lineNumber":250,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":251,"author":{"gitId":"StevenLiudw"},"content":"     * @param predicate the predicate for filtering.","lastModifiedDate":"2023-10-17"},{"lineNumber":252,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":259,"author":{"gitId":"StevenLiudw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TeamBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":261,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"StevenLiudw"},"content":"     * Replaces the current team book data with the given team book data.","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamBook the new team book data to be set.","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":267,"author":{"gitId":"StevenLiudw"},"content":"    public void setTeamBook(ReadOnlyTeamBook teamBook) {","lastModifiedDate":"2023-10-17"},{"lineNumber":268,"author":{"gitId":"StevenLiudw"},"content":"        this.teamBook.resetData(teamBook);","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":271,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the current team book.","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":274,"author":{"gitId":"StevenLiudw"},"content":"     * @return the team book.","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":276,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"StevenLiudw"},"content":"    public ReadOnlyTeamBook getTeamBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":278,"author":{"gitId":"StevenLiudw"},"content":"        return teamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":279,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":280,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":281,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":283,"author":{"gitId":"StevenLiudw"},"content":"     * Deletes a team with the specified team name from the team book.","lastModifiedDate":"2023-10-17"},{"lineNumber":284,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":285,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamName the name of the team to be deleted.","lastModifiedDate":"2023-10-17"},{"lineNumber":286,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":287,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":288,"author":{"gitId":"StevenLiudw"},"content":"    public void deleteTeam(String teamName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":289,"author":{"gitId":"StevenLiudw"},"content":"        teamBook.removeTeamByName(teamName);","lastModifiedDate":"2023-10-17"},{"lineNumber":290,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":291,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":292,"author":{"gitId":"StevenLiudw"},"content":"     * Adds a new team to the team book.","lastModifiedDate":"2023-10-17"},{"lineNumber":293,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":294,"author":{"gitId":"StevenLiudw"},"content":"     * @param team the team to be added.","lastModifiedDate":"2023-10-17"},{"lineNumber":295,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":296,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":297,"author":{"gitId":"StevenLiudw"},"content":"    public void addTeam(Team team) {","lastModifiedDate":"2023-10-17"},{"lineNumber":298,"author":{"gitId":"StevenLiudw"},"content":"        teamBook.addTeam(team);","lastModifiedDate":"2023-10-17"},{"lineNumber":299,"author":{"gitId":"StevenLiudw"},"content":"        updateFilteredTeamList(PREDICATE_SHOW_ALL_TEAMS);","lastModifiedDate":"2023-10-17"},{"lineNumber":300,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":301,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":302,"author":{"gitId":"adhigop13"},"content":"    public boolean isLeaderOfTeam(String teamName, Name devToBeAdded) {","lastModifiedDate":"2023-10-21"},{"lineNumber":303,"author":{"gitId":"adhigop13"},"content":"        IdentityCode teamLeaderIdentityCode \u003d getIdentityCodeByName(devToBeAdded);","lastModifiedDate":"2023-10-21"},{"lineNumber":304,"author":{"gitId":"adhigop13"},"content":"        return getTeamLeaderIdOfTeam(teamName).equals(teamLeaderIdentityCode);","lastModifiedDate":"2023-10-24"},{"lineNumber":305,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":306,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":307,"author":{"gitId":"erohsikivar"},"content":"     * Deletes the given developer from the specified team.","lastModifiedDate":"2023-10-18"},{"lineNumber":308,"author":{"gitId":"erohsikivar"},"content":"     * The developer and team must exist in the model.","lastModifiedDate":"2023-10-18"},{"lineNumber":309,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":310,"author":{"gitId":"erohsikivar"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":311,"author":{"gitId":"erohsikivar"},"content":"    public void deleteDeveloperFromTeam(String teamName, IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-10-19"},{"lineNumber":312,"author":{"gitId":"erohsikivar"},"content":"        teamBook.removeDeveloperFromTeam(teamName, developerIdentityCode);","lastModifiedDate":"2023-10-19"},{"lineNumber":313,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":314,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":315,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":316,"author":{"gitId":"adhigop13"},"content":"    public boolean personAlreadyInTeam(String teamToAddTo, Name devToAdd) {","lastModifiedDate":"2023-10-18"},{"lineNumber":317,"author":{"gitId":"adhigop13"},"content":"        IdentityCode devToAddIdentityCode \u003d getIdentityCodeByName(devToAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"adhigop13"},"content":"        return teamBook.personAlreadyInTeam(teamToAddTo, devToAddIdentityCode);","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":321,"author":{"gitId":"erohsikivar"},"content":"     * Checks if a team with the given team name exists in the team book.","lastModifiedDate":"2023-10-19"},{"lineNumber":322,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":323,"author":{"gitId":"erohsikivar"},"content":"     * @param teamName the name of the team to check.","lastModifiedDate":"2023-10-19"},{"lineNumber":324,"author":{"gitId":"erohsikivar"},"content":"     * @return true if the team exists, false otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":325,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":326,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":327,"author":{"gitId":"erohsikivar"},"content":"    public boolean hasTeam(String teamName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":328,"author":{"gitId":"erohsikivar"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":329,"author":{"gitId":"erohsikivar"},"content":"        return teamBook.hasTeam(teamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":330,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":331,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":332,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":333,"author":{"gitId":"erohsikivar"},"content":"    public boolean invalidAddToTeam(String teamToAddTo) {","lastModifiedDate":"2023-10-19"},{"lineNumber":334,"author":{"gitId":"erohsikivar"},"content":"        return teamBook.invalidAddToTeam(teamToAddTo);","lastModifiedDate":"2023-10-19"},{"lineNumber":335,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":336,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":337,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":338,"author":{"gitId":"erohsikivar"},"content":"    public void addToTeam(String teamToAddTo, Name devToAdd) {","lastModifiedDate":"2023-10-19"},{"lineNumber":339,"author":{"gitId":"erohsikivar"},"content":"        IdentityCode devToAddIdentityCode \u003d getIdentityCodeByName(devToAdd);","lastModifiedDate":"2023-10-19"},{"lineNumber":340,"author":{"gitId":"erohsikivar"},"content":"        teamBook.addDevToTeam(teamToAddTo, devToAddIdentityCode);","lastModifiedDate":"2023-10-19"},{"lineNumber":341,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":342,"author":{"gitId":"erohsikivar"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":343,"author":{"gitId":"erohsikivar"},"content":"    public boolean developerIsTeamLeader(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-10-27"},{"lineNumber":344,"author":{"gitId":"erohsikivar"},"content":"        return teamBook.isTeamLeader(developerIdentityCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":345,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":346,"author":{"gitId":"erohsikivar"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":347,"author":{"gitId":"erohsikivar"},"content":"    public boolean removeDeveloperFromAllTeams(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-10-27"},{"lineNumber":348,"author":{"gitId":"erohsikivar"},"content":"        return teamBook.removeDeveloperFromAllTeams(developerIdentityCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":349,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":350,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":351,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":352,"author":{"gitId":"Tang-Moyan"},"content":"    public void editTeamName(String originalTeamName, String newTeamName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":353,"author":{"gitId":"Tang-Moyan"},"content":"        teamBook.editTeamName(originalTeamName, newTeamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":354,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":355,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":356,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":357,"author":{"gitId":"Tang-Moyan"},"content":"    public Name getTeamLeaderOfTeam(String teamName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":358,"author":{"gitId":"adhigop13"},"content":"        IdentityCode teamLeaderID \u003d getTeamLeaderIdOfTeam(teamName);","lastModifiedDate":"2023-10-24"},{"lineNumber":359,"author":{"gitId":"Tang-Moyan"},"content":"        return getNameByIdentityCode(teamLeaderID);","lastModifiedDate":"2023-10-19"},{"lineNumber":360,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":361,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":362,"author":{"gitId":"adhigop13"},"content":"    public IdentityCode getTeamLeaderIdOfTeam(String teamName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":363,"author":{"gitId":"adhigop13"},"content":"        return teamBook.getTeamLeaderIdOfTeam(teamName);","lastModifiedDate":"2023-10-24"},{"lineNumber":364,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":365,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":366,"author":{"gitId":"Tang-Moyan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":367,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeamLeaderOfTeam(String teamName, IdentityCode newTeamLeaderID) {","lastModifiedDate":"2023-10-19"},{"lineNumber":368,"author":{"gitId":"Tang-Moyan"},"content":"        teamBook.setTeamLeaderOfTeam(teamName, newTeamLeaderID);","lastModifiedDate":"2023-10-19"},{"lineNumber":369,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":370,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":371,"author":{"gitId":"StevenLiudw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Team List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":372,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":373,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":374,"author":{"gitId":"StevenLiudw"},"content":"     * Returns an unmodifiable view of the list of {@code Team} backed by the internal list of","lastModifiedDate":"2023-10-17"},{"lineNumber":375,"author":{"gitId":"StevenLiudw"},"content":"     * {@code versionedTeamBook}","lastModifiedDate":"2023-10-17"},{"lineNumber":376,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":377,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":378,"author":{"gitId":"StevenLiudw"},"content":"    public ObservableList\u003cTeam\u003e getFilteredTeamList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":379,"author":{"gitId":"StevenLiudw"},"content":"        return filteredTeams;","lastModifiedDate":"2023-10-17"},{"lineNumber":380,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":381,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":382,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":383,"author":{"gitId":"StevenLiudw"},"content":"     * Updates the predicate used for filtering the list of teams.","lastModifiedDate":"2023-10-17"},{"lineNumber":384,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":385,"author":{"gitId":"StevenLiudw"},"content":"     * @param predicate the predicate for filtering.","lastModifiedDate":"2023-10-17"},{"lineNumber":386,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":387,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":388,"author":{"gitId":"StevenLiudw"},"content":"    public void updateFilteredTeamList(Predicate\u003cTeam\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":389,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":390,"author":{"gitId":"StevenLiudw"},"content":"        filteredTeams.setPredicate(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":391,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":392,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":393,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":394,"author":{"gitId":"StevenLiudw"},"content":"     * Determines if two ModelManager objects are equal.","lastModifiedDate":"2023-10-17"},{"lineNumber":395,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":396,"author":{"gitId":"StevenLiudw"},"content":"     * @param other the other object to be compared with.","lastModifiedDate":"2023-10-17"},{"lineNumber":397,"author":{"gitId":"StevenLiudw"},"content":"     * @return true if the two objects are equal, false otherwise.","lastModifiedDate":"2023-10-17"},{"lineNumber":398,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":413,"author":{"gitId":"StevenLiudw"},"content":"                \u0026\u0026 teamBook.equals(otherModelManager.teamBook)","lastModifiedDate":"2023-10-17"},{"lineNumber":414,"author":{"gitId":"StevenLiudw"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-17"},{"lineNumber":415,"author":{"gitId":"StevenLiudw"},"content":"                \u0026\u0026 filteredTeams.equals(otherModelManager.filteredTeams);","lastModifiedDate":"2023-10-17"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":417,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JizhuoChen":2,"erohsikivar":45,"StevenLiudw":177,"Tang-Moyan":34,"-":136,"adhigop13":23}},{"path":"src/main/java/seedu/address/model/ReadOnlyTeamBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":" * Unmodifiable view of a team book","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"public interface ReadOnlyTeamBook {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"     * Returns an unmodifiable view of the teams list.","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"     * This list will not contain any duplicate teams.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    ObservableList\u003cTeam\u003e getTeamList();","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"erohsikivar":1,"StevenLiudw":16}},{"path":"src/main/java/seedu/address/model/TeamBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.UniqueTeamList;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":" * Represents a TeamBook in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":" * Duplicates are not allowed (by .isSameTeam comparison or some other logic you prefer).","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"public class TeamBook implements ReadOnlyTeamBook {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    private final UniqueTeamList teams;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        teams \u003d new UniqueTeamList();","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes an empty TeamBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    public TeamBook() {}","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     * Creates a TeamBook using the Teams in the {@code toBeCopied}","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     * @param toBeCopied ReadOnlyTeamBook that is to be copied into the new TeamBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    public TeamBook(ReadOnlyTeamBook toBeCopied) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        this();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     * Sets the list of teams in the TeamBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * @param teams List of teams to be set in the TeamBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"    public void setTeams(List\u003cTeam\u003e teams) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        this.teams.setTeams(teams);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"     * Resets the TeamBook data with the given new data.","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"     * @param newData ReadOnlyTeamBook containing the new data to reset.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"    public void resetData(ReadOnlyTeamBook newData) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"        setTeams(newData.getTeamList());","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"     * Checks if the TeamBook has a team with the specified team name.","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamName The name of the team to be checked.","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"     * @return boolean indicating if the team exists.","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"    public boolean hasTeam(String teamName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"        return teams.containsTeamByName(teamName);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"     * Checks if the TeamBook has a team with the specified team name.","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"     * @param team The team to be checked.","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"     * @return boolean indicating if the team exists.","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"    public boolean hasTeam(Team team) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(team);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"        return teams.containsTeamByName(team.getTeamName());","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Tang-Moyan"},"content":"     * Retrieves the Team Leader Identity code of the team from the TeamBook by his team name.","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Tang-Moyan"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Tang-Moyan"},"content":"     * @param teamName The name of the team to retrieve its team leader Identity code.","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Tang-Moyan"},"content":"     * @return The Team Leader Identity code if found, or null if the team does not exist.","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"    public IdentityCode getTeamLeaderIdOfTeam(String teamName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"        return teams.getTeamLeaderIdOfTeam(teamName);","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeamLeaderOfTeam(String teamName, IdentityCode newTeamLeaderID) {","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"Tang-Moyan"},"content":"        requireNonNull(newTeamLeaderID);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Tang-Moyan"},"content":"        teams.setTeamLeaderOfTeam(teamName, newTeamLeaderID);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"     * Adds a new team to the TeamBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"     * @param team Team to be added.","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"    public void addTeam(Team team) {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"        teams.add(team);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"StevenLiudw"},"content":"     * Removes the team with the given name from the TeamBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamName Name of the team to be removed.","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"StevenLiudw"},"content":"    public void removeTeamByName(String teamName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"StevenLiudw"},"content":"        teams.removeTeamByName(teamName);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"adhigop13"},"content":"     * Remove developer from team.","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"adhigop13"},"content":"     * @param teamName              the team name","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"adhigop13"},"content":"     * @param developerIdentityCode the developer identity code","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"erohsikivar"},"content":"    public void removeDeveloperFromTeam(String teamName, IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"erohsikivar"},"content":"        if (teams.containsTeamByName(teamName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"erohsikivar"},"content":"            teams.removeDeveloperFromTeam(teamName, developerIdentityCode);","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"erohsikivar"},"content":"        } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"erohsikivar"},"content":"            throw new TeamNotFoundException();","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"erohsikivar"},"content":"     * Checks if the given id is an id of team leader.","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"erohsikivar"},"content":"     * @param id the id","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"erohsikivar"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"erohsikivar"},"content":"    public boolean isTeamLeader(IdentityCode id) {","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"erohsikivar"},"content":"        return teams.isTeamLeader(id);","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"erohsikivar"},"content":"    public boolean removeDeveloperFromAllTeams(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"erohsikivar"},"content":"        return teams.removeDeveloperFromAllTeams(developerIdentityCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"adhigop13"},"content":"     * Checks if given person by identity code is in given team","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"adhigop13"},"content":"     * @param teamToAddTo          the team to add to","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"adhigop13"},"content":"     * @param devToAddIdentityCode the dev to add identity code","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"adhigop13"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"adhigop13"},"content":"    public boolean personAlreadyInTeam(String teamToAddTo, IdentityCode devToAddIdentityCode) {","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"adhigop13"},"content":"        return teams.teamContainsPerson(teamToAddTo, devToAddIdentityCode);","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"adhigop13"},"content":"     * Checks if given team exists.","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"adhigop13"},"content":"     * @param teamToAddTo the team to add to","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"adhigop13"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"adhigop13"},"content":"    public boolean invalidAddToTeam(String teamToAddTo) {","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(teamToAddTo);","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"adhigop13"},"content":"        return teams.containsTeamByName(teamToAddTo);","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"adhigop13"},"content":"    public void addDevToTeam(String teamToAddTo, IdentityCode devToAddIdentityCode) {","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"adhigop13"},"content":"        teams.addDevToTeam(teamToAddTo, devToAddIdentityCode);","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"Tang-Moyan"},"content":"    public void editTeamName(String originalTeamName, String newTeamName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"Tang-Moyan"},"content":"        teams.editTeamName(originalTeamName, newTeamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"StevenLiudw"},"content":"    public ObservableList\u003cTeam\u003e getTeamList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"StevenLiudw"},"content":"        return teams.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"StevenLiudw"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"StevenLiudw"},"content":"        return teams.hashCode();","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"StevenLiudw"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"StevenLiudw"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"StevenLiudw"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"StevenLiudw"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"StevenLiudw"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"StevenLiudw"},"content":"        TeamBook teamBook \u003d (TeamBook) obj;","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"StevenLiudw"},"content":"        // Assume \u0027teams\u0027 is a List of Team objects in TeamBook","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"StevenLiudw"},"content":"        // Also, make sure that Team class has an overridden equals method","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"StevenLiudw"},"content":"        return teams.equals(teamBook.teams);","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"JizhuoChen":1,"erohsikivar":25,"StevenLiudw":120,"Tang-Moyan":20,"adhigop13":37}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    private Path teamBookFilePath \u003d Paths.get(\"data\" , \"teambook.json\");","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    public Path getTeamBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        return teamBookFilePath;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"erohsikivar"},"content":"    public void setTeamBookFilePath(Path teamBookFilePath) {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"erohsikivar"},"content":"        requireNonNull(teamBookFilePath);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"erohsikivar"},"content":"        this.teamBookFilePath \u003d teamBookFilePath;","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"erohsikivar":4,"StevenLiudw":4,"-":87}},{"path":"src/main/java/seedu/address/model/person/Developer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":" * Represents a Developer in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" * Inherits from the Person class.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"public class Developer extends Person {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Developer instance.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"     * @param name    The name of the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"     * @param phone   The phone number of the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     * @param email   The email of the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * @param address The address of the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     * @param remark  Any remarks related to the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     * @param tags    Any tags associated with the developer.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    public Developer(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        super(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"StevenLiudw":26}},{"path":"src/main/java/seedu/address/model/person/IdentityCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":" * Represents a Person\u0027s identity code in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCode(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"public class IdentityCode {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"            \"Identity codes should only contain numeric characters, and it should not be blank\";","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    private final String code;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a valid IdentityCode.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     * @param code The identity code string to be validated and set.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    public IdentityCode(String code) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(code);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"        checkArgument(isValidCode(code), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the numeric value of the identity code.","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"     * @return An integer representation of the identity code.","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    public int getValue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        return Integer.parseInt(code);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     * Validates the given string representation of an identity code.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"     * @param test The string to test for validity.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     * @return True if the given string is a valid identity code, false otherwise.","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    public static boolean isValidCode(String test) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"        return code;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        if (!(other instanceof IdentityCode)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCode otherCode \u003d (IdentityCode) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        return code.equals(otherCode.code);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"        return code.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"StevenLiudw":68}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.IdentityCodeManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    private final Remark remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    private final IdentityCode identitycode;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Person object with all required fields.","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     * @param name     The person\u0027s name.","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     * @param phone    The person\u0027s phone number.","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     * @param email    The person\u0027s email address.","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     * @param address  The person\u0027s address.","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"     * @param remark   The person\u0027s remark.","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     * @param tags     The set of tags associated with the person.","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        this.identitycode \u003d new IdentityCode(String.valueOf(IdentityCodeManager.getNextIdentityCode()));","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Person object with all fields, including the identity code.","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"     * @param name         The person\u0027s name.","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"     * @param phone        The person\u0027s phone number.","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"     * @param email        The person\u0027s email address.","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"     * @param address      The person\u0027s address.","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"     * @param remark       The person\u0027s remark.","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"     * @param tags         The set of tags associated with the person.","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"     * @param identityCode The person\u0027s identity code.","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Tang-Moyan"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark,","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"                  Set\u003cTag\u003e tags, IdentityCode identityCode) {","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"Tang-Moyan"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"Tang-Moyan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"Tang-Moyan"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"Tang-Moyan"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"Tang-Moyan"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"Tang-Moyan"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"Tang-Moyan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"Tang-Moyan"},"content":"        this.identitycode \u003d identityCode;","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the name of the person.","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"     * @return The person\u0027s name.","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the phone number of the person.","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"     * @return The person\u0027s phone number.","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the email address of the person.","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"     * @return The person\u0027s email address.","lastModifiedDate":"2023-11-04"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the address of the person.","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"     * @return The person\u0027s address.","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the remark associated with the person.","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"StevenLiudw"},"content":"     * @return The person\u0027s remark.","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"JizhuoChen"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"JizhuoChen"},"content":"        return remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the identity code of the person.","lastModifiedDate":"2023-11-04"},{"lineNumber":123,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":124,"author":{"gitId":"StevenLiudw"},"content":"     * @return The person\u0027s identity code.","lastModifiedDate":"2023-11-04"},{"lineNumber":125,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":126,"author":{"gitId":"StevenLiudw"},"content":"    public IdentityCode getIdentityCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"StevenLiudw"},"content":"        return this.identitycode;","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"StevenLiudw"},"content":"     * Returns an immutable set of tags associated with the person.","lastModifiedDate":"2023-11-04"},{"lineNumber":132,"author":{"gitId":"StevenLiudw"},"content":"     * Modifications to the returned set are not allowed.","lastModifiedDate":"2023-11-04"},{"lineNumber":133,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":134,"author":{"gitId":"StevenLiudw"},"content":"     * @return An unmodifiable set of tags.","lastModifiedDate":"2023-11-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"StevenLiudw"},"content":"     * Checks if two persons have the same name, defining a weaker notion of equality.","lastModifiedDate":"2023-11-04"},{"lineNumber":142,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":143,"author":{"gitId":"StevenLiudw"},"content":"     * @param otherPerson The other person to compare with.","lastModifiedDate":"2023-11-04"},{"lineNumber":144,"author":{"gitId":"StevenLiudw"},"content":"     * @return True if both persons have the same name, false otherwise.","lastModifiedDate":"2023-11-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"StevenLiudw"},"content":"     * Checks if two persons have the same identity and data fields, defining a stronger notion of equality.","lastModifiedDate":"2023-11-04"},{"lineNumber":157,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":158,"author":{"gitId":"StevenLiudw"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-11-04"},{"lineNumber":159,"author":{"gitId":"StevenLiudw"},"content":"     * @return True if both persons are equal, false otherwise.","lastModifiedDate":"2023-11-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"adhigop13"},"content":"        boolean checkExceptRemarkAttribute \u003d name.equals(otherPerson.name)","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"adhigop13"},"content":"        if (remark !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"adhigop13"},"content":"            return checkExceptRemarkAttribute","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"adhigop13"},"content":"                    \u0026\u0026 remark.equals(otherPerson.remark);","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"adhigop13"},"content":"            return checkExceptRemarkAttribute \u0026\u0026 otherPerson.remark \u003d\u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":188,"author":{"gitId":"StevenLiudw"},"content":"     * Computes the hash code for the Person object.","lastModifiedDate":"2023-11-04"},{"lineNumber":189,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":190,"author":{"gitId":"StevenLiudw"},"content":"     * @return The computed hash code.","lastModifiedDate":"2023-11-04"},{"lineNumber":191,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"JizhuoChen"},"content":"        return Objects.hash(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":198,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":199,"author":{"gitId":"StevenLiudw"},"content":"     * Returns a string representation of the Person object.","lastModifiedDate":"2023-11-04"},{"lineNumber":200,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":201,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string containing the person\u0027s information.","lastModifiedDate":"2023-11-04"},{"lineNumber":202,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":210,"author":{"gitId":"JizhuoChen"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"StevenLiudw"},"content":"                .add(\"identitycode\", identitycode)","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":9,"StevenLiudw":79,"Tang-Moyan":12,"-":107,"adhigop13":8}},{"path":"src/main/java/seedu/address/model/person/ProjectManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" * Represents a Project Manager in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" * A Project Manager manages multiple teams.","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" * Inherits from the Person class.","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"public class ProjectManager extends Person {","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    private final ArrayList\u003cTeam\u003e teams;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new ProjectManager instance.","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     * @param name    The name of the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     * @param phone   The phone number of the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     * @param email   The email of the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     * @param address The address of the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     * @param remark  Any remarks related to the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     * @param tags    Any tags associated with the project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    public ProjectManager(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        super(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        this.teams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     * Adds a team under this project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     * @param team The team to be added.","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    public void addTeam(Team team) {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        this.teams.add(team);","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the list of teams managed by this project manager.","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     * @return A list of teams.","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"    public List\u003cTeam\u003e getTeams() {","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"        return teams;","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"erohsikivar":1,"StevenLiudw":50}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"public class Remark {","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remark can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"     * The first character of the remark must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    public final String value;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"     * Instantiates a new Remark.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"     * @param remark the remark","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"        value \u003d remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"    public String toString() {","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"        return value;","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"JizhuoChen":47,"erohsikivar":5}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    //creates a FXCollections observable array list","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"erohsikivar"},"content":"    public boolean containsName(Name toCheck) {","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        return internalList.stream().anyMatch(person -\u003e person.getName().equals(toCheck));","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"adhigop13"},"content":"    //bypasses the hashcode methods for now","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"adhigop13"},"content":"    public Person getPerson(Name name) {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"erohsikivar"},"content":"        Optional\u003cPerson\u003e foundPerson \u003d internalList.filtered(","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"erohsikivar"},"content":"                person -\u003e person.getName().equals(name)).stream().findFirst();","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"adhigop13"},"content":"        return foundPerson.orElse(null);","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"Tang-Moyan"},"content":"    public Person getPerson(IdentityCode identityCode) {","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Tang-Moyan"},"content":"        Optional\u003cPerson\u003e foundPerson \u003d internalList.filtered(","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Tang-Moyan"},"content":"                person -\u003e person.getIdentityCode().equals(identityCode)).stream().findFirst();","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"Tang-Moyan"},"content":"        return foundPerson.orElse(null);","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"erohsikivar":4,"Tang-Moyan":9,"-":150,"adhigop13":11}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    //public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9]+\";","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JizhuoChen":1,"-":62}},{"path":"src/main/java/seedu/address/model/team/Team.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"package seedu.address.model.team;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" * Represents a Team in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" * Each team consists of one TeamLeader and multiple Developers.","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class Team {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    private IdentityCode leaderIdentityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    private String teamName;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    private final Set\u003cIdentityCode\u003e developerIdentityCodes;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Team instance with the specified TeamLeader and team name.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     * @param leaderIdentityCode The IdentityCode of the team leader.","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamName The name of the team.","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    public Team(IdentityCode leaderIdentityCode, String teamName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        this.leaderIdentityCode \u003d leaderIdentityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        this.developerIdentityCodes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     * Adds a Developer\u0027s IdentityCode to the team.","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Tang-Moyan"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     * @param developerIdentityCode The IdentityCode of the developer to be added.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    public void addDeveloper(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        developerIdentityCodes.add(developerIdentityCode);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     * Removes a Developer\u0027s IdentityCode from the team.","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     * @param developerIdentityCode The IdentityCode of the developer to be removed.","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * @return true if the developer was part of the team and was removed, false otherwise.","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"    public boolean removeDeveloper(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        return developerIdentityCodes.remove(developerIdentityCode);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"     * Updates the TeamLeader of the team.","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"     * @param leaderIdentityCode The new TeamLeader\u0027s IdentityCode.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"    public void setTeamLeader(IdentityCode leaderIdentityCode) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        this.leaderIdentityCode \u003d leaderIdentityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"     * Updates the Team Name of the team.","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Tang-Moyan"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Tang-Moyan"},"content":"     * @param newTeamName The new Team Name.","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeamName(String newTeamName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"        this.teamName \u003d newTeamName;","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the TeamLeader\u0027s IdentityCode of the team.","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"     * @return The TeamLeader\u0027s IdentityCode.","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"    public IdentityCode getTeamLeaderIdentityCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"        return this.leaderIdentityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the set of Developers\u0027 IdentityCodes in the team.","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"     * @return A set of Developers\u0027 IdentityCodes.","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"    public Set\u003cIdentityCode\u003e getDeveloperIdentityCodes() {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"        return developerIdentityCodes;","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"erohsikivar"},"content":"    public boolean containsDevloperIdentityCode(IdentityCode identityCodeToCheck) {","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"erohsikivar"},"content":"        return developerIdentityCodes.contains(identityCodeToCheck);","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the name of the team.","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"     * @return The team\u0027s name.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"    public String getTeamName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"        return this.teamName;","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"                .add(\"Team Name\", teamName)","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"                .add(\"Team Leader\", leaderIdentityCode)","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"                .add(\"Developer List\", developerIdentityCodes)","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"StevenLiudw"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"StevenLiudw"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"StevenLiudw"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"StevenLiudw"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"StevenLiudw"},"content":"        Team team \u003d (Team) o;","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"StevenLiudw"},"content":"        return Objects.equals(leaderIdentityCode, team.leaderIdentityCode)","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"StevenLiudw"},"content":"                \u0026\u0026 Objects.equals(teamName, team.teamName)","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"StevenLiudw"},"content":"                \u0026\u0026 Objects.equals(developerIdentityCodes, team.developerIdentityCodes);","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"StevenLiudw"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"StevenLiudw"},"content":"        return Objects.hash(leaderIdentityCode, teamName, developerIdentityCodes);","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"erohsikivar":7,"StevenLiudw":100,"Tang-Moyan":19,"adhigop13":1}},{"path":"src/main/java/seedu/address/model/team/TeamContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.team;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":" * Tests that a {@code Team}\u0027s name matches any of the keywords given.","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"public class TeamContainsKeywordsPredicate implements Predicate\u003cTeam\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    public TeamContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    public boolean test(Team team) {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"                .anyMatch(keyword -\u003e containsWordIgnoreCase(team.getTeamName(), keyword));","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    private static boolean containsWordIgnoreCase(String source, String query) {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        String pattern \u003d \"\\\\b\" + Pattern.quote(query) + \"\\\\b\"; // \\b denotes a word boundary","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"        return Pattern.compile(pattern, Pattern.CASE_INSENSITIVE).matcher(source).find();","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"                || (other instanceof TeamContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"                \u0026\u0026 keywords.equals(((TeamContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        return String.join(\", \", keywords);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"StevenLiudw":39}},{"path":"src/main/java/seedu/address/model/team/UniqueTeamList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"package seedu.address.model.team;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.exceptions.DeveloperNotFoundException;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":" * A list of teams that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":" * A team is considered unique by comparing using {@code Team#equals(Object)}.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"public class UniqueTeamList implements Iterable\u003cTeam\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    private final ObservableList\u003cTeam\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    private final ObservableList\u003cTeam\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     * Returns true if the list contains a team with the same name as the given argument.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    public boolean containsTeamByName(String teamName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        return internalList.stream().anyMatch(team -\u003e team.getTeamName().equals(teamName));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"     * Checks if given person by identity code is in given team","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"     * @param teamToAddTo          the team to add to","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"     * @param devToAddIdentityCode the dev to add identity code","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    public boolean teamContainsPerson(String teamToAddTo, IdentityCode devToAddIdentityCode) {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(teamToAddTo);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"        requireNonNull(devToAddIdentityCode);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        Team teamBeingAddedTo \u003d getTeamByName(teamToAddTo);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        Set\u003cIdentityCode\u003e devSet \u003d teamBeingAddedTo.getDeveloperIdentityCodes();","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"        for (IdentityCode identityCode : devSet) {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"            if (identityCode.equals(devToAddIdentityCode)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"                return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"        return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"erohsikivar"},"content":"     * Gets a team from the list by its name.","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"erohsikivar"},"content":"     * @param teamName The name of the team to retrieve.","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"erohsikivar"},"content":"     * @return The Team object if found, or null if the team does not exist.","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"erohsikivar"},"content":"    public Team getTeamByName(String teamName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"erohsikivar"},"content":"        for (Team team : internalList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"erohsikivar"},"content":"            if (team.getTeamName().equals(teamName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"erohsikivar"},"content":"                return team;","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"erohsikivar"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"erohsikivar"},"content":"        throw new TeamNotFoundException();","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"     * Adds a team to the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"     * The team must not already exist in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"    public void add(Team toAdd) {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"        if (containsTeamByName(toAdd.getTeamName())) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"            throw new DuplicateTeamException();","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"     * Add dev to team by identity code.","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"     * @param teamToAddTo          the team to add to","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"     * @param devToAddIdentityCode the dev to add identity code","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"    public void addDevToTeam(String teamToAddTo, IdentityCode devToAddIdentityCode) {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"        Team team \u003d getTeamByName(teamToAddTo);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"        team.addDeveloper(devToAddIdentityCode);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Tang-Moyan"},"content":"    public void editTeamName(String originalTeamName, String newTeamName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Tang-Moyan"},"content":"        getTeamByName(originalTeamName).setTeamName(newTeamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"Tang-Moyan"},"content":"    public void setTeamLeaderOfTeam(String teamName, IdentityCode newTeamLeaderID) {","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Tang-Moyan"},"content":"        getTeamByName(teamName).setTeamLeader(newTeamLeaderID);","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"     * Removes the team with the given name from the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"     * The team with the given name must exist in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"    public void removeTeamByName(String teamName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"erohsikivar"},"content":"        if (!internalList.remove(this.getTeamByName(teamName))) {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"StevenLiudw"},"content":"            throw new TeamNotFoundException();","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"adhigop13"},"content":"     * Remove developer from team by identity code.","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"adhigop13"},"content":"     * @param teamName              the team name","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"adhigop13"},"content":"     * @param developerIdentityCode the developer identity code","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"erohsikivar"},"content":"    public void removeDeveloperFromTeam(String teamName, IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"erohsikivar"},"content":"        requireNonNull(teamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"erohsikivar"},"content":"        requireNonNull(developerIdentityCode);","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"erohsikivar"},"content":"        Team team \u003d getTeamByName(teamName);","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"erohsikivar"},"content":"        if (team.containsDevloperIdentityCode(developerIdentityCode)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"erohsikivar"},"content":"            team.removeDeveloper(developerIdentityCode);","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"erohsikivar"},"content":"        } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"erohsikivar"},"content":"            throw new DeveloperNotFoundException();","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"erohsikivar"},"content":"     * Checks if the given id is an id of team leader.","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"erohsikivar"},"content":"     * @param developerIdentityCode the developerIdentityCode","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"erohsikivar"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"erohsikivar"},"content":"    public boolean isTeamLeader(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"erohsikivar"},"content":"        requireNonNull(developerIdentityCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"erohsikivar"},"content":"        for (Team team : internalList) {","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"erohsikivar"},"content":"            if (team.getTeamLeaderIdentityCode().equals(developerIdentityCode)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"erohsikivar"},"content":"                return true;","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"erohsikivar"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"erohsikivar"},"content":"        return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"erohsikivar"},"content":"     * Removes developer from all teams boolean.","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"erohsikivar"},"content":"     * @param developerIdentityCode the developer identity code","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"erohsikivar"},"content":"     * @return the boolean","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"erohsikivar"},"content":"    public boolean removeDeveloperFromAllTeams(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"erohsikivar"},"content":"        requireNonNull(developerIdentityCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"erohsikivar"},"content":"        boolean developerIsInTeam \u003d false;","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"erohsikivar"},"content":"        for (Team team: internalList) {","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"erohsikivar"},"content":"            if (team.containsDevloperIdentityCode(developerIdentityCode)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"erohsikivar"},"content":"                team.removeDeveloper(developerIdentityCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"erohsikivar"},"content":"                developerIsInTeam \u003d true;","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"erohsikivar"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"erohsikivar"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"erohsikivar"},"content":"        return developerIsInTeam;","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"adhigop13"},"content":"    public IdentityCode getTeamLeaderIdOfTeam(String teamName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"Tang-Moyan"},"content":"        return getTeamByName(teamName).getTeamLeaderIdentityCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"StevenLiudw"},"content":"    public void setTeams(UniqueTeamList replacement) {","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"StevenLiudw"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"StevenLiudw"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"StevenLiudw"},"content":"     * Replaces the contents of this list with {@code teams}.","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"StevenLiudw"},"content":"     * {@code teams} must not contain duplicate teams.","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"StevenLiudw"},"content":"    public void setTeams(List\u003cTeam\u003e teams) {","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"StevenLiudw"},"content":"        requireAllNonNull(teams);","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"StevenLiudw"},"content":"        if (!teamsAreUnique(teams)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"StevenLiudw"},"content":"            throw new DuplicateTeamException();","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"StevenLiudw"},"content":"        internalList.setAll(teams);","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"StevenLiudw"},"content":"    public ObservableList\u003cTeam\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"StevenLiudw"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"StevenLiudw"},"content":"    public Iterator\u003cTeam\u003e iterator() {","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"StevenLiudw"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"StevenLiudw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"StevenLiudw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"StevenLiudw"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"StevenLiudw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"StevenLiudw"},"content":"        if (!(other instanceof UniqueTeamList)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"StevenLiudw"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"StevenLiudw"},"content":"        UniqueTeamList otherUniqueTeamList \u003d (UniqueTeamList) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"StevenLiudw"},"content":"        return internalList.equals(otherUniqueTeamList.internalList);","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"StevenLiudw"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"StevenLiudw"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"StevenLiudw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"StevenLiudw"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"StevenLiudw"},"content":"     * Returns true if {@code teams} contains only unique teams.","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"StevenLiudw"},"content":"    private boolean teamsAreUnique(List\u003cTeam\u003e teams) {","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"StevenLiudw"},"content":"        for (int i \u003d 0; i \u003c teams.size() - 1; i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"StevenLiudw"},"content":"            for (int j \u003d i + 1; j \u003c teams.size(); j++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"StevenLiudw"},"content":"                if (teams.get(i).getTeamName().equals(teams.get(j).getTeamName())) {","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"StevenLiudw"},"content":"                    return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"StevenLiudw"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"StevenLiudw"},"content":"        return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"erohsikivar":65,"StevenLiudw":120,"Tang-Moyan":11,"adhigop13":40}},{"path":"src/main/java/seedu/address/model/team/exceptions/DeveloperNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"package seedu.address.model.team.exceptions;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":" * The type Developer not found exception.","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"public class DeveloperNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"    public DeveloperNotFoundException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"        super(\"The specified developer could not be found in the team\");","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"erohsikivar":7,"adhigop13":3}},{"path":"src/main/java/seedu/address/model/team/exceptions/DuplicateTeamException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"package seedu.address.model.team.exceptions;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":" * Signals that the operation will result in duplicate Teams (Teams are considered duplicates if they have the same","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":" * name).","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"public class DuplicateTeamException extends RuntimeException {","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"    public DuplicateTeamException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"        super(\"Operation would result in duplicate teams\");","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"erohsikivar":1,"StevenLiudw":10}},{"path":"src/main/java/seedu/address/model/team/exceptions/TeamNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"package seedu.address.model.team.exceptions;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":" * Signals that the operation is unable to find the specified team.","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"public class TeamNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"    public TeamNotFoundException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"        super(\"The specified team could not be found\");","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"erohsikivar":1,"StevenLiudw":9}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.TeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"    // Additions for TeamBook","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"    public static Team[] getSampleTeams() {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"        Team teamAlpha \u003d new Team(new IdentityCode(\"1\"), \"Team Alpha\");","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"        teamAlpha.addDeveloper(new IdentityCode(\"1\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"        teamAlpha.addDeveloper(new IdentityCode(\"2\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"        Team teamBeta \u003d new Team(new IdentityCode(\"2\"), \"Team Beta\");","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"        teamBeta.addDeveloper(new IdentityCode(\"3\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"        teamBeta.addDeveloper(new IdentityCode(\"4\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"        Team teamGamma \u003d new Team(new IdentityCode(\"3\"), \"Team Gamma\");","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"        teamGamma.addDeveloper(new IdentityCode(\"5\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"        teamGamma.addDeveloper(new IdentityCode(\"6\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"        return new Team[] {teamAlpha, teamBeta, teamGamma};","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"    public static ReadOnlyTeamBook getSampleTeamBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"        TeamBook sampleTb \u003d new TeamBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"        for (Team sampleTeam : getSampleTeams()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"            sampleTb.addTeam(sampleTeam);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"        return sampleTb;","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"JizhuoChen":10,"erohsikivar":1,"StevenLiudw":28,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"    private final String remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    private final String identityCode;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"            @JsonProperty(\"remark\") String remark, @JsonProperty(\"identityCode\") String identityCode,","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        this.identityCode \u003d identityCode;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"        identityCode \u003d source.getIdentityCode().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"StevenLiudw"},"content":"        if (identityCode \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"StevenLiudw"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"StevenLiudw"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, IdentityCode.class.getSimpleName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"JizhuoChen"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"JizhuoChen"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"JizhuoChen"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"JizhuoChen"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JizhuoChen":9,"StevenLiudw":12,"-":107}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTeam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":" * Jackson-friendly version of {@link Team}.","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"class JsonAdaptedTeam {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Team\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    private final String leaderIdentityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    private final Set\u003cString\u003e developerIdentityCodes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    private final String teamName;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    public JsonAdaptedTeam(@JsonProperty(\"leaderIdentityCode\") String leaderIdentityCode,","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"                           @JsonProperty(\"developerIdentityCodes\") Set\u003cString\u003e developerIdentityCodes,","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"                           @JsonProperty(\"teamName\") String teamName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        this.leaderIdentityCode \u003d leaderIdentityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        if (developerIdentityCodes !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"            this.developerIdentityCodes.addAll(developerIdentityCodes);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    public JsonAdaptedTeam(Team source) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        this.leaderIdentityCode \u003d source.getTeamLeaderIdentityCode().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        for (IdentityCode devIdCode : source.getDeveloperIdentityCodes()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"            this.developerIdentityCodes.add(devIdCode.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        this.teamName \u003d source.getTeamName();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * Converts this Jackson-friendly adapted team object into the model\u0027s {@code Team} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted team.","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    public Team toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        if (teamName \u003d\u003d null || teamName.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"teamName\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        if (leaderIdentityCode \u003d\u003d null || !IdentityCode.isValidCode(leaderIdentityCode)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"leaderIdentityCode\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCode leaderIdCode \u003d new IdentityCode(leaderIdentityCode);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"        Team team \u003d new Team(leaderIdCode, teamName);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"        for (String devCodeStr : developerIdentityCodes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"            if (IdentityCode.isValidCode(devCodeStr)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"                IdentityCode devIdCode \u003d new IdentityCode(devCodeStr);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"                team.addDeveloper(devIdCode);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"            } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"                throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"developerIdentityCode\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"        return team;","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"erohsikivar":2,"StevenLiudw":69}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTeamBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.TeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":" * A class to serialize a TeamBook into a JSON file.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"public class JsonSerializableTeamBook {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    public static final String MESSAGE_DUPLICATE_TEAM \u003d \"Team list contains duplicate team(s).\";","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    private final List\u003cJsonAdaptedTeam\u003e teams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a {@code JsonSerializableTeamBook} with the given teams.","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    public JsonSerializableTeamBook(@JsonProperty(\"teams\") List\u003cJsonAdaptedTeam\u003e teams) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        this.teams.addAll(teams);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     * Converts a given {@code ReadOnlyTeamBook} into this class for Jackson use.","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTeamBook}.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    public JsonSerializableTeamBook(ReadOnlyTeamBook source) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        teams.addAll(source.getTeamList().stream().map(JsonAdaptedTeam::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     * Converts this address book into the model\u0027s {@code TeamBook} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"    public TeamBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"        TeamBook teamBook \u003d new TeamBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        for (JsonAdaptedTeam jsonAdaptedTeam : teams) {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"            Team team \u003d jsonAdaptedTeam.toModelType();","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"            if (teamBook.hasTeam(team)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TEAM);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"            teamBook.addTeam(team);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        return teamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"erohsikivar":1,"StevenLiudw":57}},{"path":"src/main/java/seedu/address/storage/JsonTeamBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":" * A class to handle storage of TeamBook data in JSON format.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"public class JsonTeamBookStorage implements TeamBookStorage {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTeamBookStorage.class);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a {@code JsonTeamBookStorage} with the given file path.","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     * @param filePath File path to the JSON storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    public JsonTeamBookStorage(Path filePath) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    public Path getTeamBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        return filePath;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     * Reads the team book data from the default storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     * @return An optional of ReadOnlyTeamBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     *         Returns {@code Optional.empty()} if the file is not found.","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DataLoadingException If there is a problem with reading the data from the storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"    public Optional\u003cReadOnlyTeamBook\u003e readTeamBook() throws DataLoadingException {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"        return readTeamBook(filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"     * Reads the team book data from the specified storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"     * @param filePath File path to the JSON storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"     * @return An optional of ReadOnlyTeamBook.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"     *         Returns {@code Optional.empty()} if the file is not found.","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DataLoadingException If there is a problem with reading the data from the storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"    public Optional\u003cReadOnlyTeamBook\u003e readTeamBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"            Optional\u003cJsonSerializableTeamBook\u003e jsonTeamBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"                    filePath, JsonSerializableTeamBook.class);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"            if (!jsonTeamBook.isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"                return Optional.empty();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"            return Optional.of(jsonTeamBook.get().toModelType());","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"     * Saves the given team book data to the default storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamBook The team book data. Must not be null.","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException If there was any problem writing to the storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"    public void saveTeamBook(ReadOnlyTeamBook teamBook) throws IOException {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"        saveTeamBook(teamBook, filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"     * Saves the given team book data to the specified storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamBook The team book data. Must not be null.","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"     * @param filePath File path to the JSON storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException If there was any problem writing to the storage file.","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"    public void saveTeamBook(ReadOnlyTeamBook teamBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTeamBook(teamBook), filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"StevenLiudw":94}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"public interface Storage extends AddressBookStorage, TeamBookStorage, UserPrefsStorage {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    Optional\u003cReadOnlyTeamBook\u003e readTeamBook() throws DataLoadingException;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    void saveTeamBook(ReadOnlyTeamBook addressBook) throws IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    Path getTeamBookFilePath();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"StevenLiudw":8,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    private TeamBookStorage teamBookStorage;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"                          TeamBookStorage teamBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        this.teamBookStorage \u003d teamBookStorage;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TeamBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"    public Path getTeamBookFilePath() {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"        return teamBookStorage.getTeamBookFilePath();","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"    public Optional\u003cReadOnlyTeamBook\u003e readTeamBook() throws DataLoadingException {","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"        return readTeamBook(teamBookStorage.getTeamBookFilePath());","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"    public Optional\u003cReadOnlyTeamBook\u003e readTeamBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"        return teamBookStorage.readTeamBook(filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"    public void saveTeamBook(ReadOnlyTeamBook teamBook) throws IOException {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"        saveTeamBook(teamBook, teamBookStorage.getTeamBookFilePath());","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"    public void saveTeamBook(ReadOnlyTeamBook teamBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"        teamBookStorage.saveTeamBook(teamBook, filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"StevenLiudw":33,"-":77}},{"path":"src/main/java/seedu/address/storage/TeamBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" * Represents a storage for {@link seedu.address.model.TeamBook}.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"public interface TeamBookStorage {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    Path getTeamBookFilePath();","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     * Returns TeamBook data as a {@link ReadOnlyTeamBook}.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    Optional\u003cReadOnlyTeamBook\u003e readTeamBook() throws DataLoadingException;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"     * @see #getTeamBookFilePath()","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    Optional\u003cReadOnlyTeamBook\u003e readTeamBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     * Saves the given {@link ReadOnlyTeamBook} to the storage.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamBook cannot be null.","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    void saveTeamBook(ReadOnlyTeamBook teamBook) throws IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     * @see #saveTeamBook(ReadOnlyTeamBook)","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"    void saveTeamBook(ReadOnlyTeamBook teamBook, Path filePath) throws IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"StevenLiudw":45}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w11-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JizhuoChen":2,"-":101}},{"path":"src/main/java/seedu/address/ui/LinkTreeDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":" * The LinkTreeDisplay class is responsible for displaying the hierarchical structure of teams and their members","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":" * within a project. It utilizes JavaFX for rendering the graphical user interface.","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":" *","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":" * \u003cp\u003eThis class extends the UiPart class and is typically instantiated to display team structures in the user","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":" * interface. It retrieves data from the Logic class to populate the team structures and their members.\u003c/p\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":" *","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":" * \u003cp\u003eEach team is represented as a TeamStructureDisplay, which includes the team\u0027s name, leader, and developers.","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":" * Multiple TeamStructureDisplay components are added","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":" * to the LinkTreeDisplay to display all the teams within a project.\u003c/p\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":" *","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":" * @see UiPart","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":" * @see TeamStructureDisplay","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Tang-Moyan"},"content":"public class LinkTreeDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"    private static final String FXML \u003d \"LinkTreeDisplay.fxml\";","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LinkTreeDisplay.class);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"    private Label projectName;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Tang-Moyan"},"content":"    private HBox teamStructures;","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Tang-Moyan"},"content":"    private Logic logic;","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"    private ObservableList\u003cTeam\u003e teams;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new instance of the LinkTreeDisplay class.","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"     * \u003cp\u003eThis constructor initializes the LinkTreeDisplay with the provided Logic instance and project name.","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"     * It sets up the graphical user interface for displaying the project\u0027s team structure and populates it with","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"     * team information retrieved from the Logic instance.\u003c/p\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"     * @param logic       The Logic instance used to retrieve team information and manage the application\u0027s data.","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"     * @param projectName The name of the project for which the team structure is being displayed.","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Tang-Moyan"},"content":"    public LinkTreeDisplay(Logic logic, String projectName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Tang-Moyan"},"content":"        super(FXML);","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Tang-Moyan"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"        this.teams \u003d logic.getTeamBook().getTeamList();","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"Tang-Moyan"},"content":"        this.projectName.setText(\"Project name: \" + projectName);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Tang-Moyan"},"content":"        addAllTeamStructure();","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"     * Adds all team structures for the project to the display. This method iterates through the list of teams","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"     * retrieved from the Logic class and adds each team\u0027s structure to the UI.","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Tang-Moyan"},"content":"    public void addAllTeamStructure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Tang-Moyan"},"content":"        for (Team t : teams) {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Tang-Moyan"},"content":"            addOneTeamStructure(t);","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"     * Adds the structure of a single team to the display. This method takes a Team object as input and creates a","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"     * TeamStructureDisplay component to represent the team\u0027s name, leader, and developers. The resulting","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"     * TeamStructureDisplay is added to the UI.","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"     * @param t The Team object representing the team to be added to the display.","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"Tang-Moyan"},"content":"    public void addOneTeamStructure(Team t) {","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Tang-Moyan"},"content":"        String teamName \u003d t.getTeamName();","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Tang-Moyan"},"content":"        IdentityCode teamLeaderID \u003d t.getTeamLeaderIdentityCode();","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Tang-Moyan"},"content":"        Person teamLeader \u003d logic.getPersonByIdentityCode(teamLeaderID);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Tang-Moyan"},"content":"        Set\u003cIdentityCode\u003e developerIDs \u003d t.getDeveloperIdentityCodes();","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Tang-Moyan"},"content":"        ObservableList\u003cPerson\u003e developers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Tang-Moyan"},"content":"        for (IdentityCode i : developerIDs) {","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Tang-Moyan"},"content":"            developers.add(logic.getPersonByIdentityCode(i));","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"Tang-Moyan"},"content":"        TeamStructureDisplay teamStructureDisplay \u003d new TeamStructureDisplay(teamName, teamLeader, developers);","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"Tang-Moyan"},"content":"        this.teamStructures.getChildren().add(teamStructureDisplay.getRoot());","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"Tang-Moyan"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Tang-Moyan":61,"StevenLiudw":38}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    private static final String SHOWING_HELP_MESSAGE \u003d HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"    private TeamListPanel teamListPanel;","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"    private StackPane teamListPanelPlaceholder;","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"    private StackPane D_personListPanelPlaceholder;","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"    private StackPane D_teamListPanelPlaceholder;","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"    private VBox singleListContainer;","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"    private VBox personList;","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"    private VBox teamList;","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"    private HBox dualListContainer;","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"JizhuoChen"},"content":"    private VBox D_personList;","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"    private VBox D_teamList;","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"JizhuoChen"},"content":"    private StackPane tree;","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"    private StackPane personStats;","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"JizhuoChen"},"content":"    private StackPane teamStats;","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"    private boolean isListingPerson;","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"    private boolean isListingTeam;","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"JizhuoChen"},"content":"    private boolean isShowingTree;","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"JizhuoChen"},"content":"    private double originalResultDisplayHeight;","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":101,"author":{"gitId":"erohsikivar"},"content":"        this.primaryStage.setTitle(\"LinkTree App\");","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"JizhuoChen"},"content":"     * Resize the ResultDisplay to a larger size.","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"JizhuoChen"},"content":"    private void expandResultDisplay() {","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"JizhuoChen"},"content":"        resultDisplayPlaceholder.setPrefHeight(400);","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"JizhuoChen"},"content":"     * Resize the ResultDisplay back to default size.","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"JizhuoChen"},"content":"    private void revertResultDisplay() {","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"JizhuoChen"},"content":"        resultDisplayPlaceholder.setPrefHeight(originalResultDisplayHeight);","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"JizhuoChen"},"content":"     * @param whatToFill String that indicates what to fill in the inner parts","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"JizhuoChen"},"content":"    void fillInnerParts(String whatToFill) {","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"JizhuoChen"},"content":"        if (whatToFill.equals(\"persons\")) {","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"JizhuoChen"},"content":"            fillPersonList();","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"JizhuoChen"},"content":"        } else if (whatToFill.equals(\"teams\")) {","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"JizhuoChen"},"content":"            fillTeamList();","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"JizhuoChen"},"content":"        } else if (whatToFill.equals(\"both\")) {","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"JizhuoChen"},"content":"            fillBothList();","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"JizhuoChen"},"content":"        switchToListPanel(whatToFill);","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"JizhuoChen"},"content":"        fillBothList();","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"JizhuoChen"},"content":"        switchToListPanel(\"both\");","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":194,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"JizhuoChen"},"content":"        setStatistics();","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"JizhuoChen"},"content":"        originalResultDisplayHeight \u003d resultDisplayPlaceholder.getPrefHeight();","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"JizhuoChen"},"content":"     * set the label and values for the statistic area.","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"JizhuoChen"},"content":"    private void setStatistics() {","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"JizhuoChen"},"content":"        Label personLabel \u003d new Label(\"   Total number of developers: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"JizhuoChen"},"content":"                + logic.getFilteredPersonList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"JizhuoChen"},"content":"        personLabel.setStyle(\"-fx-text-fill: #ecbdbd;\");","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"JizhuoChen"},"content":"        personStats.getChildren().add(personLabel);","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"JizhuoChen"},"content":"        StackPane.setAlignment(personLabel, Pos.CENTER_LEFT);","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"JizhuoChen"},"content":"        Label teamLabel \u003d new Label(\"   Total number of teams: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"JizhuoChen"},"content":"                + logic.getFilteredTeamList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"JizhuoChen"},"content":"        teamLabel.setStyle(\"-fx-text-fill: #ecbdbd;\");","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"JizhuoChen"},"content":"        teamStats.getChildren().add(teamLabel);","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"JizhuoChen"},"content":"        StackPane.setAlignment(teamLabel, Pos.CENTER_LEFT);","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"JizhuoChen"},"content":"     * Fills the Person list.","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"JizhuoChen"},"content":"    private void fillPersonList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"JizhuoChen"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-20"},{"lineNumber":222,"author":{"gitId":"JizhuoChen"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-20"},{"lineNumber":223,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":224,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":225,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":226,"author":{"gitId":"JizhuoChen"},"content":"     * Fills the teams list.","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"JizhuoChen"},"content":"    private void fillTeamList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"JizhuoChen"},"content":"        teamListPanel \u003d new TeamListPanel(logic.getFilteredTeamList(), logic.getFilteredPersonList());","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"JizhuoChen"},"content":"        teamListPanelPlaceholder.getChildren().add(teamListPanel.getRoot());","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":233,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":234,"author":{"gitId":"JizhuoChen"},"content":"     * Fills both the person and the teams list.","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":236,"author":{"gitId":"JizhuoChen"},"content":"    private void fillBothList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"JizhuoChen"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-24"},{"lineNumber":238,"author":{"gitId":"JizhuoChen"},"content":"        D_personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-24"},{"lineNumber":239,"author":{"gitId":"JizhuoChen"},"content":"        teamListPanel \u003d new TeamListPanel(logic.getFilteredTeamList(), logic.getFilteredPersonList());","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"JizhuoChen"},"content":"        D_teamListPanelPlaceholder.getChildren().add(teamListPanel.getRoot());","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":242,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":244,"author":{"gitId":"JizhuoChen"},"content":"     * Method to switch between panels.","lastModifiedDate":"2023-10-20"},{"lineNumber":245,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":246,"author":{"gitId":"JizhuoChen"},"content":"     * @param panelType String indicating which panel to display","lastModifiedDate":"2023-10-20"},{"lineNumber":247,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":248,"author":{"gitId":"JizhuoChen"},"content":"    public void switchToListPanel(String panelType) {","lastModifiedDate":"2023-10-20"},{"lineNumber":249,"author":{"gitId":"JizhuoChen"},"content":"        if (\"persons\".equals(panelType)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":250,"author":{"gitId":"JizhuoChen"},"content":"            showPersonList();","lastModifiedDate":"2023-10-20"},{"lineNumber":251,"author":{"gitId":"JizhuoChen"},"content":"        } else if (\"teams\".equals(panelType)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":252,"author":{"gitId":"JizhuoChen"},"content":"            showTeamList();","lastModifiedDate":"2023-10-20"},{"lineNumber":253,"author":{"gitId":"JizhuoChen"},"content":"        } else if (\"both\".equals(panelType)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":254,"author":{"gitId":"JizhuoChen"},"content":"            showBothList();","lastModifiedDate":"2023-10-24"},{"lineNumber":255,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":256,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":257,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":258,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":259,"author":{"gitId":"JizhuoChen"},"content":"     * Set visibility of Vbox: personList -\u003e visible, teamList -\u003e not visible","lastModifiedDate":"2023-10-20"},{"lineNumber":260,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":261,"author":{"gitId":"JizhuoChen"},"content":"    public void showPersonList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":262,"author":{"gitId":"JizhuoChen"},"content":"        singleListContainer.getChildren().setAll(personList);","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"JizhuoChen"},"content":"        singleListContainer.setVisible(true);","lastModifiedDate":"2023-10-24"},{"lineNumber":264,"author":{"gitId":"JizhuoChen"},"content":"        tree.setVisible(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"JizhuoChen"},"content":"        dualListContainer.setVisible(false);","lastModifiedDate":"2023-10-24"},{"lineNumber":266,"author":{"gitId":"JizhuoChen"},"content":"        personList.setVisible(true);","lastModifiedDate":"2023-10-20"},{"lineNumber":267,"author":{"gitId":"JizhuoChen"},"content":"        teamList.setVisible(false);","lastModifiedDate":"2023-10-20"},{"lineNumber":268,"author":{"gitId":"JizhuoChen"},"content":"        personListPanelPlaceholder.setVisible(true);","lastModifiedDate":"2023-10-20"},{"lineNumber":269,"author":{"gitId":"JizhuoChen"},"content":"        teamListPanelPlaceholder.setVisible(false);","lastModifiedDate":"2023-10-20"},{"lineNumber":270,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":271,"author":{"gitId":"JizhuoChen"},"content":"        isListingPerson \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":272,"author":{"gitId":"JizhuoChen"},"content":"        isListingTeam \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":273,"author":{"gitId":"JizhuoChen"},"content":"        isShowingTree \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":275,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":276,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":277,"author":{"gitId":"JizhuoChen"},"content":"     * Set visibility of Vbox: personList -\u003e not visible, teamList -\u003e visible","lastModifiedDate":"2023-10-20"},{"lineNumber":278,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":279,"author":{"gitId":"JizhuoChen"},"content":"    public void showTeamList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":280,"author":{"gitId":"JizhuoChen"},"content":"        singleListContainer.getChildren().setAll(teamList);","lastModifiedDate":"2023-10-24"},{"lineNumber":281,"author":{"gitId":"JizhuoChen"},"content":"        singleListContainer.setVisible(true);","lastModifiedDate":"2023-10-24"},{"lineNumber":282,"author":{"gitId":"JizhuoChen"},"content":"        tree.setVisible(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"JizhuoChen"},"content":"        dualListContainer.setVisible(false);","lastModifiedDate":"2023-10-24"},{"lineNumber":284,"author":{"gitId":"JizhuoChen"},"content":"        personList.setVisible(false);","lastModifiedDate":"2023-10-20"},{"lineNumber":285,"author":{"gitId":"JizhuoChen"},"content":"        teamList.setVisible(true);","lastModifiedDate":"2023-10-20"},{"lineNumber":286,"author":{"gitId":"JizhuoChen"},"content":"        personListPanelPlaceholder.setVisible(false);","lastModifiedDate":"2023-10-20"},{"lineNumber":287,"author":{"gitId":"JizhuoChen"},"content":"        teamListPanelPlaceholder.setVisible(true);","lastModifiedDate":"2023-10-20"},{"lineNumber":288,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":289,"author":{"gitId":"JizhuoChen"},"content":"        isListingTeam \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":290,"author":{"gitId":"JizhuoChen"},"content":"        isListingPerson \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":291,"author":{"gitId":"JizhuoChen"},"content":"        isShowingTree \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":293,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":294,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":295,"author":{"gitId":"JizhuoChen"},"content":"     * Set visibility of Vbox: personList -\u003e not visible, teamList -\u003e visible","lastModifiedDate":"2023-10-24"},{"lineNumber":296,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":297,"author":{"gitId":"JizhuoChen"},"content":"    public void showBothList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":298,"author":{"gitId":"JizhuoChen"},"content":"        dualListContainer.getChildren().setAll(D_personList, D_teamList);","lastModifiedDate":"2023-10-24"},{"lineNumber":299,"author":{"gitId":"JizhuoChen"},"content":"        tree.setVisible(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"JizhuoChen"},"content":"        singleListContainer.setVisible(false);","lastModifiedDate":"2023-10-24"},{"lineNumber":301,"author":{"gitId":"JizhuoChen"},"content":"        dualListContainer.setVisible(true);","lastModifiedDate":"2023-10-24"},{"lineNumber":302,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":303,"author":{"gitId":"JizhuoChen"},"content":"        this.isListingPerson \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":304,"author":{"gitId":"JizhuoChen"},"content":"        this.isListingTeam \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":305,"author":{"gitId":"JizhuoChen"},"content":"        this.isShowingTree \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":310,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":330,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":331,"author":{"gitId":"JizhuoChen"},"content":"        resultDisplay.setFeedbackToUser(SHOWING_HELP_MESSAGE);","lastModifiedDate":"2023-11-02"},{"lineNumber":332,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":333,"author":{"gitId":"JizhuoChen"},"content":"        expandResultDisplay();","lastModifiedDate":"2023-10-24"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":337,"author":{"gitId":"JizhuoChen"},"content":"     * Fill the panel with list of person.","lastModifiedDate":"2023-10-20"},{"lineNumber":338,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":339,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":340,"author":{"gitId":"JizhuoChen"},"content":"    public void handleListPerson() {","lastModifiedDate":"2023-10-20"},{"lineNumber":341,"author":{"gitId":"JizhuoChen"},"content":"        if (isListingPerson) {","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"JizhuoChen"},"content":"            fillInnerParts(\"both\");","lastModifiedDate":"2023-10-24"},{"lineNumber":343,"author":{"gitId":"JizhuoChen"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":344,"author":{"gitId":"JizhuoChen"},"content":"            fillInnerParts(\"persons\");","lastModifiedDate":"2023-10-20"},{"lineNumber":345,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":346,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":347,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":348,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":349,"author":{"gitId":"JizhuoChen"},"content":"     * Fill the panel with list of teams instead of person.","lastModifiedDate":"2023-10-20"},{"lineNumber":350,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":351,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":352,"author":{"gitId":"JizhuoChen"},"content":"    public void handleListTeam() {","lastModifiedDate":"2023-10-20"},{"lineNumber":353,"author":{"gitId":"JizhuoChen"},"content":"        if (isListingTeam) {","lastModifiedDate":"2023-10-24"},{"lineNumber":354,"author":{"gitId":"JizhuoChen"},"content":"            fillInnerParts(\"both\");","lastModifiedDate":"2023-10-24"},{"lineNumber":355,"author":{"gitId":"JizhuoChen"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":356,"author":{"gitId":"JizhuoChen"},"content":"            fillInnerParts(\"teams\");","lastModifiedDate":"2023-10-20"},{"lineNumber":357,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":358,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":359,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":360,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":361,"author":{"gitId":"StevenLiudw"},"content":"     * Fill the panel with list of person.","lastModifiedDate":"2023-11-04"},{"lineNumber":362,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":363,"author":{"gitId":"StevenLiudw"},"content":"    @FXML","lastModifiedDate":"2023-11-04"},{"lineNumber":364,"author":{"gitId":"StevenLiudw"},"content":"    public void handleFindPerson() {","lastModifiedDate":"2023-11-04"},{"lineNumber":365,"author":{"gitId":"StevenLiudw"},"content":"        fillInnerParts(\"persons\");","lastModifiedDate":"2023-11-04"},{"lineNumber":366,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":367,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":368,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":369,"author":{"gitId":"StevenLiudw"},"content":"     * Fill the panel with list of teams instead of person.","lastModifiedDate":"2023-11-04"},{"lineNumber":370,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":371,"author":{"gitId":"StevenLiudw"},"content":"    @FXML","lastModifiedDate":"2023-11-04"},{"lineNumber":372,"author":{"gitId":"StevenLiudw"},"content":"    public void handleFindTeam() {","lastModifiedDate":"2023-11-04"},{"lineNumber":373,"author":{"gitId":"StevenLiudw"},"content":"        fillInnerParts(\"teams\");","lastModifiedDate":"2023-11-04"},{"lineNumber":374,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":391,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":392,"author":{"gitId":"JizhuoChen"},"content":"    private void handleTree() {","lastModifiedDate":"2023-10-25"},{"lineNumber":393,"author":{"gitId":"JizhuoChen"},"content":"        if (isShowingTree) {","lastModifiedDate":"2023-10-25"},{"lineNumber":394,"author":{"gitId":"JizhuoChen"},"content":"            hideTree();","lastModifiedDate":"2023-10-25"},{"lineNumber":395,"author":{"gitId":"JizhuoChen"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":396,"author":{"gitId":"JizhuoChen"},"content":"            showTree();","lastModifiedDate":"2023-10-25"},{"lineNumber":397,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":398,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":399,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":400,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":401,"author":{"gitId":"JizhuoChen"},"content":"     * Refresh the card container to show any changes.","lastModifiedDate":"2023-10-24"},{"lineNumber":402,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":403,"author":{"gitId":"JizhuoChen"},"content":"    public void refreshCardContainer() {","lastModifiedDate":"2023-10-24"},{"lineNumber":404,"author":{"gitId":"JizhuoChen"},"content":"        if (!isListingPerson \u0026\u0026 !isListingTeam \u0026\u0026 !isShowingTree) {","lastModifiedDate":"2023-10-25"},{"lineNumber":405,"author":{"gitId":"JizhuoChen"},"content":"            fillInnerParts(\"both\");","lastModifiedDate":"2023-10-24"},{"lineNumber":406,"author":{"gitId":"JizhuoChen"},"content":"        } else if (isListingTeam) {","lastModifiedDate":"2023-10-24"},{"lineNumber":407,"author":{"gitId":"JizhuoChen"},"content":"            fillInnerParts(\"teams\");","lastModifiedDate":"2023-10-24"},{"lineNumber":408,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":409,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":410,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":411,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":412,"author":{"gitId":"JizhuoChen"},"content":"     * Refresh the statistics to show any changes.","lastModifiedDate":"2023-10-26"},{"lineNumber":413,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":414,"author":{"gitId":"JizhuoChen"},"content":"    public void refreshStatistics() {","lastModifiedDate":"2023-10-26"},{"lineNumber":415,"author":{"gitId":"JizhuoChen"},"content":"        teamStats.getChildren().clear();","lastModifiedDate":"2023-10-26"},{"lineNumber":416,"author":{"gitId":"JizhuoChen"},"content":"        personStats.getChildren().clear();","lastModifiedDate":"2023-10-26"},{"lineNumber":417,"author":{"gitId":"JizhuoChen"},"content":"        setStatistics();","lastModifiedDate":"2023-10-26"},{"lineNumber":418,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":419,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":420,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":421,"author":{"gitId":"JizhuoChen"},"content":"     * @return the current personList Panel","lastModifiedDate":"2023-10-20"},{"lineNumber":422,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":427,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":428,"author":{"gitId":"JizhuoChen"},"content":"     * @return the current teamList Panel","lastModifiedDate":"2023-10-20"},{"lineNumber":429,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":430,"author":{"gitId":"JizhuoChen"},"content":"    public TeamListPanel getTeamListPanel() {","lastModifiedDate":"2023-10-20"},{"lineNumber":431,"author":{"gitId":"JizhuoChen"},"content":"        return teamListPanel;","lastModifiedDate":"2023-10-20"},{"lineNumber":432,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":433,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":434,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":435,"author":{"gitId":"JizhuoChen"},"content":"     * To toggle the tree to be shown.","lastModifiedDate":"2023-10-25"},{"lineNumber":436,"author":{"gitId":"JizhuoChen"},"content":"     * Called when a single \u0027tree\u0027 command is received.","lastModifiedDate":"2023-10-25"},{"lineNumber":437,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":438,"author":{"gitId":"JizhuoChen"},"content":"    public void showTree() {","lastModifiedDate":"2023-10-25"},{"lineNumber":439,"author":{"gitId":"JizhuoChen"},"content":"        singleListContainer.setVisible(false);","lastModifiedDate":"2023-10-25"},{"lineNumber":440,"author":{"gitId":"JizhuoChen"},"content":"        dualListContainer.setVisible(false);","lastModifiedDate":"2023-10-25"},{"lineNumber":441,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":442,"author":{"gitId":"Tang-Moyan"},"content":"        //todo: maybe add functions to define project name","lastModifiedDate":"2023-10-27"},{"lineNumber":443,"author":{"gitId":"Tang-Moyan"},"content":"        String projectName \u003d \"LinkTree\";","lastModifiedDate":"2023-10-27"},{"lineNumber":444,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":445,"author":{"gitId":"Tang-Moyan"},"content":"        LinkTreeDisplay linkTreeDisplay \u003d new LinkTreeDisplay(logic, projectName);","lastModifiedDate":"2023-11-02"},{"lineNumber":446,"author":{"gitId":"Tang-Moyan"},"content":"        tree.getChildren().add(linkTreeDisplay.getRoot());","lastModifiedDate":"2023-10-27"},{"lineNumber":447,"author":{"gitId":"JizhuoChen"},"content":"        tree.setVisible(true);","lastModifiedDate":"2023-10-25"},{"lineNumber":448,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":449,"author":{"gitId":"JizhuoChen"},"content":"        this.isShowingTree \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":450,"author":{"gitId":"JizhuoChen"},"content":"        this.isListingPerson \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":451,"author":{"gitId":"JizhuoChen"},"content":"        this.isListingTeam \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":452,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":453,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":454,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":455,"author":{"gitId":"JizhuoChen"},"content":"     * To toggle the tree to be hidden.","lastModifiedDate":"2023-10-25"},{"lineNumber":456,"author":{"gitId":"JizhuoChen"},"content":"     * By right only the second \u0027tree\u0027 command will call this function.","lastModifiedDate":"2023-10-25"},{"lineNumber":457,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":458,"author":{"gitId":"JizhuoChen"},"content":"    public void hideTree() {","lastModifiedDate":"2023-10-25"},{"lineNumber":459,"author":{"gitId":"Tang-Moyan"},"content":"        tree.getChildren().clear();","lastModifiedDate":"2023-10-27"},{"lineNumber":460,"author":{"gitId":"JizhuoChen"},"content":"        tree.setVisible(false);","lastModifiedDate":"2023-10-25"},{"lineNumber":461,"author":{"gitId":"JizhuoChen"},"content":"        fillInnerParts(\"both\");","lastModifiedDate":"2023-10-25"},{"lineNumber":462,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":463,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":465,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":466,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":467,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":468,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":471,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":472,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":475,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":477,"author":{"gitId":"JizhuoChen"},"content":"            } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":478,"author":{"gitId":"JizhuoChen"},"content":"                revertResultDisplay();","lastModifiedDate":"2023-10-24"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":482,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":483,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":485,"author":{"gitId":"JizhuoChen"},"content":"            if (commandResult.isListTeam()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":486,"author":{"gitId":"JizhuoChen"},"content":"                handleListTeam();","lastModifiedDate":"2023-10-20"},{"lineNumber":487,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":488,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":489,"author":{"gitId":"JizhuoChen"},"content":"            if (commandResult.isListPerson()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":490,"author":{"gitId":"JizhuoChen"},"content":"                handleListPerson();","lastModifiedDate":"2023-10-20"},{"lineNumber":491,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":492,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":493,"author":{"gitId":"JizhuoChen"},"content":"            if (commandResult.isShowTree()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":494,"author":{"gitId":"JizhuoChen"},"content":"                handleTree();","lastModifiedDate":"2023-10-25"},{"lineNumber":495,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":496,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":497,"author":{"gitId":"StevenLiudw"},"content":"            if (commandResult.isFindPerson()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":498,"author":{"gitId":"StevenLiudw"},"content":"                handleFindPerson();","lastModifiedDate":"2023-11-04"},{"lineNumber":499,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":500,"author":{"gitId":"StevenLiudw"},"content":"            if (commandResult.isFindTeam()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":501,"author":{"gitId":"StevenLiudw"},"content":"                handleFindTeam();","lastModifiedDate":"2023-11-04"},{"lineNumber":502,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":503,"author":{"gitId":"JizhuoChen"},"content":"            refreshCardContainer();","lastModifiedDate":"2023-10-24"},{"lineNumber":504,"author":{"gitId":"JizhuoChen"},"content":"            refreshStatistics();","lastModifiedDate":"2023-10-26"},{"lineNumber":505,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":506,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":509,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":510,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":513,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JizhuoChen":292,"erohsikivar":1,"StevenLiudw":22,"Tang-Moyan":7,"-":191}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"    private Label remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"JizhuoChen":4,"-":58}},{"path":"src/main/java/seedu/address/ui/TeamCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"erohsikivar"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":" * A UI component that displays information of a {@code Team}.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"public class TeamCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    private static final String FXML \u003d \"TeamListCard.fxml\";","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    public final Team team;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    private ObservableList\u003cPerson\u003e memberList;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"    private Label teamName;","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"    private Label id;","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    private VBox teamLeader;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"    private VBox teamMembers;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"     * Constructor of the TeamCard class which creates a","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"     * UI component that displays information of a {@code Team}.","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"     * @param team On of the teams for display.","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"     * @param displayedIndex Index of the team for display.","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"    public TeamCard(Team team, int displayedIndex, ObservableList\u003cPerson\u003e memberList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"        super(FXML);","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"        this.team \u003d team;","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"        this.memberList \u003d memberList;","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"        id.setText(displayedIndex + \".     ---- \");","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"        teamName.setText(team.getTeamName() + \"  ----\");","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"        IdentityCode leaderID \u003d team.getTeamLeaderIdentityCode();","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"        Person leader \u003d findPersonById(memberList, leaderID);","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        if (leader !\u003d null) {","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"            Label teamLeaderLabel \u003d new Label(\"Team leader -\u003e  \"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"                    + leader.getName());","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"            teamLeaderLabel.setStyle(\"-fx-font-size: 14px;\");","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"            teamLeaderLabel.setWrapText(true);","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"            teamLeaderLabel.setMaxWidth(800);","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"            teamLeader.getChildren().addAll(teamLeaderLabel);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"            // Handle the case where the leader is not found","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"            Label errorLabel \u003d new Label(\"Team leader not found!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"            errorLabel.setStyle(\"-fx-font-size: 14px;\");","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"            errorLabel.setWrapText(true);","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"            errorLabel.setMaxWidth(800);","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"            teamLeader.getChildren().addAll(errorLabel);","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"        Label devLabel \u003d new Label(\"Developers: \");","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"        teamMembers.getChildren().add(devLabel);","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"        Set\u003cIdentityCode\u003e developerIdentityCodes \u003d team.getDeveloperIdentityCodes();","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"        if (developerIdentityCodes.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"JizhuoChen"},"content":"            Label memberLabel \u003d new Label(\"( There is no developer in this team yet )\");","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"JizhuoChen"},"content":"            memberLabel.setStyle(\"-fx-font-size: 12px;\");","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"JizhuoChen"},"content":"            memberLabel.setWrapText(true);","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"            memberLabel.setMaxWidth(800);","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"JizhuoChen"},"content":"            teamMembers.getChildren().add(memberLabel);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"            developerIdentityCodes.forEach(memberCode -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"JizhuoChen"},"content":"                Label memberLabel \u003d new Label(\" -\u003e  \"","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"JizhuoChen"},"content":"                        + findPersonById(memberList, memberCode).getName());","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"JizhuoChen"},"content":"                memberLabel.setStyle(\"-fx-font-size: 12px;\");","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"JizhuoChen"},"content":"                memberLabel.setWrapText(true);","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"JizhuoChen"},"content":"                memberLabel.setMaxWidth(800);","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"JizhuoChen"},"content":"                teamMembers.getChildren().add(memberLabel);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"JizhuoChen"},"content":"            });","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"     * Find the person in the address book given his IdentityCode","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"     * @param personsList the list of persons in the address book","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"     * @param targetID the target person\u0027s IdentityCode","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"     * @return the Person of the given IdentityCode","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"    public Person findPersonById(ObservableList\u003cPerson\u003e personsList, IdentityCode targetID) {","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"JizhuoChen"},"content":"        return personsList.stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"JizhuoChen"},"content":"                .filter(person -\u003e person.getIdentityCode().equals(targetID))","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"JizhuoChen"},"content":"                .findFirst()","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"JizhuoChen"},"content":"                .orElse(null);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"JizhuoChen":100,"erohsikivar":2,"StevenLiudw":9}},{"path":"src/main/java/seedu/address/ui/TeamListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":" * Panel containing the list of teams.","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"public class TeamListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    private static final String FXML \u003d \"TeamListPanel.fxml\";","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TeamListPanel.class);","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    private ObservableList\u003cPerson\u003e memberList;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    private ListView\u003cTeam\u003e teamListView;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"     * Creates a {@code TeamListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    public TeamListPanel(ObservableList\u003cTeam\u003e teamList, ObservableList\u003cPerson\u003e memberList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"        super(FXML);","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"        teamListView.setItems(teamList);","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"        teamListView.setCellFactory(listView -\u003e new TeamListViewCell());","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        this.memberList \u003d memberList;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Team} using a {@code TeamCard}.","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"    class TeamListViewCell extends ListCell\u003cTeam\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"        protected void updateItem(Team team, boolean empty) {","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"            super.updateItem(team, empty);","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"            if (empty || team \u003d\u003d null) {","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"                setText(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"            } else {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Tang-Moyan"},"content":"                TeamCard teamCard \u003d new TeamCard(team, getIndex() + 1, memberList);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"                setGraphic(teamCard.getRoot());","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"JizhuoChen":51,"Tang-Moyan":2}},{"path":"src/main/java/seedu/address/ui/TeamStructureDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":" * The TeamStructureDisplay class is responsible for displaying the structure of a team within a project.","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":" * It utilizes JavaFX for rendering the graphical user interface.","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":" *","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":" * \u003cp\u003eThis class extends the UiPart class and is typically instantiated to display a team\u0027s name, leader, and","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":" * list of developers in the user interface. It provides a visual representation of the team\u0027s structure.\u003c/p\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":" *","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":" * \u003cp\u003eThe DevelopersViewCell inner class is a custom ListCell used for rendering each developer\u0027s information within","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":" * the ListView of developers. It displays developer information using a PersonCard component.\u003c/p\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":" *","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":" * @see UiPart","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":" * @see DevelopersViewCell","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"public class TeamStructureDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"    private static final String FXML \u003d \"TeamStructureDisplay.fxml\";","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TeamStructureDisplay.class);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Tang-Moyan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"    private Label teamName;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"    private Label teamLeader;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Tang-Moyan"},"content":"    private ListView\u003cPerson\u003e developerListView;","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new instance of the TeamStructureDisplay class.","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * \u003cp\u003eThis constructor initializes the TeamStructureDisplay with the provided team name, team leader,","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * and a list of developers. It sets up the graphical user interface for displaying the structure of a team","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     * within a project, including the team\u0027s name, leader, and list of developers.\u003c/p\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamName       The name of the team being displayed.","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"     * @param teamLeader     The leader of the team being displayed.","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"     * @param developers     An ObservableList of Person objects representing the developers in the team.","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Tang-Moyan"},"content":"    public TeamStructureDisplay(String teamName, Person teamLeader, ObservableList\u003cPerson\u003e developers) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Tang-Moyan"},"content":"        super(FXML);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Tang-Moyan"},"content":"        this.teamName.setText(\"Team Name: \" + teamName);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Tang-Moyan"},"content":"        this.teamLeader.setText(\"Team Leader:\\n\" + teamLeader.getName());","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Tang-Moyan"},"content":"        developerListView.setItems(developers);","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Tang-Moyan"},"content":"        developerListView.setCellFactory(listView -\u003e new DevelopersViewCell());","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Tang-Moyan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Tang-Moyan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Tang-Moyan"},"content":"    class DevelopersViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Tang-Moyan"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Tang-Moyan"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Tang-Moyan"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Tang-Moyan"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Tang-Moyan"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Tang-Moyan"},"content":"                setText(null);","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Tang-Moyan"},"content":"            } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Tang-Moyan"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Tang-Moyan"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Tang-Moyan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Tang-Moyan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Tang-Moyan"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Tang-Moyan":54,"StevenLiudw":26}},{"path":"src/main/resources/view/LinkTreeDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.shape.Line?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"\u003cStackPane prefHeight\u003d\"468.0\" prefWidth\u003d\"666.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"      \u003cScrollPane fitToWidth\u003d\"true\" layoutY\u003d\"200.0\" prefHeight\u003d\"370.0\" prefWidth\u003d\"600.0\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cHBox fx:id\u003d\"teamStructures\" layoutY\u003d\"200.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":"        \u003c/content\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Tang-Moyan"},"content":"         \u003cStackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cInsets top\u003d\"85.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":"         \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Tang-Moyan"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Tang-Moyan"},"content":"      \u003cLine endY\u003d\"80.0\" startY\u003d\"65.0\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Tang-Moyan"},"content":"         \u003cStackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cInsets top\u003d\"70.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Tang-Moyan"},"content":"         \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":"      \u003c/Line\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Tang-Moyan"},"content":"      \u003cRectangle arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"#b7dee4\" height\u003d\"60.0\" stroke\u003d\"#447974\" strokeLineCap\u003d\"ROUND\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"3.0\" width\u003d\"200.0\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"         \u003cStackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"         \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"      \u003c/Rectangle\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Tang-Moyan"},"content":"      \u003cLabel fx:id\u003d\"projectName\" prefHeight\u003d\"50.0\" prefWidth\u003d\"190.0\" text\u003d\"projectName\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Tang-Moyan"},"content":"         \u003cStackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cInsets top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"         \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Tang-Moyan":37}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"         title\u003d\"Address App\" minWidth\u003d\"800\" minHeight\u003d\"800\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"400\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        \u003cHBox fx:id\u003d\"statistics\" styleClass\u003d\"pane-with-border\" minHeight\u003d\"40\" prefHeight\u003d\"40\" maxHeight\u003d\"40\"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"              VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"          \u003c!-- Box for person list statistics --\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"            \u003cStackPane fx:id\u003d\"personStats\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"1000\"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"                       HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"            \u003c!-- design for person statistics --\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"          \u003c!-- Box for team list statistics --\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"          \u003cStackPane fx:id\u003d\"teamStats\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"1000\"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"                     HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"            \u003c!-- design for team statistics --\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"        \u003cStackPane fx:id\u003d\"cardContainer\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"          \u003cVBox fx:id\u003d\"singleListContainer\" visible\u003d\"false\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"            \u003cVBox fx:id\u003d\"teamList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"JizhuoChen"},"content":"              \u003cStackPane fx:id\u003d\"teamListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"JizhuoChen"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"JizhuoChen"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"JizhuoChen"},"content":"          \u003cHBox fx:id\u003d\"dualListContainer\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"            \u003cVBox fx:id\u003d\"D_personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"1000\"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"                  VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"JizhuoChen"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"JizhuoChen"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"JizhuoChen"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"JizhuoChen"},"content":"              \u003cStackPane fx:id\u003d\"D_personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"JizhuoChen"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"JizhuoChen"},"content":"            \u003cVBox fx:id\u003d\"D_teamList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"1000\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"JizhuoChen"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"JizhuoChen"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"JizhuoChen"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"JizhuoChen"},"content":"              \u003cStackPane fx:id\u003d\"D_teamListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"          \u003cStackPane fx:id\u003d\"tree\" VBox.vgrow\u003d\"ALWAYS\" style\u003d\"-fx-background-color: grey;\" visible\u003d\"false\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"            \u003c!-- add tree here --\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"JizhuoChen"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"JizhuoChen"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"JizhuoChen":51,"-":61}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" maxWidth\u003d\"800.0\" /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" maxWidth\u003d\"800.0\" /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\" maxWidth\u003d\"800.0\" /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" maxWidth\u003d\"800.0\" /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" wrapText\u003d\"true\" maxWidth\u003d\"800.0\" /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JizhuoChen":7,"-":32}},{"path":"src/main/resources/view/TeamListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"160\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"                \u003cLabel fx:id\u003d\"teamName\" text\u003d\"\\$teamName\" styleClass\u003d\"cell_big_label\"","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"                       wrapText\u003d\"true\" maxWidth\u003d\"800.0\" /\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"            \u003cVBox fx:id\u003d\"teamLeader\"  /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"            \u003cVBox fx:id\u003d\"teamMembers\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"JizhuoChen":35}},{"path":"src/main/resources/view/TeamListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"    \u003cListView fx:id\u003d\"teamListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"JizhuoChen":8}},{"path":"src/main/resources/view/TeamStructureDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.shape.Line?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Tang-Moyan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Tang-Moyan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"Tang-Moyan"},"content":"\u003cVBox prefWidth\u003d\"200.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"Tang-Moyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"Tang-Moyan"},"content":"      \u003cStackPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"Tang-Moyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cVBox StackPane.alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"Tang-Moyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Tang-Moyan"},"content":"                  \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Tang-Moyan"},"content":"                     \u003ccontent\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Tang-Moyan"},"content":"                        \u003cVBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Tang-Moyan"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Tang-Moyan"},"content":"                              \u003cListView fx:id\u003d\"developerListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Tang-Moyan"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Tang-Moyan"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Tang-Moyan"},"content":"                     \u003c/content\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Tang-Moyan"},"content":"                  \u003c/ScrollPane\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Tang-Moyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Tang-Moyan"},"content":"               \u003cStackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Tang-Moyan"},"content":"                  \u003cInsets top\u003d\"140.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Tang-Moyan"},"content":"               \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Tang-Moyan"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cLine endX\u003d\"75.0\" startX\u003d\"75.0\" startY\u003d\"25.0\" StackPane.alignment\u003d\"TOP_CENTER\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cLine endY\u003d\"15.0\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Tang-Moyan"},"content":"               \u003cStackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"Tang-Moyan"},"content":"                  \u003cInsets top\u003d\"125.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"Tang-Moyan"},"content":"               \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"Tang-Moyan"},"content":"            \u003c/Line\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cRectangle arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"#ffeeb9\" height\u003d\"100.0\" stroke\u003d\"#edbb47\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"3.0\" width\u003d\"190.0\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"Tang-Moyan"},"content":"               \u003cStackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"Tang-Moyan"},"content":"                  \u003cInsets top\u003d\"25.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"Tang-Moyan"},"content":"               \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"Tang-Moyan"},"content":"            \u003c/Rectangle\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cLabel fx:id\u003d\"teamName\" prefHeight\u003d\"40.0\" prefWidth\u003d\"180.0\" style\u003d\"-fx-text-fill: #008df8; -fx-font-weight: bold;\" text\u003d\"teamName\" textFill\u003d\"#008df8\" underline\u003d\"true\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"Tang-Moyan"},"content":"               \u003cStackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"Tang-Moyan"},"content":"                  \u003cInsets top\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"Tang-Moyan"},"content":"               \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"Tang-Moyan"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"Tang-Moyan"},"content":"                  \u003cFont size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"Tang-Moyan"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"Tang-Moyan"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cLabel fx:id\u003d\"teamLeader\" prefHeight\u003d\"40.0\" prefWidth\u003d\"180.0\" text\u003d\"teamLeader\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"Tang-Moyan"},"content":"               \u003cStackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"Tang-Moyan"},"content":"                  \u003cInsets top\u003d\"75.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"Tang-Moyan"},"content":"               \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"Tang-Moyan"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"Tang-Moyan"},"content":"                  \u003cFont size\u003d\"11.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"Tang-Moyan"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"Tang-Moyan"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"Tang-Moyan"},"content":"            \u003cLine endX\u003d\"100.0\" startX\u003d\"-100.0\" strokeWidth\u003d\"2.0\" StackPane.alignment\u003d\"TOP_CENTER\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"Tang-Moyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"Tang-Moyan"},"content":"      \u003c/StackPane\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"Tang-Moyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"Tang-Moyan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Tang-Moyan":65}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.logic.commands.AddTeamCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.storage.JsonTeamBookStorage;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.testutil.TypicalTeams;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":46,"author":{"gitId":"erohsikivar"},"content":"    private static final Team SAMPLE_TEAM \u003d TypicalTeams.TEAM1;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"erohsikivar"},"content":"    private static final String SAMPLE_LEADER \u003d TypicalPersons.ALICE.getName().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"erohsikivar"},"content":"    private static final String TEAM_NAME_DESC_SAMPLE \u003d SAMPLE_TEAM.getTeamName();","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"erohsikivar"},"content":"    private static final String ADD_TEAM_COMMAND \u003d \"newteam\" + \" tn/\" + TEAM_NAME_DESC_SAMPLE + \" tl/\" + SAMPLE_LEADER;","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        JsonTeamBookStorage teamBookStorage \u003d new JsonTeamBookStorage(temporaryFolder.resolve(\"teamBook.json\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, teamBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"erohsikivar"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"erohsikivar"},"content":"    public void execute_addTeamCommand_teamAdded() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"erohsikivar"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"erohsikivar"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"erohsikivar"},"content":"        expectedModel.addTeam(SAMPLE_TEAM);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"erohsikivar"},"content":"        assertCommandSuccess(ADD_TEAM_COMMAND, String.format(","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"erohsikivar"},"content":"                AddTeamCommand.MESSAGE_SUCCESS, Messages.format(SAMPLE_TEAM, new Name(SAMPLE_LEADER))), expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"erohsikivar"},"content":"    //    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"erohsikivar"},"content":"    //    public void execute_storageThrowsIoExceptionWhileSavingTeamBook_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"erohsikivar"},"content":"    //        assertCommandFailureForExceptionFromTeamBookStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"erohsikivar"},"content":"    //                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"erohsikivar"},"content":"    //    }","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"    public void getFilteredTeamList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTeamList().remove(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"    // This is a new method to specifically simulate an exception when saving the teambook.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"    private void assertCommandFailureForExceptionFromTeamBookStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionTeamBook.json\");","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"erohsikivar"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"erohsikivar"},"content":"                temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"        JsonTeamBookStorage teamBookStorage \u003d new JsonTeamBookStorage(prefPath) {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"            @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"            public void saveTeamBook(ReadOnlyTeamBook teamBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"                throw e;","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"        };","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, teamBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"StevenLiudw"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"StevenLiudw"},"content":"        assertCommandFailure(ADD_TEAM_COMMAND, CommandException.class, expectedMessage, new ModelManager());","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":125,"author":{"gitId":"erohsikivar"},"content":"    //    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"erohsikivar"},"content":"    //    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"erohsikivar"},"content":"    //        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"erohsikivar"},"content":"    //                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"erohsikivar"},"content":"    //    }","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"erohsikivar"},"content":"    //    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"erohsikivar"},"content":"    //    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"erohsikivar"},"content":"    //        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"erohsikivar"},"content":"    //                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"erohsikivar"},"content":"    //    }","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"adhigop13"},"content":"        //assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"StevenLiudw"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":213,"author":{"gitId":"StevenLiudw"},"content":"        JsonTeamBookStorage teamBookStorage \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"StevenLiudw"},"content":"                new JsonTeamBookStorage(temporaryFolder.resolve(\"teamBook.json\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":217,"author":{"gitId":"StevenLiudw"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, teamBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"erohsikivar":32,"StevenLiudw":34,"-":161,"adhigop13":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":46,"adhigop13":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-11-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-11-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-11-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":120,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"StevenLiudw"},"content":"        public Path getTeamBookFilePath() {","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"StevenLiudw"},"content":"            return null;","lastModifiedDate":"2023-11-04"},{"lineNumber":123,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":124,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-11-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":130,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"StevenLiudw"},"content":"        public void setTeamBookFilePath(Path teamBookFilePath) {","lastModifiedDate":"2023-11-04"},{"lineNumber":132,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":133,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":134,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-11-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-11-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-11-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-11-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":155,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":156,"author":{"gitId":"StevenLiudw"},"content":"        public boolean containsPerson(Name name) {","lastModifiedDate":"2023-11-04"},{"lineNumber":157,"author":{"gitId":"StevenLiudw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":158,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":159,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":160,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":161,"author":{"gitId":"StevenLiudw"},"content":"        public Person getPersonByName(Name name) {","lastModifiedDate":"2023-11-04"},{"lineNumber":162,"author":{"gitId":"StevenLiudw"},"content":"            return null;","lastModifiedDate":"2023-11-04"},{"lineNumber":163,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":164,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":165,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":166,"author":{"gitId":"StevenLiudw"},"content":"        public IdentityCode getIdentityCodeByName(Name developerName) {","lastModifiedDate":"2023-11-04"},{"lineNumber":167,"author":{"gitId":"StevenLiudw"},"content":"            return null;","lastModifiedDate":"2023-11-04"},{"lineNumber":168,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":169,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":170,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":171,"author":{"gitId":"StevenLiudw"},"content":"        public Name getNameByIdentityCode(IdentityCode developerID) {","lastModifiedDate":"2023-11-04"},{"lineNumber":172,"author":{"gitId":"StevenLiudw"},"content":"            return null;","lastModifiedDate":"2023-11-04"},{"lineNumber":173,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":174,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":175,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":176,"author":{"gitId":"StevenLiudw"},"content":"        public boolean invalidAddToTeam(String teamToAddTo) {","lastModifiedDate":"2023-11-04"},{"lineNumber":177,"author":{"gitId":"StevenLiudw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":178,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":179,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-11-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-11-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-11-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-11-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":199,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":200,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":201,"author":{"gitId":"StevenLiudw"},"content":"        public void addToTeam(String teamToAddTo, Name devToAdd) {","lastModifiedDate":"2023-11-04"},{"lineNumber":202,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":203,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":204,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":205,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":206,"author":{"gitId":"StevenLiudw"},"content":"        public void setTeamBook(ReadOnlyTeamBook teamBook) {","lastModifiedDate":"2023-11-04"},{"lineNumber":207,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":208,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":209,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":210,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":211,"author":{"gitId":"StevenLiudw"},"content":"        public ReadOnlyTeamBook getTeamBook() {","lastModifiedDate":"2023-11-04"},{"lineNumber":212,"author":{"gitId":"StevenLiudw"},"content":"            return null;","lastModifiedDate":"2023-11-04"},{"lineNumber":213,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":214,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":215,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":216,"author":{"gitId":"StevenLiudw"},"content":"        public boolean hasTeam(String teamName) {","lastModifiedDate":"2023-11-04"},{"lineNumber":217,"author":{"gitId":"StevenLiudw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":218,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":219,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":220,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":221,"author":{"gitId":"StevenLiudw"},"content":"        public void deleteTeam(String teamName) {","lastModifiedDate":"2023-11-04"},{"lineNumber":222,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":223,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":224,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":225,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":226,"author":{"gitId":"StevenLiudw"},"content":"        public void addTeam(Team team) {","lastModifiedDate":"2023-11-04"},{"lineNumber":227,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":228,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":229,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":230,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":231,"author":{"gitId":"StevenLiudw"},"content":"        public boolean isLeaderOfTeam(String teamName, Name devToBeAdded) {","lastModifiedDate":"2023-11-04"},{"lineNumber":232,"author":{"gitId":"StevenLiudw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":233,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":234,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":235,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":236,"author":{"gitId":"StevenLiudw"},"content":"        public boolean developerIsTeamLeader(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-11-04"},{"lineNumber":237,"author":{"gitId":"StevenLiudw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":238,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":239,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":240,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":241,"author":{"gitId":"StevenLiudw"},"content":"        public boolean removeDeveloperFromAllTeams(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-11-04"},{"lineNumber":242,"author":{"gitId":"StevenLiudw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":243,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":244,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":245,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":246,"author":{"gitId":"StevenLiudw"},"content":"        public void deleteDeveloperFromTeam(String teamName, IdentityCode developerIdentityCOde) {","lastModifiedDate":"2023-11-04"},{"lineNumber":247,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":248,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":249,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":250,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":251,"author":{"gitId":"StevenLiudw"},"content":"        public boolean personAlreadyInTeam(String teamToAddTo, Name devToAdd) {","lastModifiedDate":"2023-11-04"},{"lineNumber":252,"author":{"gitId":"StevenLiudw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":253,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":254,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":255,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":256,"author":{"gitId":"StevenLiudw"},"content":"        public void editTeamName(String originalTeamName, String newTeamName) {","lastModifiedDate":"2023-11-04"},{"lineNumber":257,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":258,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":259,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":260,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":261,"author":{"gitId":"StevenLiudw"},"content":"        public Name getTeamLeaderOfTeam(String teamName) {","lastModifiedDate":"2023-11-04"},{"lineNumber":262,"author":{"gitId":"StevenLiudw"},"content":"            return null;","lastModifiedDate":"2023-11-04"},{"lineNumber":263,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":264,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":265,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":266,"author":{"gitId":"StevenLiudw"},"content":"        public IdentityCode getTeamLeaderIdOfTeam(String teamName) {","lastModifiedDate":"2023-11-04"},{"lineNumber":267,"author":{"gitId":"StevenLiudw"},"content":"            return null;","lastModifiedDate":"2023-11-04"},{"lineNumber":268,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":269,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":270,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":271,"author":{"gitId":"StevenLiudw"},"content":"        public void setTeamLeaderOfTeam(String teamName, IdentityCode newTeamLeaderID) {","lastModifiedDate":"2023-11-04"},{"lineNumber":272,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":273,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":274,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":275,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":276,"author":{"gitId":"StevenLiudw"},"content":"        public ObservableList\u003cTeam\u003e getFilteredTeamList() {","lastModifiedDate":"2023-11-04"},{"lineNumber":277,"author":{"gitId":"StevenLiudw"},"content":"            return null;","lastModifiedDate":"2023-11-04"},{"lineNumber":278,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":279,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":280,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":281,"author":{"gitId":"StevenLiudw"},"content":"        public void updateFilteredTeamList(Predicate\u003cTeam\u003e predicate) {","lastModifiedDate":"2023-11-04"},{"lineNumber":282,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":283,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":284,"author":{"gitId":"StevenLiudw"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":285,"author":{"gitId":"StevenLiudw"},"content":"        public Person getPersonByIdentityCode(IdentityCode id) {","lastModifiedDate":"2023-11-04"},{"lineNumber":286,"author":{"gitId":"StevenLiudw"},"content":"            return null;","lastModifiedDate":"2023-11-04"},{"lineNumber":287,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-11-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-11-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2023-11-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-11-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-11-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-11-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-11-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-11-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2023-11-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-11-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-11-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-11-04"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-11-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-11-04"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-11-04"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-11-04"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2023-11-04"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-11-04"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2023-11-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"StevenLiudw":128,"-":203}},{"path":"src/test/java/seedu/address/logic/commands/AddDevToTeamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"public class AddDevToTeamCommandTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"    public void constructor_nullTeamName_throwsNullPointerException() {","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        Name devName \u003d BENSON.getName();","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDevToTeamCommand(null, devName));","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"    public void constructor_nullTeamLeaderName_throwsNullPointerException() {","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"Team Test Alpha\";","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDevToTeamCommand(teamName, null));","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"    public void execute_invalidTeamName_throwsInvalidTeamCommandException() {","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"This team does not exist in the model\";","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"        Name devName \u003d AMY.getName();","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"        AddDevToTeamCommand addDevToTeam \u003d new AddDevToTeamCommand(teamName, devName);","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"        assertThrows(CommandException.class, () -\u003e addDevToTeam.execute(model));","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"    public void execute_invalidPerson_throwsInvalidPersonCommandException() {","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"TEAM1\";","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"        Name devName \u003d new Name(\"This person does not exist\");","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"        AddDevToTeamCommand addDevToTeam \u003d new AddDevToTeamCommand(teamName, devName);","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"        assertThrows(CommandException.class, () -\u003e addDevToTeam.execute(model));","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"    public void execute_personAlreadyInTeam_throwsDuplicatePersonException() {","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"TEAM1\";","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"        Name devName \u003d CARL.getName();","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"        AddDevToTeamCommand addDevToTeam \u003d new AddDevToTeamCommand(teamName, devName);","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"            addDevToTeam.execute(model);","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"            fail(\"Expected this method to fail\");","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\"This developer already exists in this team!\", e.getMessage());","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"    public void execute_leaderOfTeamBeingAdded_throwsTeamLeaderAddException() {","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"TEAM1\";","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"        Name devName \u003d ALICE.getName();","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"        AddDevToTeamCommand addDevToTeam \u003d new AddDevToTeamCommand(teamName, devName);","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"            addDevToTeam.execute(model);","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"            fail(\"Expected this method to fail\");","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\"The leader of team cannot be added as a developer!\", e.getMessage());","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"    public void execute_validDeveloperAdded_success() throws CommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"TEAM2\";","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"adhigop13"},"content":"        Name devName \u003d ALICE.getName();","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"adhigop13"},"content":"        AddDevToTeamCommand addDevToTeam \u003d new AddDevToTeamCommand(teamName, devName);","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"adhigop13"},"content":"        assertEquals(String.format(AddDevToTeamCommand.MESSAGE_SUCCESS, Messages.format(teamName, devName)),","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"adhigop13"},"content":"                addDevToTeam.execute(model).getFeedbackToUser());","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"adhigop13"},"content":"    public void equals() {","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"adhigop13"},"content":"        Name dev1 \u003d ALICE.getName();","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"adhigop13"},"content":"        Name dev2 \u003d BENSON.getName();","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"adhigop13"},"content":"        String teamName1 \u003d \"TEAM1\";","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"adhigop13"},"content":"        String teamName2 \u003d \"TEAM2\";","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"adhigop13"},"content":"        AddDevToTeamCommand addCommand1 \u003d new AddDevToTeamCommand(teamName1, dev1);","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"adhigop13"},"content":"        AddDevToTeamCommand addCommand2 \u003d new AddDevToTeamCommand(teamName2, dev2);","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"adhigop13"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"adhigop13"},"content":"        assertTrue(addCommand1.equals(addCommand1));","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"adhigop13"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"adhigop13"},"content":"        AddDevToTeamCommand addCommand3 \u003d new AddDevToTeamCommand(teamName1, dev1);","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"adhigop13"},"content":"        assertTrue(addCommand3.equals(addCommand1));","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"adhigop13"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"adhigop13"},"content":"        assertFalse(addCommand1.equals(\"abc\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"adhigop13"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"adhigop13"},"content":"        assertFalse(addCommand2.equals(null));","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"adhigop13"},"content":"        // different team command -\u003e returns false","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"adhigop13"},"content":"        assertFalse(addCommand1.equals(addCommand2));","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"adhigop13"},"content":"        // same teamname,different leadername -\u003e returns false","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"adhigop13"},"content":"        AddTeamCommand addTeam4Command \u003d new AddTeamCommand(teamName1, dev2);","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"adhigop13"},"content":"        assertFalse(addCommand1.equals(addTeam4Command));","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"adhigop13"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"TEAM1\";","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"adhigop13"},"content":"        Name devToAdd \u003d DANIEL.getName();","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"adhigop13"},"content":"        AddDevToTeamCommand addCommand \u003d new AddDevToTeamCommand(teamName, devToAdd);","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"adhigop13"},"content":"        String expected \u003d AddDevToTeamCommand.class.getCanonicalName() + \"{devToAdd\u003d\" + devToAdd + \"}\";","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"adhigop13"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"adhigop13"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"adhigop13"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"adhigop13"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"adhigop13"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"adhigop13"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"adhigop13"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":161,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":162,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":163,"author":{"gitId":"adhigop13"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":166,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":167,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":168,"author":{"gitId":"adhigop13"},"content":"        public Path getTeamBookFilePath() {","lastModifiedDate":"2023-11-10"},{"lineNumber":169,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":170,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":171,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":172,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":173,"author":{"gitId":"adhigop13"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-11-10"},{"lineNumber":174,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":176,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":178,"author":{"gitId":"adhigop13"},"content":"        public void setTeamBookFilePath(Path teamBookFilePath) {","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":180,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":181,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":182,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":183,"author":{"gitId":"adhigop13"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-11-10"},{"lineNumber":184,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":185,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":186,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":187,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":188,"author":{"gitId":"adhigop13"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-11-10"},{"lineNumber":189,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":190,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":191,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":192,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":193,"author":{"gitId":"adhigop13"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-11-10"},{"lineNumber":194,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":195,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":196,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":197,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":198,"author":{"gitId":"adhigop13"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-11-10"},{"lineNumber":199,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":200,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":201,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":202,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":203,"author":{"gitId":"adhigop13"},"content":"        public boolean containsPerson(Name name) {","lastModifiedDate":"2023-11-10"},{"lineNumber":204,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":205,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":206,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":207,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":208,"author":{"gitId":"adhigop13"},"content":"        public Person getPersonByName(Name name) {","lastModifiedDate":"2023-11-10"},{"lineNumber":209,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":210,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":211,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":212,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":213,"author":{"gitId":"adhigop13"},"content":"        public IdentityCode getIdentityCodeByName(Name developerName) {","lastModifiedDate":"2023-11-10"},{"lineNumber":214,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":215,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":216,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":217,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":218,"author":{"gitId":"adhigop13"},"content":"        public Name getNameByIdentityCode(IdentityCode developerID) {","lastModifiedDate":"2023-11-10"},{"lineNumber":219,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":220,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":221,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":222,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":223,"author":{"gitId":"adhigop13"},"content":"        public boolean invalidAddToTeam(String teamToAddTo) {","lastModifiedDate":"2023-11-10"},{"lineNumber":224,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":225,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":226,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":227,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":228,"author":{"gitId":"adhigop13"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-11-10"},{"lineNumber":229,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":231,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":232,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":233,"author":{"gitId":"adhigop13"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-11-10"},{"lineNumber":234,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":235,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":236,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":237,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":238,"author":{"gitId":"adhigop13"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-11-10"},{"lineNumber":239,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":240,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":241,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":242,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":243,"author":{"gitId":"adhigop13"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-11-10"},{"lineNumber":244,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":245,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":246,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":247,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":248,"author":{"gitId":"adhigop13"},"content":"        public void addToTeam(String teamToAddTo, Name devToAdd) {","lastModifiedDate":"2023-11-10"},{"lineNumber":249,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":250,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":251,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":252,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":253,"author":{"gitId":"adhigop13"},"content":"        public void setTeamBook(ReadOnlyTeamBook teamBook) {","lastModifiedDate":"2023-11-10"},{"lineNumber":254,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":255,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":256,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":257,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":258,"author":{"gitId":"adhigop13"},"content":"        public ReadOnlyTeamBook getTeamBook() {","lastModifiedDate":"2023-11-10"},{"lineNumber":259,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":260,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":261,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":262,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":263,"author":{"gitId":"adhigop13"},"content":"        public boolean hasTeam(String teamName) {","lastModifiedDate":"2023-11-10"},{"lineNumber":264,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":265,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":266,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":267,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":268,"author":{"gitId":"adhigop13"},"content":"        public void deleteTeam(String teamName) {","lastModifiedDate":"2023-11-10"},{"lineNumber":269,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":270,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":271,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":272,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":273,"author":{"gitId":"adhigop13"},"content":"        public void addTeam(Team team) {","lastModifiedDate":"2023-11-10"},{"lineNumber":274,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":275,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":276,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":277,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":278,"author":{"gitId":"adhigop13"},"content":"        public boolean isLeaderOfTeam(String teamName, Name devToBeAdded) {","lastModifiedDate":"2023-11-10"},{"lineNumber":279,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":280,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":281,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":282,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":283,"author":{"gitId":"adhigop13"},"content":"        public boolean developerIsTeamLeader(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-11-10"},{"lineNumber":284,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":285,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":286,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":287,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":288,"author":{"gitId":"adhigop13"},"content":"        public boolean removeDeveloperFromAllTeams(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-11-10"},{"lineNumber":289,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":290,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":291,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":292,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":293,"author":{"gitId":"adhigop13"},"content":"        public void deleteDeveloperFromTeam(String teamName, IdentityCode developerIdentityCOde) {","lastModifiedDate":"2023-11-10"},{"lineNumber":294,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":295,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":296,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":297,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":298,"author":{"gitId":"adhigop13"},"content":"        public boolean personAlreadyInTeam(String teamToAddTo, Name devToAdd) {","lastModifiedDate":"2023-11-10"},{"lineNumber":299,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":300,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":301,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":302,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":303,"author":{"gitId":"adhigop13"},"content":"        public void editTeamName(String originalTeamName, String newTeamName) {","lastModifiedDate":"2023-11-10"},{"lineNumber":304,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":305,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":306,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":307,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":308,"author":{"gitId":"adhigop13"},"content":"        public Name getTeamLeaderOfTeam(String teamName) {","lastModifiedDate":"2023-11-10"},{"lineNumber":309,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":310,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":311,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":312,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":313,"author":{"gitId":"adhigop13"},"content":"        public IdentityCode getTeamLeaderIdOfTeam(String teamName) {","lastModifiedDate":"2023-11-10"},{"lineNumber":314,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":315,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":316,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":317,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":318,"author":{"gitId":"adhigop13"},"content":"        public void setTeamLeaderOfTeam(String teamName, IdentityCode newTeamLeaderID) {","lastModifiedDate":"2023-11-10"},{"lineNumber":319,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":320,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":321,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":322,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":323,"author":{"gitId":"adhigop13"},"content":"        public ObservableList\u003cTeam\u003e getFilteredTeamList() {","lastModifiedDate":"2023-11-10"},{"lineNumber":324,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":325,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":326,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":327,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":328,"author":{"gitId":"adhigop13"},"content":"        public void updateFilteredTeamList(Predicate\u003cTeam\u003e predicate) {","lastModifiedDate":"2023-11-10"},{"lineNumber":329,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":330,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":331,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":332,"author":{"gitId":"adhigop13"},"content":"        public Person getPersonByIdentityCode(IdentityCode id) {","lastModifiedDate":"2023-11-10"},{"lineNumber":333,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":334,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":335,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":336,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":337,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":338,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":339,"author":{"gitId":"adhigop13"},"content":"     * A Model stub that accepts the teams being added.","lastModifiedDate":"2023-11-10"},{"lineNumber":340,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":341,"author":{"gitId":"adhigop13"},"content":"    private class ModelStubAcceptingTeamAdded extends AddDevToTeamCommandTest.ModelStub {","lastModifiedDate":"2023-11-10"},{"lineNumber":342,"author":{"gitId":"adhigop13"},"content":"        final ArrayList\u003cTeam\u003e teamsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":343,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":344,"author":{"gitId":"adhigop13"},"content":"        public void sampleTeamBuilder() {","lastModifiedDate":"2023-11-10"},{"lineNumber":345,"author":{"gitId":"adhigop13"},"content":"            String newTeamName \u003d \"Test Team Zeta\";","lastModifiedDate":"2023-11-10"},{"lineNumber":346,"author":{"gitId":"adhigop13"},"content":"            IdentityCode newDevIdentityCode \u003d TypicalPersons.ALICE.getIdentityCode();","lastModifiedDate":"2023-11-10"},{"lineNumber":347,"author":{"gitId":"adhigop13"},"content":"            Team newTeam \u003d new Team(newDevIdentityCode, newTeamName);","lastModifiedDate":"2023-11-10"},{"lineNumber":348,"author":{"gitId":"adhigop13"},"content":"            teamsAdded.add(newTeam);","lastModifiedDate":"2023-11-10"},{"lineNumber":349,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":350,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":351,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":352,"author":{"gitId":"adhigop13"},"content":"        public boolean hasTeam(String thisTeamName) {","lastModifiedDate":"2023-11-10"},{"lineNumber":353,"author":{"gitId":"adhigop13"},"content":"            requireNonNull(thisTeamName);","lastModifiedDate":"2023-11-10"},{"lineNumber":354,"author":{"gitId":"adhigop13"},"content":"            return teamsAdded.stream().anyMatch(currentTeam -\u003e currentTeam.getTeamName().equals(thisTeamName));","lastModifiedDate":"2023-11-10"},{"lineNumber":355,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":356,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":357,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":358,"author":{"gitId":"adhigop13"},"content":"        public void addTeam(Team team) {","lastModifiedDate":"2023-11-10"},{"lineNumber":359,"author":{"gitId":"adhigop13"},"content":"            requireNonNull(team);","lastModifiedDate":"2023-11-10"},{"lineNumber":360,"author":{"gitId":"adhigop13"},"content":"            teamsAdded.add(team);","lastModifiedDate":"2023-11-10"},{"lineNumber":361,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":362,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":363,"author":{"gitId":"adhigop13"},"content":"        public boolean containsPerson(Name name) {","lastModifiedDate":"2023-11-10"},{"lineNumber":364,"author":{"gitId":"adhigop13"},"content":"            requireNonNull(name);","lastModifiedDate":"2023-11-10"},{"lineNumber":365,"author":{"gitId":"adhigop13"},"content":"            return getTypicalAddressBook().containsPerson(name);","lastModifiedDate":"2023-11-10"},{"lineNumber":366,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":367,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":368,"author":{"gitId":"adhigop13"},"content":"        public boolean personAlreadyInTeam(String teamToAddTo, Name devToAdd) {","lastModifiedDate":"2023-11-10"},{"lineNumber":369,"author":{"gitId":"adhigop13"},"content":"            requireNonNull(teamToAddTo);","lastModifiedDate":"2023-11-10"},{"lineNumber":370,"author":{"gitId":"adhigop13"},"content":"            requireNonNull(devToAdd);","lastModifiedDate":"2023-11-10"},{"lineNumber":371,"author":{"gitId":"adhigop13"},"content":"            IdentityCode identityCode \u003d getIdentityCodeByName(devToAdd);","lastModifiedDate":"2023-11-10"},{"lineNumber":372,"author":{"gitId":"adhigop13"},"content":"            return getTypicalTeamBook().personAlreadyInTeam(teamToAddTo, identityCode);","lastModifiedDate":"2023-11-10"},{"lineNumber":373,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":374,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":375,"author":{"gitId":"adhigop13"},"content":"        public Person getPersonByName(Name name) {","lastModifiedDate":"2023-11-10"},{"lineNumber":376,"author":{"gitId":"adhigop13"},"content":"            requireNonNull(name);","lastModifiedDate":"2023-11-10"},{"lineNumber":377,"author":{"gitId":"adhigop13"},"content":"            return getTypicalAddressBook().getPersonByName(name);","lastModifiedDate":"2023-11-10"},{"lineNumber":378,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":379,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":380,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":381,"author":{"gitId":"adhigop13"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-11-10"},{"lineNumber":382,"author":{"gitId":"adhigop13"},"content":"            return new AddressBook();","lastModifiedDate":"2023-11-10"},{"lineNumber":383,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":384,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":385,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":386,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"adhigop13":386}},{"path":"src/test/java/seedu/address/logic/commands/AddTeamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"public class AddTeamCommandTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"    public void constructor_nullTeamName_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"        Name leaderName \u003d AMY.getName();","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTeamCommand(null, leaderName));","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"    public void constructor_nullDeveloperName_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"Test Team Zeta\";","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTeamCommand(teamName, null));","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"    public void constructor_bothParamNull_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTeamCommand(null, null));","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"    public void execute_addNewTeam_commandSuccess() throws CommandException {","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"        ModelStubAcceptingTeamAdded modelStub \u003d new ModelStubAcceptingTeamAdded();","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"        String newTeamName \u003d \"Test Team Beta\";","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"        Name newLeader \u003d ALICE.getName();","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"        IdentityCode newDevIdentityCode \u003d ALICE.getIdentityCode();","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"        Team newTeam \u003d new Team(newDevIdentityCode, newTeamName);","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"        CommandResult addTeamCommand \u003d new AddTeamCommand(newTeamName, newLeader).execute(modelStub);","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"        assertEquals(String.format(AddTeamCommand.MESSAGE_SUCCESS, Messages.format(newTeam, newLeader)),","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"                addTeamCommand.getFeedbackToUser());","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"        assertEquals(Arrays.asList(newTeam), modelStub.teamsAdded);","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"    public void execute_addTeamWithSameName_commandExceptionDuplicateTeam() {","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"        ModelStubAcceptingTeamAdded modelStub \u003d new ModelStubAcceptingTeamAdded();","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"        modelStub.sampleTeamBuilder();","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"Test Team Zeta\";","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"        Name differentTeamLeaderName \u003d TypicalPersons.DANIEL.getName();","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"        AddTeamCommand addTeamCommand \u003d new AddTeamCommand(teamName, differentTeamLeaderName);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"        assertThrows(CommandException.class, AddTeamCommand.MESSAGE_DUPLICATE_TEAM, ()","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"                 -\u003e addTeamCommand.execute(modelStub));","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"    public void execute_addTeamWithSameLeader_commandSuccess() throws CommandException {","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"        ModelStubAcceptingTeamAdded modelStub \u003d new ModelStubAcceptingTeamAdded();","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"        modelStub.sampleTeamBuilder();","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"Test Team Alpha\";","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"        Name sameTeamLeaderName \u003d ALICE.getName();","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"        Team newTeam \u003d new Team(ALICE.getIdentityCode(), teamName);","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"        CommandResult addTeamCommand \u003d new AddTeamCommand(teamName, sameTeamLeaderName).execute(modelStub);","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"        assertEquals(String.format(AddTeamCommand.MESSAGE_SUCCESS, Messages.format(newTeam, sameTeamLeaderName)),","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"                addTeamCommand.getFeedbackToUser());","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"        assertEquals(Arrays.asList(modelStub.teamsAdded.get(0), newTeam), modelStub.teamsAdded);","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"    public void execute_addTeamWithInvalidPerson_commandExceptionInvalidPerson() {","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"        ModelStubAcceptingTeamAdded modelStub \u003d new ModelStubAcceptingTeamAdded();","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"Test Team Zeta\";","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"adhigop13"},"content":"        Name invalidPerson \u003d new Name(\"ThisPersonDoesNotExist\");","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"adhigop13"},"content":"        AddTeamCommand addTeamCommand \u003d new AddTeamCommand(teamName, invalidPerson);","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"adhigop13"},"content":"        assertThrows(CommandException.class, AddTeamCommand.MESSAGE_INVALID_PERSON, ()","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"adhigop13"},"content":"                -\u003e addTeamCommand.execute(modelStub));","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"adhigop13"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"adhigop13"},"content":"        Name teamLeader1 \u003d ALICE.getName();","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"adhigop13"},"content":"        Name teamLeader2 \u003d BENSON.getName();","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"adhigop13"},"content":"        String teamName1 \u003d \"Test team 1\";","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"adhigop13"},"content":"        String teamName2 \u003d \"Test team 2\";","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"adhigop13"},"content":"        AddTeamCommand addTeam1Command \u003d new AddTeamCommand(teamName1, teamLeader1);","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"adhigop13"},"content":"        AddTeamCommand addTeam2Command \u003d new AddTeamCommand(teamName2, teamLeader2);","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"adhigop13"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"adhigop13"},"content":"        assertTrue(addTeam1Command.equals(addTeam1Command));","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"adhigop13"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"adhigop13"},"content":"        AddTeamCommand addTeam3Command \u003d new AddTeamCommand(teamName1, teamLeader1);","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"adhigop13"},"content":"        assertTrue(addTeam3Command.equals(addTeam1Command));","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"adhigop13"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"adhigop13"},"content":"        assertFalse(addTeam1Command.equals(\"abc\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"adhigop13"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"adhigop13"},"content":"        assertFalse(addTeam2Command.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"adhigop13"},"content":"        // different team command -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"adhigop13"},"content":"        assertFalse(addTeam1Command.equals(addTeam2Command));","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"adhigop13"},"content":"        // same teamname,different leadername -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"adhigop13"},"content":"        AddTeamCommand addTeam4Command \u003d new AddTeamCommand(teamName1, teamLeader2);","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"adhigop13"},"content":"        assertFalse(addTeam1Command.equals(addTeam4Command));","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"adhigop13"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"adhigop13"},"content":"        String teamName \u003d \"Test Team 1\";","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"adhigop13"},"content":"        Name teamLeaderName \u003d TypicalPersons.BENSON.getName();","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"adhigop13"},"content":"        AddTeamCommand addTeamCommand \u003d new AddTeamCommand(teamName, teamLeaderName);","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"adhigop13"},"content":"        String expected \u003d AddTeamCommand.class.getCanonicalName() + \"{teamToAdd\u003d\" + teamName + \"}\";","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"adhigop13"},"content":"        assertEquals(expected, addTeamCommand.toString());","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"adhigop13"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"adhigop13"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"adhigop13"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"adhigop13"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"adhigop13"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"adhigop13"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"adhigop13"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":167,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":170,"author":{"gitId":"adhigop13"},"content":"        public Path getTeamBookFilePath() {","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":172,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":174,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"adhigop13"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":177,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"adhigop13"},"content":"        public void setTeamBookFilePath(Path teamBookFilePath) {","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"adhigop13"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"adhigop13"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"adhigop13"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"adhigop13"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"adhigop13"},"content":"        public boolean containsPerson(Name name) {","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":207,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":208,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":209,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":210,"author":{"gitId":"adhigop13"},"content":"        public Person getPersonByName(Name name) {","lastModifiedDate":"2023-11-09"},{"lineNumber":211,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"adhigop13"},"content":"        public IdentityCode getIdentityCodeByName(Name developerName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":216,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":217,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":218,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":219,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":220,"author":{"gitId":"adhigop13"},"content":"        public Name getNameByIdentityCode(IdentityCode developerID) {","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":225,"author":{"gitId":"adhigop13"},"content":"        public boolean invalidAddToTeam(String teamToAddTo) {","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":227,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":228,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":229,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":230,"author":{"gitId":"adhigop13"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":232,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":233,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":234,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":235,"author":{"gitId":"adhigop13"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-11-09"},{"lineNumber":236,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":237,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":238,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":239,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":240,"author":{"gitId":"adhigop13"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-11-09"},{"lineNumber":241,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":242,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":243,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":244,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":245,"author":{"gitId":"adhigop13"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-11-09"},{"lineNumber":246,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":247,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":248,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":249,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":250,"author":{"gitId":"adhigop13"},"content":"        public void addToTeam(String teamToAddTo, Name devToAdd) {","lastModifiedDate":"2023-11-09"},{"lineNumber":251,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":252,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":253,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":254,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":255,"author":{"gitId":"adhigop13"},"content":"        public void setTeamBook(ReadOnlyTeamBook teamBook) {","lastModifiedDate":"2023-11-09"},{"lineNumber":256,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":257,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":258,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":259,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":260,"author":{"gitId":"adhigop13"},"content":"        public ReadOnlyTeamBook getTeamBook() {","lastModifiedDate":"2023-11-09"},{"lineNumber":261,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":262,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":263,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":264,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":265,"author":{"gitId":"adhigop13"},"content":"        public boolean hasTeam(String teamName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":266,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":267,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":268,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":269,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":270,"author":{"gitId":"adhigop13"},"content":"        public void deleteTeam(String teamName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":271,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":272,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":273,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":274,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":275,"author":{"gitId":"adhigop13"},"content":"        public void addTeam(Team team) {","lastModifiedDate":"2023-11-09"},{"lineNumber":276,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":277,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":278,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":279,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":280,"author":{"gitId":"adhigop13"},"content":"        public boolean isLeaderOfTeam(String teamName, Name devToBeAdded) {","lastModifiedDate":"2023-11-09"},{"lineNumber":281,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":282,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":283,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":284,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":285,"author":{"gitId":"adhigop13"},"content":"        public boolean developerIsTeamLeader(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-11-09"},{"lineNumber":286,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":287,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":288,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":289,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":290,"author":{"gitId":"adhigop13"},"content":"        public boolean removeDeveloperFromAllTeams(IdentityCode developerIdentityCode) {","lastModifiedDate":"2023-11-09"},{"lineNumber":291,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":292,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":293,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":294,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":295,"author":{"gitId":"adhigop13"},"content":"        public void deleteDeveloperFromTeam(String teamName, IdentityCode developerIdentityCOde) {","lastModifiedDate":"2023-11-09"},{"lineNumber":296,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":297,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":298,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":299,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":300,"author":{"gitId":"adhigop13"},"content":"        public boolean personAlreadyInTeam(String teamToAddTo, Name devToAdd) {","lastModifiedDate":"2023-11-09"},{"lineNumber":301,"author":{"gitId":"adhigop13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":302,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":303,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":304,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":305,"author":{"gitId":"adhigop13"},"content":"        public void editTeamName(String originalTeamName, String newTeamName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":306,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":307,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":308,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":309,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":310,"author":{"gitId":"adhigop13"},"content":"        public Name getTeamLeaderOfTeam(String teamName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":311,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":312,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":313,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":314,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":315,"author":{"gitId":"adhigop13"},"content":"        public IdentityCode getTeamLeaderIdOfTeam(String teamName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":316,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":317,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":318,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":319,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":320,"author":{"gitId":"adhigop13"},"content":"        public void setTeamLeaderOfTeam(String teamName, IdentityCode newTeamLeaderID) {","lastModifiedDate":"2023-11-09"},{"lineNumber":321,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":322,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":323,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":324,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":325,"author":{"gitId":"adhigop13"},"content":"        public ObservableList\u003cTeam\u003e getFilteredTeamList() {","lastModifiedDate":"2023-11-09"},{"lineNumber":326,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":327,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":328,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":329,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":330,"author":{"gitId":"adhigop13"},"content":"        public void updateFilteredTeamList(Predicate\u003cTeam\u003e predicate) {","lastModifiedDate":"2023-11-09"},{"lineNumber":331,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":332,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":333,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":334,"author":{"gitId":"adhigop13"},"content":"        public Person getPersonByIdentityCode(IdentityCode id) {","lastModifiedDate":"2023-11-09"},{"lineNumber":335,"author":{"gitId":"adhigop13"},"content":"            return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":336,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":337,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":338,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":339,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":340,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":341,"author":{"gitId":"adhigop13"},"content":"     * A Model stub that accepts the teams being added.","lastModifiedDate":"2023-11-09"},{"lineNumber":342,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":343,"author":{"gitId":"adhigop13"},"content":"    private class ModelStubAcceptingTeamAdded extends AddTeamCommandTest.ModelStub {","lastModifiedDate":"2023-11-09"},{"lineNumber":344,"author":{"gitId":"adhigop13"},"content":"        final ArrayList\u003cTeam\u003e teamsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":345,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":346,"author":{"gitId":"adhigop13"},"content":"        public void sampleTeamBuilder() {","lastModifiedDate":"2023-11-09"},{"lineNumber":347,"author":{"gitId":"adhigop13"},"content":"            String newTeamName \u003d \"Test Team Zeta\";","lastModifiedDate":"2023-11-09"},{"lineNumber":348,"author":{"gitId":"adhigop13"},"content":"            IdentityCode newDevIdentityCode \u003d TypicalPersons.ALICE.getIdentityCode();","lastModifiedDate":"2023-11-09"},{"lineNumber":349,"author":{"gitId":"adhigop13"},"content":"            Team newTeam \u003d new Team(newDevIdentityCode, newTeamName);","lastModifiedDate":"2023-11-09"},{"lineNumber":350,"author":{"gitId":"adhigop13"},"content":"            teamsAdded.add(newTeam);","lastModifiedDate":"2023-11-09"},{"lineNumber":351,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":352,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":353,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":354,"author":{"gitId":"adhigop13"},"content":"        public boolean hasTeam(String thisTeamName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":355,"author":{"gitId":"adhigop13"},"content":"            requireNonNull(thisTeamName);","lastModifiedDate":"2023-11-09"},{"lineNumber":356,"author":{"gitId":"adhigop13"},"content":"            return teamsAdded.stream().anyMatch(currentTeam -\u003e currentTeam.getTeamName().equals(thisTeamName));","lastModifiedDate":"2023-11-09"},{"lineNumber":357,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":358,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":359,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":360,"author":{"gitId":"adhigop13"},"content":"        public void addTeam(Team team) {","lastModifiedDate":"2023-11-09"},{"lineNumber":361,"author":{"gitId":"adhigop13"},"content":"            requireNonNull(team);","lastModifiedDate":"2023-11-09"},{"lineNumber":362,"author":{"gitId":"adhigop13"},"content":"            teamsAdded.add(team);","lastModifiedDate":"2023-11-09"},{"lineNumber":363,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":364,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":365,"author":{"gitId":"adhigop13"},"content":"        public boolean containsPerson(Name name) {","lastModifiedDate":"2023-11-09"},{"lineNumber":366,"author":{"gitId":"adhigop13"},"content":"            requireNonNull(name);","lastModifiedDate":"2023-11-09"},{"lineNumber":367,"author":{"gitId":"adhigop13"},"content":"            return getTypicalAddressBook().containsPerson(name);","lastModifiedDate":"2023-11-09"},{"lineNumber":368,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":369,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":370,"author":{"gitId":"adhigop13"},"content":"        public Person getPersonByName(Name name) {","lastModifiedDate":"2023-11-09"},{"lineNumber":371,"author":{"gitId":"adhigop13"},"content":"            requireNonNull(name);","lastModifiedDate":"2023-11-09"},{"lineNumber":372,"author":{"gitId":"adhigop13"},"content":"            return getTypicalAddressBook().getPersonByName(name);","lastModifiedDate":"2023-11-09"},{"lineNumber":373,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":374,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":375,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":376,"author":{"gitId":"adhigop13"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":377,"author":{"gitId":"adhigop13"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-11-09"},{"lineNumber":378,"author":{"gitId":"adhigop13"},"content":"            return new AddressBook();","lastModifiedDate":"2023-11-09"},{"lineNumber":379,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":380,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":381,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"adhigop13":381}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.TeamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"        expectedModel.setTeamBook(new TeamBook());","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"erohsikivar":3,"-":28,"adhigop13":2}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, false, false, false, false)));","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"                true, false, false, false, false, false, false)));","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"                false, true, false, false, false, false, false)));","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"erohsikivar"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"                \"feedback\", true, false, false, false, false, false, false).hashCode());","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"erohsikivar"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"                \"feedback\", false, true, false, false, false, false, false).hashCode());","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"        String expected \u003d CommandResult.class.getCanonicalName()","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"                + \"{feedbackToUser\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"                + commandResult.getFeedbackToUser()","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"                + \", showHelp\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"                + commandResult.isShowHelp()","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"                + \", exit\u003d\" + commandResult.isExit()","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"                + \", listTeam\u003d\" + commandResult.isListTeam()","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"                + \", listPerson\u003d\" + commandResult.isListPerson()","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"JizhuoChen"},"content":"                + \", showTree\u003d\" + commandResult.isShowTree()","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"                + \", findPerson\u003d\" + commandResult.isFindPerson()","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"                + \", findTeam\u003d\" + commandResult.isFindTeam()","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"                + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"JizhuoChen":10,"erohsikivar":2,"StevenLiudw":10,"-":55,"adhigop13":1}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.team.TeamContainsKeywordsPredicate;","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"erohsikivar"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)} for list command","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"erohsikivar"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"erohsikivar"},"content":"    public static void assertCommandSuccessForListPersons(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"erohsikivar"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"erohsikivar"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"StevenLiudw"},"content":"                expectedMessage, false, false, false, true, false, false, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"erohsikivar"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"JizhuoChen"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)} for list team command","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"JizhuoChen"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"JizhuoChen"},"content":"    public static void assertCommandSuccessForListTeams(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"JizhuoChen"},"content":"                                                          Model expectedModel) {","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"JizhuoChen"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"JizhuoChen"},"content":"                expectedMessage, false, false, true, false, false, false, false);","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"JizhuoChen"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-07"},{"lineNumber":126,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":127,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":160,"author":{"gitId":"JizhuoChen"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-11-07"},{"lineNumber":161,"author":{"gitId":"JizhuoChen"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-11-07"},{"lineNumber":162,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":163,"author":{"gitId":"JizhuoChen"},"content":"    public static void showTeamAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-11-07"},{"lineNumber":164,"author":{"gitId":"JizhuoChen"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTeamList().size());","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":166,"author":{"gitId":"JizhuoChen"},"content":"        Team team \u003d model.getFilteredTeamList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"JizhuoChen"},"content":"        final String[] splitName \u003d team.getTeamName().split(\"\\\\s+\");","lastModifiedDate":"2023-11-07"},{"lineNumber":168,"author":{"gitId":"JizhuoChen"},"content":"        model.updateFilteredTeamList(new TeamContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(1, model.getFilteredTeamList().size());","lastModifiedDate":"2023-11-07"},{"lineNumber":171,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"JizhuoChen":29,"erohsikivar":11,"StevenLiudw":1,"-":128,"adhigop13":3}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"erohsikivar":3,"-":85}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.TeamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"erohsikivar"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"erohsikivar"},"content":"                new AddressBook(model.getAddressBook()), new TeamBook(model.getTeamBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"                .withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"                .withPhone(VALID_PHONE_BOB).withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"erohsikivar"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"erohsikivar"},"content":"                new AddressBook(model.getAddressBook()), new TeamBook(model.getTeamBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"erohsikivar"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"erohsikivar"},"content":"                new AddressBook(model.getAddressBook()), new TeamBook(model.getTeamBook()), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"erohsikivar"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList)","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"erohsikivar"},"content":"                .withName(VALID_NAME_BOB).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"adhigop13"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withRemark(VALID_REMARK_BOB).build());","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"erohsikivar"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"erohsikivar"},"content":"                new AddressBook(model.getAddressBook()), new TeamBook(model.getTeamBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"erohsikivar":12,"-":177,"adhigop13":10}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", remark\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"                + editPersonDescriptor.getRemark().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":70,"adhigop13":2}},{"path":"src/test/java/seedu/address/logic/commands/EditTeamNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"public class EditTeamNameCommandTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    public void execute_duplicateTeamName_throwsCommandException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"        String originalTeamName \u003d \"TEAM1\";","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"        String newTeamName \u003d \"TEAM1\";","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"        EditTeamNameCommand editTeamNameCommand \u003d new EditTeamNameCommand(originalTeamName, newTeamName);","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"        assertCommandFailure(editTeamNameCommand, model, EditTeamNameCommand.MESSAGE_DUPLICATE_TEAM_NAME);","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    public void toString_correctStringRepresentation() {","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"        String originalTeamName \u003d \"TEAM1\";","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        String newTeamName \u003d \"Beta team\";","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"        EditTeamNameCommand editTeamNameCommand \u003d new EditTeamNameCommand(originalTeamName, newTeamName);","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"        String expectedString \u003d \"seedu.address.logic.commands.EditTeamNameCommand{\"","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"                + \"Original Team Name\u003dTEAM1, New Team Name\u003dBeta team}\";","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(expectedString, editTeamNameCommand.toString());","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"    public void equals() {","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"        final EditTeamNameCommand standardCommand \u003d new EditTeamNameCommand(\"Alpha team\", \"Beta team\");","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"        EditTeamNameCommand commandWithSameValues \u003d new EditTeamNameCommand(\"Alpha team\", \"Beta team\");","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"        // different team name -\u003e returns false","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"        assertFalse(standardCommand.equals(new EditTeamNameCommand(\"Beta team\", \"Gamma team\")));","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"JizhuoChen":63}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"                MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false, false, false, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"erohsikivar":1,"StevenLiudw":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"erohsikivar"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"        String expectedMessage \u003d \"0 person listed!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage,","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, false, false, true, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"    public void execute_zeroKeywords_onePersonFound() {","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"        String expectedMessage \u003d \"1 person listed!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"ALICE\");","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage,","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, false, false, true, false);","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"        String expectedMessage \u003d \"3 persons listed!\";","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage,","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, false, false, true, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"erohsikivar":3,"StevenLiudw":23,"-":84}},{"path":"src/test/java/seedu/address/logic/commands/FindTeamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalTeams.TEAM1;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalTeams.TEAM2;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.team.TeamContainsKeywordsPredicate;","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"public class FindTeamCommandTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    public void equals() {","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        TeamContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"                new TeamContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        TeamContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"                new TeamContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"        FindTeamCommand findFirstCommand \u003d new FindTeamCommand(firstPredicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        FindTeamCommand findSecondCommand \u003d new FindTeamCommand(secondPredicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        FindTeamCommand findFirstCommandCopy \u003d new FindTeamCommand(firstPredicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"        // different team -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    public void execute_zeroKeywords_noTeamFound() {","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        String expectedMessage \u003d \"0 team listed!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        TeamContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"        FindTeamCommand command \u003d new FindTeamCommand(predicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"        expectedModel.updateFilteredTeamList(predicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage,","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, false, false, false, true);","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTeamList());","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"    public void execute_multipleKeywords_oneTeamsFound() {","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"        String expectedMessage \u003d \"1 team listed!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"        TeamContainsKeywordsPredicate predicate \u003d preparePredicate(\"TEAM1\");","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"        FindTeamCommand command \u003d new FindTeamCommand(predicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"        expectedModel.updateFilteredTeamList(predicate);","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage,","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, false, false, false, true);","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(Arrays.asList(TEAM1), model.getFilteredTeamList());","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"    public void execute_multipleKeywords_multipleTeamsFound() {","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"        String expectedMessage \u003d \"2 teams listed!\";","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"        TeamContainsKeywordsPredicate predicate \u003d preparePredicate(\"TEAM1 TEAM2\");","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"        FindTeamCommand command \u003d new FindTeamCommand(predicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"        expectedModel.updateFilteredTeamList(predicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage,","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"                false, false, false, false, false, false, true);","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(Arrays.asList(TEAM1, TEAM2), model.getFilteredTeamList());","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"        TeamContainsKeywordsPredicate predicate \u003d new TeamContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"        FindTeamCommand findTeamCommand \u003d new FindTeamCommand(predicate);","lastModifiedDate":"2023-11-04"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"        String expected \u003d FindTeamCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(expected, findTeamCommand.toString());","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"    private TeamContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-11-04"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"        return new TeamContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"StevenLiudw":100}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"                SHOWING_HELP_MESSAGE, true, false, false, false, false, false, false);","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"erohsikivar":1,"StevenLiudw":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccessForListPersons;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"erohsikivar"},"content":"        assertCommandSuccessForListPersons(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"erohsikivar"},"content":"        assertCommandSuccessForListPersons(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"erohsikivar":6,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/ListTeamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccessForListTeams;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTeamAtIndex;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAM;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"public class ListTeamCommandTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    private Model model;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"        assertCommandSuccessForListTeams(new ListTeamCommand(), model,","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"                ListTeamCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"        showTeamAtIndex(model, INDEX_FIRST_TEAM);","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"        assertCommandSuccessForListTeams(new ListTeamCommand(), model,","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"                ListTeamCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"JizhuoChen":39}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.commons.core.index.Index.fromZeroBased;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTeamBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    private final String messageAddRemarkSuccess \u003d \"Added remark to Person: seedu.address.model.person.\"","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"            + \"Person{name\u003dAlice Pauline, phone\u003d94351253, email\u003dalice@example.com, address\u003d123, \"","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"            + \"Jurong West Ave 6, #08-111, remark\u003dLikes to swim, tags\u003d[[friends]], identitycode\u003d1}\";","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    private final String messageRemoveRemarkSuccess \u003d \"Removed remark from Person: seedu.address.model.\"","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"            + \"person.Person{name\u003dAlice Pauline, phone\u003d94351253, email\u003dalice@example.com, address\u003d123, \"","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"            + \"Jurong West Ave 6, #08-111, remark\u003d, tags\u003d[[friends]], identitycode\u003d1}\";","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"    public void execute_addRemark_success() throws CommandException {","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"        Person personToEdit \u003d new PersonBuilder().build();","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"        Remark remark \u003d new Remark(\"Likes to swim\");","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(fromZeroBased(0), remark);","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"        CommandResult commandResult \u003d remarkCommand.execute(model);","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"        assertEquals(messageAddRemarkSuccess, commandResult.getFeedbackToUser());","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"    public void execute_deleteRemark_success() throws CommandException {","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"        Person personToEdit \u003d new PersonBuilder().withRemark(\"Likes to swim\").build();","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"        Remark remark \u003d new Remark(\"\"); // empty string to indicate deleting the remark","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(fromZeroBased(0), remark);","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"        CommandResult commandResult \u003d remarkCommand.execute(model);","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        assertEquals(messageRemoveRemarkSuccess, commandResult.getFeedbackToUser());","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"JizhuoChen":47,"erohsikivar":1,"adhigop13":5}},{"path":"src/test/java/seedu/address/logic/commands/TreeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"public class TreeCommandTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    public void execute_treeCommand_success() {","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"                TreeCommand.MESSAGE_SUCCESS, false, false,","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"                false, false, true, false, false);","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"        TreeCommand command \u003d new TreeCommand();","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"JizhuoChen":24}},{"path":"src/test/java/seedu/address/logic/commands/WelcomeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Date;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class WelcomeCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    public void execute_welcomeMessageGenerated_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        // Create a new WelcomeCommand and execute it","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"        WelcomeCommand welcomeCommand \u003d new WelcomeCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        Model model \u003d new ModelManager(); // Assuming a no-arg constructor exists for ModelManager","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        CommandResult result \u003d welcomeCommand.execute(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        // Generate expected welcome message","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        String strDate \u003d formatter.format(date);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        String expectedMessage \u003d \"Welcome from Linktree, Current date and time: \" + strDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        // Assert that the welcome message is as expected","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"StevenLiudw":32}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"                + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"erohsikivar"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB)","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"erohsikivar"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"erohsikivar"},"content":"        assertParseSuccess(","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"erohsikivar"},"content":"                parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"erohsikivar"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"adhigop13"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"adhigop13"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"erohsikivar":9,"-":187,"adhigop13":4}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"JizhuoChen"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"JizhuoChen"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"JizhuoChen"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"JizhuoChen"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JizhuoChen":11,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/FindTeamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.logic.commands.FindTeamCommand;","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.team.TeamContainsKeywordsPredicate;","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class FindTeamCommandParserTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    private FindTeamCommandParser parser \u003d new FindTeamCommandParser();","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTeamCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    public void parse_validArgs_returnsFindTeamCommand() {","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        FindTeamCommand expectedFindTeamCommand \u003d","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"                new FindTeamCommand(new TeamContainsKeywordsPredicate(Arrays.asList(\"Team1\", \"Team2\")));","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        assertParseSuccess(parser, \"Team1 Team2\", expectedFindTeamCommand);","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        assertParseSuccess(parser, \" \\n Team1 \\n \\t Team2  \\t\", expectedFindTeamCommand);","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"StevenLiudw":34}},{"path":"src/test/java/seedu/address/model/IdentityCodeManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class IdentityCodeManagerTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        // Reset the ID before each test to maintain a consistent state.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCodeManager.updateMaxID(Collections.emptyList());","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    public void getNextIdentityCode_emptyAddressBook_returnsOne() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(1, IdentityCodeManager.getNextIdentityCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    public void getNextIdentityCode_afterSeveralGets_returnsIncrementedValue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCodeManager.getNextIdentityCode(); // ID 1","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCodeManager.getNextIdentityCode(); // ID 2","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(3, IdentityCodeManager.getNextIdentityCode()); // ID 3","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    public void updateMaxID_emptyList_resetsToZero() {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        // Given a non-empty ID state","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCodeManager.getNextIdentityCode(); // ID 1","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCodeManager.getNextIdentityCode(); // ID 2","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        // Reset ID state to zero","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCodeManager.updateMaxID(Collections.emptyList());","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(1, IdentityCodeManager.getNextIdentityCode()); // ID should reset to 1","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    public void updateMaxID_listWithPersons_updatesToMaxIdentityCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"        Person alice \u003d TypicalPersons.ALICE;","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"        Person benson \u003d TypicalPersons.BENSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"        Person carl \u003d TypicalPersons.CARL;","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"        IdentityCodeManager.updateMaxID(Arrays.asList(alice, benson, carl));","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"        assertEquals(4, IdentityCodeManager.getNextIdentityCode());","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"StevenLiudw":50,"adhigop13":6}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.testutil.TypicalTeams.TEAM1;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.testutil.TypicalTeams.TEAM2;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.testutil.TeamBookBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"erohsikivar"},"content":"        TeamBook teamBook \u003d new TeamBookBuilder().withTeam(TEAM1).withTeam(TEAM2).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"erohsikivar"},"content":"        TeamBook differentTeamBook \u003d new TeamBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"erohsikivar"},"content":"        modelManager \u003d new ModelManager(addressBook, teamBook, userPrefs);","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"erohsikivar"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, teamBook, userPrefs);","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"erohsikivar"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, differentTeamBook, userPrefs)));","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":127,"author":{"gitId":"erohsikivar"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentTeamBook, userPrefs)));","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":135,"author":{"gitId":"erohsikivar"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, teamBook, differentUserPrefs)));","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"erohsikivar":10,"-":127}},{"path":"src/test/java/seedu/address/model/person/DeveloperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"public class DeveloperTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"        Developer aliceDeveloper \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"                new Developer(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"        Developer bobDeveloper \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"                new Developer(BOB.getName(), BOB.getPhone(), BOB.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"                        BOB.getAddress(), BOB.getRemark(), BOB.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceDeveloper.equals(aliceDeveloper));","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        // different developers -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(!aliceDeveloper.equals(bobDeveloper));","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"StevenLiudw":26}},{"path":"src/test/java/seedu/address/model/person/IdentityCodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"erohsikivar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"public class IdentityCodeTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new IdentityCode(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    public void constructor_invalidIdentityCode_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        String invalidIdentityCode \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new IdentityCode(invalidIdentityCode));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    public void isValidCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        // null identity code","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(NullPointerException.class, () -\u003e IdentityCode.isValidCode(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        // invalid identity code","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(IdentityCode.isValidCode(\"\")); // empty string","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(IdentityCode.isValidCode(\" \")); // spaces only","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(IdentityCode.isValidCode(\"code\")); // non-numeric","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(IdentityCode.isValidCode(\"9312p041\")); // alphabets within digits","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(IdentityCode.isValidCode(\"9312.041\")); // dots within digits","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(IdentityCode.isValidCode(\"9312,041\")); // commas within digits","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(IdentityCode.isValidCode(\"9312-041\")); // hyphens within digits","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        // valid identity code","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(IdentityCode.isValidCode(\"9312\")); // exactly 4 numbers","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(IdentityCode.isValidCode(\"931\")); // exactly 3 numbers","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(IdentityCode.isValidCode(\"1\")); // one number","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"    public void testEquals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCode code1 \u003d new IdentityCode(\"1234\");","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCode code2 \u003d new IdentityCode(\"1234\");","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCode code3 \u003d new IdentityCode(\"5678\");","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(code1.equals(code2));","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(code1.equals(code3));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(code2.equals(code3));","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCode code1 \u003d new IdentityCode(\"1234\");","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        IdentityCode code2 \u003d new IdentityCode(\"1234\");","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(code1.hashCode() \u003d\u003d code2.hashCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"erohsikivar":1,"StevenLiudw":60}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"erohsikivar"},"content":"        // same values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"erohsikivar"},"content":"        assertFalse(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withIdentityCode(\"123456\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"erohsikivar"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", remark\u003d\" + ALICE.getRemark()","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"erohsikivar"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \", identitycode\u003d\" + ALICE.getIdentityCode() + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"erohsikivar":4,"StevenLiudw":3,"-":96}},{"path":"src/test/java/seedu/address/model/person/ProjectManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"public class ProjectManagerTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"    public void constructor_validParameters_createsProjectManager() {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"        ProjectManager aliceManager \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"                new ProjectManager(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceManager !\u003d null);","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        ProjectManager aliceManager \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"                new ProjectManager(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceManager.equals(aliceManager));","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        ProjectManager bobManager \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"                new ProjectManager(BOB.getName(), BOB.getPhone(), BOB.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"                        BOB.getAddress(), BOB.getRemark(), BOB.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(aliceManager.equals(bobManager));","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"    //    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"    //    public void addTeam_addSingleTeam_successful() {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    //        ProjectManager aliceManager \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"    //                new ProjectManager(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    //                        ALICE.getAddress(), ALICE.getRemark(), ALICE.getTags());","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    //","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"    //        aliceManager.addTeam(aliceTeam);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"    //        assertTrue(aliceManager.getTeams().contains(aliceTeam));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"    //    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"StevenLiudw":38,"adhigop13":9}},{"path":"src/test/java/seedu/address/model/person/TeamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"public class TeamTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    public void constructor_validParameters_createsTeam() {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        Team aliceTeam \u003d new Team(ALICE.getIdentityCode(), \"Alice\u0027s Team\");","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceTeam !\u003d null);","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        Team aliceTeam \u003d new Team(ALICE.getIdentityCode(), \"Alice\u0027s Team\");","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceTeam.equals(aliceTeam));","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"        Team bobTeam \u003d new Team(BOB.getIdentityCode(), \"Bob\u0027s Team\");","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(aliceTeam.equals(bobTeam));","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    public void addAndRemoveDeveloper_addAndRemoveSingleDeveloper_successful() {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"        Team aliceTeam \u003d new Team(ALICE.getIdentityCode(), \"Alice\u0027s Team\");","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"        aliceTeam.addDeveloper(BOB.getIdentityCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"        assertTrue(aliceTeam.getDeveloperIdentityCodes().contains(BOB.getIdentityCode()));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"        aliceTeam.removeDeveloper(BOB.getIdentityCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(aliceTeam.getDeveloperIdentityCodes().contains(BOB.getIdentityCode()));","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    public void setTeamLeader_updateTeamLeader_successful() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        Team aliceTeam \u003d new Team(ALICE.getIdentityCode(), \"Alice\u0027s Team\");","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        aliceTeam.setTeamLeader(BOB.getIdentityCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(BOB.getIdentityCode(), aliceTeam.getTeamLeaderIdentityCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"        Team aliceTeam \u003d new Team(ALICE.getIdentityCode(), \"Alice\u0027s Team\");","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"        Set\u003cIdentityCode\u003e developers \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        developers.add(BOB.getIdentityCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"        aliceTeam.addDeveloper(BOB.getIdentityCode());","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"erohsikivar"},"content":"        String expected \u003d Team.class.getCanonicalName()","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"erohsikivar"},"content":"                + \"{Team Name\u003dAlice\u0027s Team, Team Leader\u003d\" + ALICE.getIdentityCode()","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"erohsikivar"},"content":"                + \", Developer List\u003d\" + developers + \"}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(expected, aliceTeam.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"erohsikivar":5,"StevenLiudw":64}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"erohsikivar"},"content":"    private static final String VALID_IDENTITY_CODE \u003d BENSON.getIdentityCode().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"erohsikivar"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"erohsikivar"},"content":"                INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_IDENTITY_CODE, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"erohsikivar"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"erohsikivar"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_IDENTITY_CODE, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"erohsikivar"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"erohsikivar"},"content":"                VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_IDENTITY_CODE, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"erohsikivar"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"erohsikivar"},"content":"                VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_IDENTITY_CODE, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"erohsikivar"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"erohsikivar"},"content":"                VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_IDENTITY_CODE, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"erohsikivar"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"erohsikivar"},"content":"                VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_REMARK, VALID_IDENTITY_CODE, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"erohsikivar"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"erohsikivar"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK, VALID_IDENTITY_CODE, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"erohsikivar"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"erohsikivar"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_REMARK, VALID_IDENTITY_CODE, VALID_TAGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"erohsikivar"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"erohsikivar"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_IDENTITY_CODE, invalidTags);","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JizhuoChen":1,"erohsikivar":19,"-":95}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTeamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.storage.JsonAdaptedTeam.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalTeams.TEAM1;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"public class JsonAdaptedTeamTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    private static final String INVALID_IDENTITY_CODE \u003d \"INVALID_CODE\";","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    private static final String VALID_TEAM_NAME \u003d TEAM1.getTeamName();","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    private static final String VALID_LEADER_IDENTITY_CODE \u003d TEAM1.getTeamLeaderIdentityCode().toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    private static final Set\u003cString\u003e VALID_DEVELOPER_IDENTITY_CODES \u003d TEAM1.getDeveloperIdentityCodes().stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"            .map(IdentityCode::toString)","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    public void toModelType_validTeamDetails_returnsTeam() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        JsonAdaptedTeam team \u003d new JsonAdaptedTeam(TEAM1);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(TEAM1, team.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    public void toModelType_invalidTeamName_throwsIllegalValueException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"        JsonAdaptedTeam team \u003d new JsonAdaptedTeam(","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"                VALID_LEADER_IDENTITY_CODE, VALID_DEVELOPER_IDENTITY_CODES, null);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"teamName\");","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, team::toModelType);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    public void toModelType_invalidLeaderIdentityCode_throwsIllegalValueException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"        JsonAdaptedTeam team \u003d new JsonAdaptedTeam(","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"                INVALID_IDENTITY_CODE, VALID_DEVELOPER_IDENTITY_CODES, VALID_TEAM_NAME);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"leaderIdentityCode\");","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, team::toModelType);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"    public void toModelType_invalidDeveloperIdentityCodes_throwsIllegalValueException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"        Set\u003cString\u003e invalidDeveloperCodes \u003d new HashSet\u003c\u003e(VALID_DEVELOPER_IDENTITY_CODES);","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        invalidDeveloperCodes.add(INVALID_IDENTITY_CODE);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        JsonAdaptedTeam team \u003d new JsonAdaptedTeam(","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"                VALID_LEADER_IDENTITY_CODE, invalidDeveloperCodes, VALID_TEAM_NAME);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(IllegalValueException.class, team::toModelType);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"    public void toModelType_nullDeveloperIdentityCodes_doesNotThrowException() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        JsonAdaptedTeam team \u003d new JsonAdaptedTeam(","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"                VALID_LEADER_IDENTITY_CODE, null, VALID_TEAM_NAME);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"        Team expectedTeam \u003d new Team(new IdentityCode(VALID_LEADER_IDENTITY_CODE), VALID_TEAM_NAME);","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(expectedTeam, team.toModelType());","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"StevenLiudw":66}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTeamBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"//import seedu.address.model.TeamBook;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"//import seedu.address.testutil.TypicalTeams;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"public class JsonSerializableTeamBookTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTeamBookTest\");","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    private static final Path TYPICAL_TEAMS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTeamsTeamBook.json\");","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    private static final Path INVALID_TEAM_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTeamTeamBook.json\");","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    private static final Path DUPLICATE_TEAM_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTeamTeamBook.json\");","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    //    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    //    public void toModelType_typicalTeamsFile_success() throws Exception {","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    //        JsonSerializableTeamBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TEAMS_FILE,","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    //                JsonSerializableTeamBook.class).get();","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    //        TeamBook teamBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    //        TeamBook typicalTeamsTeamBook \u003d TypicalTeams.getTypicalTeamBook();","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    //        assertEquals(teamBookFromFile, typicalTeamsTeamBook);","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"    // }","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    public void toModelType_invalidTeamFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        JsonSerializableTeamBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TEAM_FILE,","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"                JsonSerializableTeamBook.class).get();","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    public void toModelType_duplicateTeams_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"        JsonSerializableTeamBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TEAM_FILE,","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"                JsonSerializableTeamBook.class).get();","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTeamBook.MESSAGE_DUPLICATE_TEAM,","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"StevenLiudw":35,"adhigop13":11}},{"path":"src/test/java/seedu/address/storage/JsonTeamBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import static seedu.address.testutil.TypicalTeams.getTypicalTeamBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.ReadOnlyTeamBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.TeamBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"public class JsonTeamBookStorageTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTeamBookStorageTest\");","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    @TempDir","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    public Path testFolder;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    public void readTeamBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTeamBook(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    private java.util.Optional\u003cReadOnlyTeamBook\u003e readTeamBook(String filePath) throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        return new JsonTeamBookStorage(Paths.get(filePath)).readTeamBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"                : null;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"        assertFalse(readTeamBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTeamBook(\"notJsonFormatTeamBook.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"    public void readTeamBook_invalidTeamTeamBook_throwDataLoadingException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTeamBook(\"invalidTeamTeamBook.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"    public void readTeamBook_invalidAndValidTeamTeamBook_throwDataLoadingException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTeamBook(\"invalidAndValidTeamTeamBook.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"    public void readAndSaveTeamBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTeamBook.json\");","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"        TeamBook original \u003d getTypicalTeamBook();","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"        JsonTeamBookStorage jsonTeamBookStorage \u003d new JsonTeamBookStorage(filePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"        jsonTeamBookStorage.saveTeamBook(original, filePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"        ReadOnlyTeamBook readBack \u003d jsonTeamBookStorage.readTeamBook(filePath).get();","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(original, new TeamBook(readBack));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"        // Modify data, overwrite existing file, and read back","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"        // Assuming you have methods to modify teams","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"        // original.addTeam(newTeam);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"        // original.removeTeam(someTeam);","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"        jsonTeamBookStorage.saveTeamBook(original, filePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"        readBack \u003d jsonTeamBookStorage.readTeamBook(filePath).get();","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(original, new TeamBook(readBack));","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"        // original.addTeam(anotherNewTeam);","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"        jsonTeamBookStorage.saveTeamBook(original); // file path not specified","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"        readBack \u003d jsonTeamBookStorage.readTeamBook().get(); // file path not specified","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(original, new TeamBook(readBack));","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"    public void saveTeamBook_nullTeamBook_throwsNullPointerException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTeamBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"     * Saves {@code teamBook} at the specified {@code filePath}.","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"    private void saveTeamBook(ReadOnlyTeamBook teamBook, String filePath) {","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"            new JsonTeamBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"                    .saveTeamBook(teamBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"    public void saveTeamBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTeamBook(new TeamBook(), null));","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"StevenLiudw":108}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"        JsonTeamBookStorage teamBookStorage \u003d new JsonTeamBookStorage(getTempFilePath(\"cd\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"erohsikivar"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, teamBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"erohsikivar":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"    public EditPersonDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"erohsikivar":1,"-":87,"adhigop13":8}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    public static final String DEFAULT_IDENTITYCODE \u003d \"1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    private IdentityCode identityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"        identityCode \u003d new IdentityCode(DEFAULT_IDENTITYCODE);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"JizhuoChen"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"StevenLiudw"},"content":"     * Sets the {@code IdentityCode} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"adhigop13"},"content":"    public PersonBuilder withIdentityCode(String identityCode) {","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"adhigop13"},"content":"        this.identityCode \u003d new IdentityCode(identityCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"StevenLiudw"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":116,"author":{"gitId":"JizhuoChen"},"content":"        return new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"JizhuoChen":11,"erohsikivar":2,"StevenLiudw":9,"-":95,"adhigop13":2}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"erohsikivar"},"content":"        sb.append(person.getRemark().value.isEmpty()","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"erohsikivar"},"content":"                ? \"\" : PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"JizhuoChen":2,"erohsikivar":2,"-":62}},{"path":"src/test/java/seedu/address/testutil/TeamBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erohsikivar"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.TeamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"erohsikivar"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":" * A utility class to help with building Teambook objects.","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"erohsikivar"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"erohsikivar"},"content":" *     {@code AddressBook ab \u003d new TeamBookBuilder().withTeam(\"Team1\", \"Team2\").build();}","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"public class TeamBookBuilder {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":"    private TeamBook teamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":"     * Instantiates a new Team book builder.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"erohsikivar"},"content":"    public TeamBookBuilder() {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"erohsikivar"},"content":"        teamBook \u003d new TeamBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"     * Adds teambook builder.","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"erohsikivar"},"content":"     * @param team the team","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"erohsikivar"},"content":"     * @return the team book builder","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"    public TeamBookBuilder withTeam(Team team) {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"        teamBook.addTeam(team);","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"erohsikivar"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"erohsikivar"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"erohsikivar"},"content":"     * Builds team book.","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"erohsikivar"},"content":"     * @return the team book","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"erohsikivar"},"content":"    public TeamBook build() {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"erohsikivar"},"content":"        return teamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"erohsikivar"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"erohsikivar"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"erohsikivar":40}},{"path":"src/test/java/seedu/address/testutil/TeamBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import seedu.address.model.person.IdentityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"erohsikivar"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" * A utility class to help with building Team objects for testing.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"public class TeamBuilder {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"    public static final String DEFAULT_TEAM_NAME \u003d \"Team Alpha\";","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    public static final String DEFAULT_LEADER_IDENTITY_CODE \u003d \"1\";","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    private IdentityCode leaderIdentityCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    private String teamName;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    private final Set\u003cIdentityCode\u003e developerIdentityCodes;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     * Creates a {@code TeamBuilder} with the default details.","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    public TeamBuilder() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"        leaderIdentityCode \u003d new IdentityCode(DEFAULT_LEADER_IDENTITY_CODE);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        teamName \u003d DEFAULT_TEAM_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        developerIdentityCodes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes the TeamBuilder with the data of {@code teamToCopy}.","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    public TeamBuilder(Team teamToCopy) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        leaderIdentityCode \u003d teamToCopy.getTeamLeaderIdentityCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"        teamName \u003d teamToCopy.getTeamName();","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        developerIdentityCodes \u003d new HashSet\u003c\u003e(teamToCopy.getDeveloperIdentityCodes());","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     * Sets the {@code IdentityCode} of the TeamLeader of the {@code Team} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    public TeamBuilder withTeamLeader(String leaderId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"        this.leaderIdentityCode \u003d new IdentityCode(leaderId);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     * Sets the {@code teamName} of the {@code Team} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"    public TeamBuilder withTeamName(String teamName) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"        this.teamName \u003d teamName;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"     * Adds the developers with the given {@code developerIds} to the {@code Team} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"    public TeamBuilder withDevelopers(String... developerIds) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"        for (String devId : developerIds) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"            developerIdentityCodes.add(new IdentityCode(devId));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"erohsikivar"},"content":"     * Builds team.","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"erohsikivar"},"content":"     * @return the team","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"    public Team build() {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"        Team team \u003d new Team(leaderIdentityCode, teamName);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"        for (IdentityCode devId : developerIdentityCodes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"            team.addDeveloper(devId);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"        return team;","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"erohsikivar":6,"StevenLiudw":70,"adhigop13":1}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    public static final Index INDEX_FIRST_TEAM \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    public static final Index INDEX_SECOND_TEAM \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"    public static final Index INDEX_THIRD_TEAM \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"JizhuoChen":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"            .withTags(\"friends\").withIdentityCode(\"1\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"            .withTags(\"owesMoney\", \"friends\").withIdentityCode(\"2\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withIdentityCode(\"3\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"erohsikivar"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"erohsikivar"},"content":"            .withTags(\"friends\").withIdentityCode(\"4\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"            .withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"JizhuoChen":2,"erohsikivar":3,"-":70,"adhigop13":5}},{"path":"src/test/java/seedu/address/testutil/TypicalTeams.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.TeamBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import seedu.address.model.team.Team;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"erohsikivar"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"erohsikivar"},"content":" * The type Typical teams.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"erohsikivar"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"public class TypicalTeams {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"erohsikivar"},"content":"     * The constant TEAM1.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    public static final Team TEAM1 \u003d new TeamBuilder().withTeamLeader(\"1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"            .withTeamName(\"TEAM1\").withDevelopers(\"2\", \"3\", \"4\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"erohsikivar"},"content":"     * The constant TEAM2.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    public static final Team TEAM2 \u003d new TeamBuilder().withTeamLeader(\"2\")","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"            .withTeamName(\"TEAM2\").withDevelopers(\"3\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"erohsikivar"},"content":"     * Gets typical team book.","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"erohsikivar"},"content":"     * @return the typical team book","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"    public static TeamBook getTypicalTeamBook() {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        TeamBook tb \u003d new TeamBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        for (Team team : getTypicalTeams()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"            tb.addTeam(team);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        return tb;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"erohsikivar"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"erohsikivar"},"content":"     * Gets typical teams.","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"erohsikivar"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"erohsikivar"},"content":"     * @return the typical teams","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"erohsikivar"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"    public static List\u003cTeam\u003e getTypicalTeams() {","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TEAM1, TEAM2));","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"erohsikivar":19,"adhigop13":34}}]

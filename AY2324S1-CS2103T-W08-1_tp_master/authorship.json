[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"# Staff-Snap","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W08-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W08-1/tp/actions)","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W08-1/tp/graph/badge.svg?token\u003d7PPPGQNQFE)](https://codecov.io/gh/AY2324S1-CS2103T-W08-1/tp)","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"This is a CS2103T project by [**AY2324S1-CS2103T-W08-1**](https://github.com/orgs/AY2324S1-CS2103T-W08-1/people).\u003cbr\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"\u003e A hiring management program for Hiring Managers to track applicants throughout the hiring process.","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"Staff-Snap is a desktop app for Hiring Managers to track staff information, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Staff-Snap can get your staff information management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"## Features v1.2","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"* Add an applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"* Edit an applicant\u0027s details","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"* Delete an applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"* View all applicants","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"* Find an applicant by name","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"* Sort applicants by descriptor","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"* Filter applicants by descriptor criteria","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"* Add an interview to an applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"* Edit an interview of an applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"* Delete an interview of an applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"* Import csv data","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"AustinHuang1203"},"content":"* Save data to file","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"* Clear all data","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"## Issues and Bugs","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"Spot a bug? Let us know by launching a Bug Report at the [Issues tab](https://github.com/AY2324S1-CS2103T-W08-1/tp/issues)!","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"## Links","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"* [User Guide](https://ay2324s1-cs2103t-w08-1.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"* [Developer Guide](https://ay2324s1-cs2103t-w08-1.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"* [Github Project Board](https://github.com/orgs/AY2324S1-CS2103T-W08-1/projects/1)","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"* [Github Organization](https://github.com/orgs/AY2324S1-CS2103T-W08-1)","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"## Acknowldgements","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://junit.org/junit5/), [OpenCSV](https://opencsv.sourceforge.net/project-info.html), [TestFX](https://testfx.github.io/TestFX/docs/javadoc/testfx-core/javadoc/org.testfx/module-summary.html)","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"* Staff-Snap is based on the [AddressBook-Level3](https://se-education.org/addressbook-level3/) project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"AustinHuang1203":4,"craigtonlian":32,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"AustinHuang1203"},"content":"mainClassName \u003d \u0027seedu.staffsnap.Main\u0027","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"    doFirst {","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"        if (System.getProperty(\"os.name\").equals(\"Linux\")) {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"            exclude \u0027**/ui/**\u0027","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":" dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"    implementation group: \u0027com.opencsv\u0027, name: \u0027opencsv\u0027, version: \u00275.8\u0027","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"jingting1412"},"content":"    // TestFX for JavaFX testing","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"jingting1412"},"content":"    testImplementation \u0027org.testfx:testfx-core:4.0.16-alpha\u0027","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"jingting1412"},"content":"    testImplementation \u0027org.testfx:testfx-junit5:4.0.16-alpha\u0027","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":80,"author":{"gitId":"AustinHuang1203"},"content":"    archiveFileName \u003d \u0027staffsnap.jar\u0027","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AustinHuang1203":2,"jingting1412":9,"craigtonlian":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"You can reach us at the email `craigton.lian[at]gmail.com`","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"### Craigton Lian Ee John","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"\u003cimg src\u003d\"images/craigtonlian.png\" width\u003d\"200px\" height \u003d \"200px\" style \u003d \"border-radius: 50%;\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"* Links:","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"  [[github](https://github.com/craigtonlian)]","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"  [[portfolio](team/craigtonlian.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"* Role: Developer","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"  * Overall coordination","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"  * Ensure proper testing","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"  * Version and release control","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"  * Repo maintenance and integration","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"### Austin Huang De Yu","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"\u003cimg src\u003d\"images/austinhuang1203.png\" width\u003d\"200px\" height \u003d \"200px\" style \u003d \"border-radius: 50%;\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"* Links:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"  [[github](http://github.com/austinhuang1203)]","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"  [[portfolio](team/austinhuang1203.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"* Role: Developer","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"  * Review coding standards","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"### Ivan Lee Kai Kiat","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"\u003cimg src\u003d\"images/ivanleekk.png\" width\u003d\"200px\" height \u003d \"200px\" style \u003d \"border-radius: 50%;\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"* Links:","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"  [[github](http://github.com/ivanleekk)]","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"  [[portfolio](team/ivanleekk.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"  * Monitor deadlines","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"  * Format deliverables","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"### Celestine Tan Yen Tong","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"\u003cimg src\u003d\"images/celestinetan03.png\" width\u003d\"200px\" height \u003d \"200px\" style \u003d \"border-radius: 50%;\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"* Links:","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"  [[github](http://github.com/celestinetan03)]","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"  [[portfolio](team/celestinetan03.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"  * Define and assign tasks","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"  * Maintain issue tracker","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"  * Manage project board","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"### Wang Jingting","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"\u003cimg src\u003d\"images/jingting1412.png\" width\u003d\"200px\" height \u003d \"200px\" style \u003d \"border-radius: 50%;\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"* Links:","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"  [[github](http://github.com/jingting1412)]","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"  [[portfolio](team/jingting1412.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"  * Coordinate documentation","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"craigtonlian":44,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"# Staff-Snap Developer Guide","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"original source as well }_","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"**`Main`** (consisting of","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"the command `delete 1`.","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"The **API** of this component is specified","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"visible GUI.","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"is specified","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"**API","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"ivanleekk"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"call as an example.","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"ivanleekk"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"ivanleekk"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"ivanleekk"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"ivanleekk"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"ivanleekk"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"ivanleekk"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"ivanleekk"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"ivanleekk"},"content":"  a `Command` object.","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"ivanleekk"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"ivanleekk"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"ivanleekk"},"content":"**API","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"ivanleekk"},"content":"** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"* stores the applicant book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"ivanleekk"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"ivanleekk"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"ivanleekk"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"ivanleekk"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"ivanleekk"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"ivanleekk"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"ivanleekk"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":165,"author":{"gitId":"ivanleekk"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`,","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"ivanleekk"},"content":"which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"ivanleekk"},"content":"each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"ivanleekk"},"content":"**API","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"ivanleekk"},"content":"** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"ivanleekk"},"content":"* can save both applicant book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"ivanleekk"},"content":"  objects.","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"ivanleekk"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"ivanleekk"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"ivanleekk"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"ivanleekk"},"content":"  that belong to the `Model`)","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"ivanleekk"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"ivanleekk"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"ivanleekk"},"content":"following operations:","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"ivanleekk"},"content":"* `VersionedAddressBook#commit()`— Saves the current applicant book state in its history.","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"ivanleekk"},"content":"* `VersionedAddressBook#undo()`— Restores the previous applicant book state from its history.","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"ivanleekk"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone applicant book state from its history.","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"ivanleekk"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2023-10-24"},{"lineNumber":212,"author":{"gitId":"ivanleekk"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"ivanleekk"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"ivanleekk"},"content":"initial applicant book state, and the `currentStatePointer` pointing to that single applicant book state.","lastModifiedDate":"2023-10-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"ivanleekk"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the applicant book. The `delete` command","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"ivanleekk"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the applicant book after the `delete 5` command","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"ivanleekk"},"content":"executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted","lastModifiedDate":"2023-10-24"},{"lineNumber":224,"author":{"gitId":"ivanleekk"},"content":"applicant book state.","lastModifiedDate":"2023-10-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"ivanleekk"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"ivanleekk"},"content":"calls `Model#commitAddressBook()`, causing another modified applicant book state to be saved into","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"ivanleekk"},"content":"the `addressBookStateList`.","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"ivanleekk"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the applicant book state","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"ivanleekk"},"content":"will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-10-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"ivanleekk"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2023-10-24"},{"lineNumber":242,"author":{"gitId":"ivanleekk"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"ivanleekk"},"content":"once to the left, pointing it to the previous applicant book state, and restores the applicant book to that state.","lastModifiedDate":"2023-10-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"ivanleekk"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no","lastModifiedDate":"2023-10-24"},{"lineNumber":251,"author":{"gitId":"ivanleekk"},"content":"previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the","lastModifiedDate":"2023-10-24"},{"lineNumber":252,"author":{"gitId":"ivanleekk"},"content":"case. If so, it will return an error to the user rather","lastModifiedDate":"2023-10-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"ivanleekk"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the","lastModifiedDate":"2023-10-24"},{"lineNumber":264,"author":{"gitId":"ivanleekk"},"content":"lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-24"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"ivanleekk"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2023-10-24"},{"lineNumber":269,"author":{"gitId":"ivanleekk"},"content":"to the right, pointing to the previously undone state, and restores the applicant book to that state.","lastModifiedDate":"2023-10-24"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":273,"author":{"gitId":"ivanleekk"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest applicant","lastModifiedDate":"2023-10-24"},{"lineNumber":274,"author":{"gitId":"ivanleekk"},"content":"book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()`","lastModifiedDate":"2023-10-24"},{"lineNumber":275,"author":{"gitId":"ivanleekk"},"content":"to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-10-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"ivanleekk"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the applicant book, such","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"ivanleekk"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2023-10-24"},{"lineNumber":281,"author":{"gitId":"ivanleekk"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-10-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"ivanleekk"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2023-10-24"},{"lineNumber":286,"author":{"gitId":"ivanleekk"},"content":"pointing at the end of the `addressBookStateList`, all applicant book states after the `currentStatePointer` will be","lastModifiedDate":"2023-10-24"},{"lineNumber":287,"author":{"gitId":"ivanleekk"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2023-10-24"},{"lineNumber":288,"author":{"gitId":"ivanleekk"},"content":"desktop applications follow.","lastModifiedDate":"2023-10-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"craigtonlian"},"content":"* **Alternative 1 (current choice):** Saves the entire applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"CelestineTan03"},"content":"### Add applicant feature","lastModifiedDate":"2023-10-27"},{"lineNumber":316,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":317,"author":{"gitId":"CelestineTan03"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":318,"author":{"gitId":"CelestineTan03"},"content":"The add applicant feature allows users to add an applicant to the applicant list.","lastModifiedDate":"2023-10-27"},{"lineNumber":319,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"CelestineTan03"},"content":"#### Steps to trigger","lastModifiedDate":"2023-10-27"},{"lineNumber":321,"author":{"gitId":"CelestineTan03"},"content":"1. The user launches the application.","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"CelestineTan03"},"content":"2. The user executes `add n/John Doe hp/98765432 e/jd@gmail.com p/software engineer` to add a new applicant.","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"CelestineTan03"},"content":"3. The `AddCommandParser#parse()` checks whether all the prefixes and the required values are provided.","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"CelestineTan03"},"content":"4. If the check is successful, the `AddCommand#execute()` checks if the applicant exists in the applicant list.","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"CelestineTan03"},"content":"5. If the applicant does not exist, the `Model#addApplicant()` adds the applicant to the applicant list.","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"CelestineTan03"},"content":"### Edit applicant feature","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"CelestineTan03"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"CelestineTan03"},"content":"The edit applicant feature allows users to edit the details of an applicant.","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"CelestineTan03"},"content":"#### Steps to trigger","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"CelestineTan03"},"content":"1. The user launches the application.","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"CelestineTan03"},"content":"2. The user executes `edit 1 hp/87654321 p/front-end engineer` to edit the phone number and position of ","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"CelestineTan03"},"content":"the first applicant.","lastModifiedDate":"2023-10-27"},{"lineNumber":336,"author":{"gitId":"CelestineTan03"},"content":"3. The `EditCommandParser#parse()` checks whether the index of the applicant is valid and at least one prefix with","lastModifiedDate":"2023-10-27"},{"lineNumber":337,"author":{"gitId":"CelestineTan03"},"content":"the required values are provided.","lastModifiedDate":"2023-10-27"},{"lineNumber":338,"author":{"gitId":"CelestineTan03"},"content":"4. If the check is successful, the `EditCommand#execute()` checks if the identity of the applicant after the edit ","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"CelestineTan03"},"content":"is the same as the identity of another existing applicant. ","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"CelestineTan03"},"content":"5. If the identity is not the same, the `Model#setApplicant()` updates the details of the applicant while","lastModifiedDate":"2023-10-27"},{"lineNumber":341,"author":{"gitId":"CelestineTan03"},"content":"the `Model#updateFilteredApplicantList()` updates applicant list to display the updated applicant list.","lastModifiedDate":"2023-10-27"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"AustinHuang1203"},"content":"### Help feature","lastModifiedDate":"2023-10-22"},{"lineNumber":344,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":345,"author":{"gitId":"AustinHuang1203"},"content":"#### Steps to trigger","lastModifiedDate":"2023-10-22"},{"lineNumber":346,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":347,"author":{"gitId":"AustinHuang1203"},"content":"1. User opens the app","lastModifiedDate":"2023-10-22"},{"lineNumber":348,"author":{"gitId":"AustinHuang1203"},"content":"2. User keys in `help`","lastModifiedDate":"2023-10-22"},{"lineNumber":349,"author":{"gitId":"AustinHuang1203"},"content":"3. Command list is shown and opens user guide in browser","lastModifiedDate":"2023-10-22"},{"lineNumber":350,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":351,"author":{"gitId":"AustinHuang1203"},"content":"#### Implementation","lastModifiedDate":"2023-10-22"},{"lineNumber":352,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":353,"author":{"gitId":"AustinHuang1203"},"content":"1. When the user enters the term help. it triggers the help feature in the parser under the switch case.","lastModifiedDate":"2023-10-22"},{"lineNumber":354,"author":{"gitId":"AustinHuang1203"},"content":"2. After it is triggered, it will display a short list of possible commands that the user can use.","lastModifiedDate":"2023-10-22"},{"lineNumber":355,"author":{"gitId":"AustinHuang1203"},"content":"3. The user guide will also be opened in their browser","lastModifiedDate":"2023-10-22"},{"lineNumber":356,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":357,"author":{"gitId":"AustinHuang1203"},"content":"#### Notes","lastModifiedDate":"2023-10-22"},{"lineNumber":358,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":359,"author":{"gitId":"ivanleekk"},"content":"1. Help can be called anytime and has no format to follow. The popup screen is disabled to avoid confusion but can be","lastModifiedDate":"2023-10-24"},{"lineNumber":360,"author":{"gitId":"ivanleekk"},"content":"   enabled in the future if need be.","lastModifiedDate":"2023-10-24"},{"lineNumber":361,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":362,"author":{"gitId":"AustinHuang1203"},"content":"### Confirmation + Clear command","lastModifiedDate":"2023-10-22"},{"lineNumber":363,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":364,"author":{"gitId":"AustinHuang1203"},"content":"#### Steps to trigger","lastModifiedDate":"2023-10-22"},{"lineNumber":365,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":366,"author":{"gitId":"AustinHuang1203"},"content":"1. User opens the app","lastModifiedDate":"2023-10-22"},{"lineNumber":367,"author":{"gitId":"AustinHuang1203"},"content":"2. User enters `clear` (and subsequently sees a message asking to confirm)","lastModifiedDate":"2023-10-22"},{"lineNumber":368,"author":{"gitId":"AustinHuang1203"},"content":"3. User enters `yes` to confirm the clear","lastModifiedDate":"2023-10-22"},{"lineNumber":369,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":370,"author":{"gitId":"AustinHuang1203"},"content":"#### Implementation","lastModifiedDate":"2023-10-22"},{"lineNumber":371,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":372,"author":{"gitId":"AustinHuang1203"},"content":"1. This features requires the state of the parser to be known.","lastModifiedDate":"2023-10-22"},{"lineNumber":373,"author":{"gitId":"ivanleekk"},"content":"2. The parser is modified to store the previous taken in command, in this case whether the previous command was a","lastModifiedDate":"2023-10-24"},{"lineNumber":374,"author":{"gitId":"ivanleekk"},"content":"   successful clear command.","lastModifiedDate":"2023-10-24"},{"lineNumber":375,"author":{"gitId":"ivanleekk"},"content":"3. If the previous command is not a clear command, it looks for the keyword clear. Otherwise, it looks for the keyword","lastModifiedDate":"2023-10-24"},{"lineNumber":376,"author":{"gitId":"ivanleekk"},"content":"   yes.","lastModifiedDate":"2023-10-24"},{"lineNumber":377,"author":{"gitId":"ivanleekk"},"content":"4. Hence, the user will first need to call clear, before calling yes to invoke the clear mechanism, ensuring safety of","lastModifiedDate":"2023-10-24"},{"lineNumber":378,"author":{"gitId":"ivanleekk"},"content":"   data.","lastModifiedDate":"2023-10-24"},{"lineNumber":379,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":380,"author":{"gitId":"AustinHuang1203"},"content":"#### Notes","lastModifiedDate":"2023-10-22"},{"lineNumber":381,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":382,"author":{"gitId":"ivanleekk"},"content":"1. If you would like to extend the code for more features that require state, please do change the case condition for","lastModifiedDate":"2023-10-24"},{"lineNumber":383,"author":{"gitId":"ivanleekk"},"content":"   this feature.","lastModifiedDate":"2023-10-24"},{"lineNumber":384,"author":{"gitId":"ivanleekk"},"content":"2. Currently, it follows the default commands if a word other than yes is given. But this will be improved in a future","lastModifiedDate":"2023-10-24"},{"lineNumber":385,"author":{"gitId":"ivanleekk"},"content":"   update.","lastModifiedDate":"2023-10-24"},{"lineNumber":386,"author":{"gitId":"AustinHuang1203"},"content":"3. The state of the parser, rather than the app is used to reduce the chances of accidental clears.","lastModifiedDate":"2023-10-22"},{"lineNumber":387,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":388,"author":{"gitId":"craigtonlian"},"content":"### Interview feature","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":390,"author":{"gitId":"craigtonlian"},"content":"#### Purpose","lastModifiedDate":"2023-10-25"},{"lineNumber":391,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":392,"author":{"gitId":"craigtonlian"},"content":"As a hiring management software, we need to perform CRUD operations for the interviews of applicants. This allows us to add new ","lastModifiedDate":"2023-10-25"},{"lineNumber":393,"author":{"gitId":"craigtonlian"},"content":"interviews, view existing interviews, edit current interviews, and delete interviews. As we aim so make our program intuitive ","lastModifiedDate":"2023-10-25"},{"lineNumber":394,"author":{"gitId":"craigtonlian"},"content":"and efficient, the UI design and data structure used to store these interview objects were crucial considerations in the ","lastModifiedDate":"2023-10-25"},{"lineNumber":395,"author":{"gitId":"craigtonlian"},"content":"implementation process.","lastModifiedDate":"2023-10-25"},{"lineNumber":396,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":397,"author":{"gitId":"craigtonlian"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":398,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":399,"author":{"gitId":"craigtonlian"},"content":"The `Interview` class is used to store the information of each interview. It contains the following attributes: `type` and `rating`.","lastModifiedDate":"2023-10-25"},{"lineNumber":400,"author":{"gitId":"craigtonlian"},"content":"The `type` attribute represents the type of interview, while the `rating` attribute represents how well the applicant performed in ","lastModifiedDate":"2023-10-25"},{"lineNumber":401,"author":{"gitId":"craigtonlian"},"content":"an interview (out of 10). The CRUD commands involving `Interview` includes the `AddInterviewCommand`, `EditInterviewCommand`, and ","lastModifiedDate":"2023-10-25"},{"lineNumber":402,"author":{"gitId":"craigtonlian"},"content":"`DeleteInterviewCommand`. These are implementation in a largely similar manner to the `Applicant` class. The main difference is in how ","lastModifiedDate":"2023-10-25"},{"lineNumber":403,"author":{"gitId":"craigtonlian"},"content":"an `EditInterviewDescriptor` class facilitates the editing of an interview and how the edit and delete commands requires 2 indices: the ","lastModifiedDate":"2023-10-25"},{"lineNumber":404,"author":{"gitId":"craigtonlian"},"content":"applicant index as well as the chosen interview index.","lastModifiedDate":"2023-10-25"},{"lineNumber":405,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":406,"author":{"gitId":"craigtonlian"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-25"},{"lineNumber":407,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":408,"author":{"gitId":"craigtonlian"},"content":"In deciding the data structure to house our Interview objects, we were torn between using a `PriorityQueue` and a `List`.","lastModifiedDate":"2023-10-26"},{"lineNumber":409,"author":{"gitId":"craigtonlian"},"content":"A `PriorityQueue` would have been useful in sorting the interviews by rating, but it would have been difficult to implement","lastModifiedDate":"2023-10-26"},{"lineNumber":410,"author":{"gitId":"craigtonlian"},"content":"the `EditInterviewCommand` and `DeleteInterviewCommand` as the `PriorityQueue` does not have a `get()` method. Also, if we wanted to","lastModifiedDate":"2023-10-26"},{"lineNumber":411,"author":{"gitId":"craigtonlian"},"content":"extend a sorting function for interviews in the future, a `PriorityQueue` would make it more difficult for us to change the comparator","lastModifiedDate":"2023-10-26"},{"lineNumber":412,"author":{"gitId":"craigtonlian"},"content":"for `Interview` objects. For the sake of extensibility of the codebase, we decided to use a `List` instead. This is because a `List` ","lastModifiedDate":"2023-10-26"},{"lineNumber":413,"author":{"gitId":"craigtonlian"},"content":"provides us with greater abstraction and code flexibility in extending various functions for the `Interview` class. ","lastModifiedDate":"2023-10-26"},{"lineNumber":414,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":415,"author":{"gitId":"ivanleekk"},"content":"### Sort feature","lastModifiedDate":"2023-10-24"},{"lineNumber":416,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":417,"author":{"gitId":"ivanleekk"},"content":"#### Implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":418,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":419,"author":{"gitId":"ivanleekk"},"content":"The sort feature is facilitated by `Descriptor`, an enumeration which describes the valid fields which can be used to","lastModifiedDate":"2023-10-24"},{"lineNumber":420,"author":{"gitId":"ivanleekk"},"content":"sort an applicant.","lastModifiedDate":"2023-10-24"},{"lineNumber":421,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":422,"author":{"gitId":"ivanleekk"},"content":"To enable sorting, `Applicant` implements `Comparable\u003cApplicant\u003e`, to allow for comparison between applicants.","lastModifiedDate":"2023-10-24"},{"lineNumber":423,"author":{"gitId":"ivanleekk"},"content":"To allow for applicants to be sorted by different descriptors, `Applicant` is augmented to contain a static `Descriptor`","lastModifiedDate":"2023-10-24"},{"lineNumber":424,"author":{"gitId":"ivanleekk"},"content":"field. This is used in `Applicant#compareTo()`, where a switch case checking the state of the `Descriptor` field will","lastModifiedDate":"2023-10-24"},{"lineNumber":425,"author":{"gitId":"ivanleekk"},"content":"then compare the specified field of both applicants.","lastModifiedDate":"2023-10-24"},{"lineNumber":426,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":427,"author":{"gitId":"ivanleekk"},"content":"In order to enable comparison of each valid field, these fields will implement the `Comparable` interface. Currently","lastModifiedDate":"2023-10-24"},{"lineNumber":428,"author":{"gitId":"ivanleekk"},"content":"valid","lastModifiedDate":"2023-10-24"},{"lineNumber":429,"author":{"gitId":"ivanleekk"},"content":"fields for sorting are","lastModifiedDate":"2023-10-24"},{"lineNumber":430,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":431,"author":{"gitId":"ivanleekk"},"content":"1. Name","lastModifiedDate":"2023-10-24"},{"lineNumber":432,"author":{"gitId":"ivanleekk"},"content":"2. Phone","lastModifiedDate":"2023-10-24"},{"lineNumber":433,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":434,"author":{"gitId":"ivanleekk"},"content":"#### Steps to trigger","lastModifiedDate":"2023-10-24"},{"lineNumber":435,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":436,"author":{"gitId":"ivanleekk"},"content":"1. User opens the app","lastModifiedDate":"2023-10-24"},{"lineNumber":437,"author":{"gitId":"ivanleekk"},"content":"2. User enters `sort d/ [valid field]`, where valid field is one of the fields listed above to be sorted by","lastModifiedDate":"2023-10-24"},{"lineNumber":438,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":439,"author":{"gitId":"ivanleekk"},"content":"Once step 2 has been completed, the GUI will update and refresh the applicant list to be sorted by the specified field.","lastModifiedDate":"2023-10-24"},{"lineNumber":440,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":441,"author":{"gitId":"ivanleekk"},"content":"The following diagram summarises what happens when a user executes a Sort command:","lastModifiedDate":"2023-10-24"},{"lineNumber":442,"author":{"gitId":"ivanleekk"},"content":"\u003cpuml src\u003d\"diagrams/SortCommandActivityDiagram.puml\" alt\u003d\"SortCommandActivityDiagram\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":443,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":444,"author":{"gitId":"ivanleekk"},"content":"#### Design considerations","lastModifiedDate":"2023-10-24"},{"lineNumber":445,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":446,"author":{"gitId":"ivanleekk"},"content":"##### Aspect: How to compare applicants","lastModifiedDate":"2023-10-24"},{"lineNumber":447,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":448,"author":{"gitId":"ivanleekk"},"content":"- Alternative 1 (current choice): use Comparable interface","lastModifiedDate":"2023-10-24"},{"lineNumber":449,"author":{"gitId":"ivanleekk"},"content":"    - Pros: Standard method of comparison between objects in Java and implementing it will make it compatible with most","lastModifiedDate":"2023-10-24"},{"lineNumber":450,"author":{"gitId":"ivanleekk"},"content":"      other sorting functions in Java. Easily extensible by adding more cases to the switch statement, to compare by","lastModifiedDate":"2023-10-24"},{"lineNumber":451,"author":{"gitId":"ivanleekk"},"content":"      other fields when it becomes supported.","lastModifiedDate":"2023-10-24"},{"lineNumber":452,"author":{"gitId":"ivanleekk"},"content":"    - Cons: Applicant#compareTo has to return different values depending on which descriptor has been chosen, causing","lastModifiedDate":"2023-10-24"},{"lineNumber":453,"author":{"gitId":"ivanleekk"},"content":"      some bugs when working with other Java functions as the order of Objects compared to each other is not meant to","lastModifiedDate":"2023-10-24"},{"lineNumber":454,"author":{"gitId":"ivanleekk"},"content":"      change during runtime.","lastModifiedDate":"2023-10-24"},{"lineNumber":455,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":456,"author":{"gitId":"ivanleekk"},"content":"##### Aspect: Command syntax","lastModifiedDate":"2023-10-24"},{"lineNumber":457,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":458,"author":{"gitId":"ivanleekk"},"content":"- Alternative 1 (current choice): `sort d/ [valid field]`","lastModifiedDate":"2023-10-24"},{"lineNumber":459,"author":{"gitId":"ivanleekk"},"content":"    - Pros: Simple and minimal text fields, with a single prefix required to enable sorting.","lastModifiedDate":"2023-10-24"},{"lineNumber":460,"author":{"gitId":"ivanleekk"},"content":"    - Cons: Only able to sort in ascending order.","lastModifiedDate":"2023-10-24"},{"lineNumber":461,"author":{"gitId":"ivanleekk"},"content":"- Alternative 2: `sort d/ [valid field] o/ [a/d]`","lastModifiedDate":"2023-10-24"},{"lineNumber":462,"author":{"gitId":"ivanleekk"},"content":"    - Pros: Able to sort in either ascending or descending order.","lastModifiedDate":"2023-10-24"},{"lineNumber":463,"author":{"gitId":"ivanleekk"},"content":"    - Cons: Requires additional input from the user, slowing down the use of the command.","lastModifiedDate":"2023-10-24"},{"lineNumber":464,"author":{"gitId":"ivanleekk"},"content":"- Alternative 3: `sort d/ [valid field] o/ [a/d]` where `o/` is optional","lastModifiedDate":"2023-10-24"},{"lineNumber":465,"author":{"gitId":"ivanleekk"},"content":"    - Pros: Retains the ability to sort in either order, but also the conciseness of Alternative 1.","lastModifiedDate":"2023-10-24"},{"lineNumber":466,"author":{"gitId":"ivanleekk"},"content":"    - Cons: Users who are not aware of the `o/` feature may not use it.","lastModifiedDate":"2023-10-24"},{"lineNumber":467,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":468,"author":{"gitId":"ivanleekk"},"content":"### Filter feature","lastModifiedDate":"2023-10-24"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":470,"author":{"gitId":"ivanleekk"},"content":"#### Implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":471,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":472,"author":{"gitId":"ivanleekk"},"content":"The filter feature works by updating the `Predicate` used in the `FilteredList\u003cApplicant\u003e` of `ModelManager`. Using","lastModifiedDate":"2023-10-24"},{"lineNumber":473,"author":{"gitId":"ivanleekk"},"content":"the predicate, minimal changes to the implementation of StaffSnap is required.","lastModifiedDate":"2023-10-24"},{"lineNumber":474,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":475,"author":{"gitId":"ivanleekk"},"content":"To create a single predicate that is able to search and filter for multiple fields, a `CustomFilterPredicate` class is","lastModifiedDate":"2023-10-24"},{"lineNumber":476,"author":{"gitId":"ivanleekk"},"content":"created","lastModifiedDate":"2023-10-24"},{"lineNumber":477,"author":{"gitId":"ivanleekk"},"content":"It currently contains the following fields and is able to filter for applicants which match all specified fields.","lastModifiedDate":"2023-10-24"},{"lineNumber":478,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":479,"author":{"gitId":"ivanleekk"},"content":"1. Name","lastModifiedDate":"2023-10-24"},{"lineNumber":480,"author":{"gitId":"ivanleekk"},"content":"2. Phone","lastModifiedDate":"2023-10-24"},{"lineNumber":481,"author":{"gitId":"ivanleekk"},"content":"3. Email","lastModifiedDate":"2023-10-24"},{"lineNumber":482,"author":{"gitId":"ivanleekk"},"content":"4. Position","lastModifiedDate":"2023-10-24"},{"lineNumber":483,"author":{"gitId":"ivanleekk"},"content":"5. Status","lastModifiedDate":"2023-10-26"},{"lineNumber":484,"author":{"gitId":"ivanleekk"},"content":"6. Less than score","lastModifiedDate":"2023-10-26"},{"lineNumber":485,"author":{"gitId":"ivanleekk"},"content":"7. Greater than score","lastModifiedDate":"2023-10-26"},{"lineNumber":486,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":487,"author":{"gitId":"ivanleekk"},"content":"When `CustomFilterPredicate#test` is called, it will check if the specified fields are a substring of the same field of","lastModifiedDate":"2023-10-24"},{"lineNumber":488,"author":{"gitId":"ivanleekk"},"content":"the applicant,","lastModifiedDate":"2023-10-24"},{"lineNumber":489,"author":{"gitId":"ivanleekk"},"content":"returning true if all specified fields match, and false otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":490,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":491,"author":{"gitId":"ivanleekk"},"content":"#### Steps to trigger","lastModifiedDate":"2023-10-24"},{"lineNumber":492,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":493,"author":{"gitId":"ivanleekk"},"content":"1. User opens the app","lastModifiedDate":"2023-10-24"},{"lineNumber":494,"author":{"gitId":"ivanleekk"},"content":"2. User enters `filter [n/, e/, p/, hp/, s/, lts/, gts/] [term]`, where one or more of the prefixes can be specified to","lastModifiedDate":"2023-10-26"},{"lineNumber":495,"author":{"gitId":"ivanleekk"},"content":"   be filtered by","lastModifiedDate":"2023-10-26"},{"lineNumber":496,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":497,"author":{"gitId":"ivanleekk"},"content":"Once step 2 is complete, the GUI will update and refresh the applicant list with only applicants which match all","lastModifiedDate":"2023-10-24"},{"lineNumber":498,"author":{"gitId":"ivanleekk"},"content":"specified fields.","lastModifiedDate":"2023-10-24"},{"lineNumber":499,"author":{"gitId":"ivanleekk"},"content":"The following diagram summarises what happens when a user executes a Filter command:","lastModifiedDate":"2023-10-24"},{"lineNumber":500,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":501,"author":{"gitId":"ivanleekk"},"content":"\u003cpuml src\u003d\"diagrams/FilterCommandActivityDiagram.puml\" alt\u003d\"FilterCommandActivityDiagram\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":502,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":503,"author":{"gitId":"ivanleekk"},"content":"### Design considerations","lastModifiedDate":"2023-10-24"},{"lineNumber":504,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":505,"author":{"gitId":"ivanleekk"},"content":"#### Aspect: How to filter applicants","lastModifiedDate":"2023-10-24"},{"lineNumber":506,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":507,"author":{"gitId":"ivanleekk"},"content":"- Alternative 1 (current choice): use a custom predicate and FilteredList, **compare using strings**","lastModifiedDate":"2023-10-24"},{"lineNumber":508,"author":{"gitId":"ivanleekk"},"content":"    - Pros: Current implementation of ModelManager already uses FilteredList, making a custom predicate an easy","lastModifiedDate":"2023-10-24"},{"lineNumber":509,"author":{"gitId":"ivanleekk"},"content":"      extension.","lastModifiedDate":"2023-10-24"},{"lineNumber":510,"author":{"gitId":"ivanleekk"},"content":"      The `CustomFilterPredicate` can easily be extended when more applicant fields are ready to expand the utility of","lastModifiedDate":"2023-10-24"},{"lineNumber":511,"author":{"gitId":"ivanleekk"},"content":"      the","lastModifiedDate":"2023-10-24"},{"lineNumber":512,"author":{"gitId":"ivanleekk"},"content":"      filter command.","lastModifiedDate":"2023-10-24"},{"lineNumber":513,"author":{"gitId":"ivanleekk"},"content":"    - Cons: Comparison of predicate fields to applicant fields are done using string comparison.","lastModifiedDate":"2023-10-24"},{"lineNumber":514,"author":{"gitId":"ivanleekk"},"content":"- Alternative 2: use a custom predicate and FilteredList, **compare within field classes**","lastModifiedDate":"2023-10-24"},{"lineNumber":515,"author":{"gitId":"ivanleekk"},"content":"    - Pros: Same as alternative 1, and definition of what is considered a match can be defined in the field class (e.g.","lastModifiedDate":"2023-10-24"},{"lineNumber":516,"author":{"gitId":"ivanleekk"},"content":"      Name, Phone, etc).","lastModifiedDate":"2023-10-24"},{"lineNumber":517,"author":{"gitId":"ivanleekk"},"content":"    - Cons: Will require greater complexity than alternative 1 in implementation. May be slower to integrate new classes","lastModifiedDate":"2023-10-24"},{"lineNumber":518,"author":{"gitId":"ivanleekk"},"content":"      in the future.","lastModifiedDate":"2023-10-24"},{"lineNumber":519,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":520,"author":{"gitId":"ivanleekk"},"content":"#### Aspect: Command syntax","lastModifiedDate":"2023-10-24"},{"lineNumber":521,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":522,"author":{"gitId":"ivanleekk"},"content":"- Alternative 1: `filter n/ [Name] e/ [Email] p/ [Position] hp/ [Phone] s/ [Status] lts/ [Score] gts/ [Score]`","lastModifiedDate":"2023-10-26"},{"lineNumber":523,"author":{"gitId":"ivanleekk"},"content":"    - Pros: Unambiguous and forces all fields to be entered, preventing errors.","lastModifiedDate":"2023-10-24"},{"lineNumber":524,"author":{"gitId":"ivanleekk"},"content":"    - Cons: Users cannot filter by single fields. Requires more key presses to enter a filter command.","lastModifiedDate":"2023-10-24"},{"lineNumber":525,"author":{"gitId":"ivanleekk"},"content":"- Alternative 2: `filter [n/, e/, p/, hp/, s/, lts/, gts/] [term]`, where only one term is allowed","lastModifiedDate":"2023-10-26"},{"lineNumber":526,"author":{"gitId":"ivanleekk"},"content":"    - Pros: Quicker to key in command than alternative 1.","lastModifiedDate":"2023-10-24"},{"lineNumber":527,"author":{"gitId":"ivanleekk"},"content":"    - Cons: Only allows users to filter by one field at a time, limiting utility of filter command.","lastModifiedDate":"2023-10-24"},{"lineNumber":528,"author":{"gitId":"ivanleekk"},"content":"- Alternative 3 (current choice): `filter [n/, e/, p/, hp/, s/, lts/, gts/] [term]`, where at least one term is required","lastModifiedDate":"2023-10-26"},{"lineNumber":529,"author":{"gitId":"ivanleekk"},"content":"  and the others","lastModifiedDate":"2023-10-26"},{"lineNumber":530,"author":{"gitId":"ivanleekk"},"content":"  are optional","lastModifiedDate":"2023-10-24"},{"lineNumber":531,"author":{"gitId":"ivanleekk"},"content":"    - Pros: Provides flexibility in the filter command to filter by one or more fields, while still retaining the speed","lastModifiedDate":"2023-10-24"},{"lineNumber":532,"author":{"gitId":"ivanleekk"},"content":"      of alternative 2 when few fields are required.","lastModifiedDate":"2023-10-24"},{"lineNumber":533,"author":{"gitId":"ivanleekk"},"content":"    - Cons: Unfamiliar users may not know that fields can be optional anc continue to key in the full command at all","lastModifiedDate":"2023-10-24"},{"lineNumber":534,"author":{"gitId":"ivanleekk"},"content":"      times.","lastModifiedDate":"2023-10-24"},{"lineNumber":535,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":536,"author":{"gitId":"jingting1412"},"content":"### Find feature","lastModifiedDate":"2023-10-27"},{"lineNumber":537,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":538,"author":{"gitId":"jingting1412"},"content":"#### Purpose","lastModifiedDate":"2023-10-27"},{"lineNumber":539,"author":{"gitId":"jingting1412"},"content":"The find feature allows HR managers to find applicants by name, allowing for a faster and more efficient ","lastModifiedDate":"2023-10-27"},{"lineNumber":540,"author":{"gitId":"jingting1412"},"content":"way of finding and tracking specific candidates.","lastModifiedDate":"2023-10-27"},{"lineNumber":541,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":542,"author":{"gitId":"jingting1412"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":543,"author":{"gitId":"jingting1412"},"content":"After the user enters the find command in the format `find KEYWORD [MORE_KEYWORDS]`, the input is passed to","lastModifiedDate":"2023-10-27"},{"lineNumber":544,"author":{"gitId":"jingting1412"},"content":"the `ApplicantBookParser` class which calls `FindCommandParser#parse()` which parses the keywords in the input ","lastModifiedDate":"2023-10-27"},{"lineNumber":545,"author":{"gitId":"jingting1412"},"content":"and creates a list of keywords.","lastModifiedDate":"2023-10-27"},{"lineNumber":546,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":547,"author":{"gitId":"jingting1412"},"content":"`FindCommandParser` then creates a new instance of `NameContainsKeywordsPredicate` with this list of keywords.","lastModifiedDate":"2023-10-27"},{"lineNumber":548,"author":{"gitId":"jingting1412"},"content":"This `NameContainsKeywordsPredicate` object is then used as the parameter to instantiate a new `FindComand` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":549,"author":{"gitId":"jingting1412"},"content":"`LogicManager#execute()` then calls `FindCommand#execute()` and the current applicant book is updated by","lastModifiedDate":"2023-10-27"},{"lineNumber":550,"author":{"gitId":"jingting1412"},"content":"calling `ModelManager#updateFilteredApplicantList()` which checks which applicant\u0027s name contains any of the keywords.","lastModifiedDate":"2023-10-27"},{"lineNumber":551,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":552,"author":{"gitId":"jingting1412"},"content":"An instance of `CommandResult` is then created which contains the message and information that will be displayed to","lastModifiedDate":"2023-10-27"},{"lineNumber":553,"author":{"gitId":"jingting1412"},"content":"the user. The GUI then updates to show this information to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":554,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":555,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":556,"author":{"gitId":"jingting1412"},"content":"#### Steps to trigger","lastModifiedDate":"2023-10-27"},{"lineNumber":557,"author":{"gitId":"jingting1412"},"content":"1. User opens the app","lastModifiedDate":"2023-10-27"},{"lineNumber":558,"author":{"gitId":"jingting1412"},"content":"2. User keys in `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-27"},{"lineNumber":559,"author":{"gitId":"jingting1412"},"content":"3. The GUI will update to show a list of applicants with name containing any of the keywords.","lastModifiedDate":"2023-10-27"},{"lineNumber":560,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":561,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":562,"author":{"gitId":"jingting1412"},"content":"#### Notes","lastModifiedDate":"2023-10-27"},{"lineNumber":563,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":564,"author":{"gitId":"jingting1412"},"content":"1. The search is case-insensitive, e.g. `find JOHN` will return both john and John. ","lastModifiedDate":"2023-10-27"},{"lineNumber":565,"author":{"gitId":"jingting1412"},"content":"2. The order of the keywords does not matter. e.g. `find Alice Tan` will match Tan Alice. ","lastModifiedDate":"2023-10-27"},{"lineNumber":566,"author":{"gitId":"jingting1412"},"content":"3. Only the applicant name is searched. ","lastModifiedDate":"2023-10-27"},{"lineNumber":567,"author":{"gitId":"jingting1412"},"content":"4. Any person whose name contains the sequence of characters given as the keyword will be given as a result. e.g. Ed will match both Edward and Ed.","lastModifiedDate":"2023-10-27"},{"lineNumber":568,"author":{"gitId":"jingting1412"},"content":"   Persons matching at least one keyword will be returned (i.e. OR search). ","lastModifiedDate":"2023-10-27"},{"lineNumber":569,"author":{"gitId":"jingting1412"},"content":"   e.g. `find Ben Bobby` will return Ben Yang, Bobby Chin.","lastModifiedDate":"2023-10-27"},{"lineNumber":570,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":571,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":572,"author":{"gitId":"jingting1412"},"content":"   ","lastModifiedDate":"2023-10-27"},{"lineNumber":573,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":578,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":579,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":580,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":581,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"CelestineTan03"},"content":"* has a need to manage a significant number of applicants","lastModifiedDate":"2023-10-17"},{"lineNumber":592,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":595,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"CelestineTan03"},"content":"**Value proposition**: introduces organisation to applicant management, recruitment processes and","lastModifiedDate":"2023-10-17"},{"lineNumber":598,"author":{"gitId":"CelestineTan03"},"content":"streamlines hiring decisions","lastModifiedDate":"2023-10-17"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                      | So that I can…​                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"CelestineTan03"},"content":"|----------|---------|-----------------------------------|------------------------------------------------|","lastModifiedDate":"2023-10-17"},{"lineNumber":606,"author":{"gitId":"craigtonlian"},"content":"| `* * *`  | user    | view all the available commands   | I know how to use the app                      |","lastModifiedDate":"2023-10-03"},{"lineNumber":607,"author":{"gitId":"CelestineTan03"},"content":"| `* * *`  | user    | add a new applicant               | track the the progress of all applicants       |","lastModifiedDate":"2023-10-17"},{"lineNumber":608,"author":{"gitId":"CelestineTan03"},"content":"| `* * *`  | user    | edit an applicant descriptor      | maintain an updated database of all applicants |","lastModifiedDate":"2023-10-17"},{"lineNumber":609,"author":{"gitId":"CelestineTan03"},"content":"| `* * *`  | user    | view the full list of applicants  | access important applicant information         |","lastModifiedDate":"2023-10-17"},{"lineNumber":610,"author":{"gitId":"CelestineTan03"},"content":"| `* * *`  | user    | delete an applicant entry         | only track valid applicants                    |","lastModifiedDate":"2023-10-17"},{"lineNumber":611,"author":{"gitId":"CelestineTan03"},"content":"| `* * *`  | user    | add an interview for an applicant | plan screenings                                |","lastModifiedDate":"2023-10-17"},{"lineNumber":612,"author":{"gitId":"CelestineTan03"},"content":"| `* * *`  | user    | store data locally                | use it on a daily basis consistently           |","lastModifiedDate":"2023-10-17"},{"lineNumber":613,"author":{"gitId":"CelestineTan03"},"content":"| `* *`    | user    | find a specific applicant         | access the applicant\u0027s information quickly     |","lastModifiedDate":"2023-10-17"},{"lineNumber":614,"author":{"gitId":"CelestineTan03"},"content":"| `* *`    | user    | sort applicants by a descriptor   | find relevant applicants quickly               |","lastModifiedDate":"2023-10-17"},{"lineNumber":615,"author":{"gitId":"CelestineTan03"},"content":"| `* *`    | user    | filter applicants by a descriptor | find relevant applicants quickly               |","lastModifiedDate":"2023-10-17"},{"lineNumber":616,"author":{"gitId":"CelestineTan03"},"content":"| `* *`    | user    | purge all existing data           | remove sample data and populate real data      |","lastModifiedDate":"2023-10-17"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":618,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"CelestineTan03"},"content":"(For all use cases below, the **System** is `Staff-Snap` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-02"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC01 - Add an applicant**","lastModifiedDate":"2023-10-17"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":624,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: The new applicant will be added to the list of applicants.","lastModifiedDate":"2023-10-17"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":626,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":628,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to add an applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":629,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap adds the new applicant to the list and displays the updated list.","lastModifiedDate":"2023-10-17"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":631,"author":{"gitId":"CelestineTan03"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":633,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":635,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":637,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":639,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends","lastModifiedDate":"2023-10-17"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":641,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC02 - Edit applicant\u0027s information**","lastModifiedDate":"2023-10-17"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":643,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: The applicant\u0027s information will be updated.","lastModifiedDate":"2023-10-17"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":645,"author":{"gitId":"CelestineTan03"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":647,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to edit an applicant\u0027s information.","lastModifiedDate":"2023-10-17"},{"lineNumber":648,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap updates the applicant list with the updated applicant information.","lastModifiedDate":"2023-10-17"},{"lineNumber":649,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":650,"author":{"gitId":"CelestineTan03"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":651,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":652,"author":{"gitId":"CelestineTan03"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":653,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":654,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":655,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":656,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":657,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":658,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":659,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":660,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC03 - List all applicants**","lastModifiedDate":"2023-10-17"},{"lineNumber":661,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":662,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: All applicants will be listed.","lastModifiedDate":"2023-10-17"},{"lineNumber":663,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":664,"author":{"gitId":"CelestineTan03"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":665,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":666,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to view the list of all applicants.","lastModifiedDate":"2023-10-17"},{"lineNumber":667,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap displays the list of all applicants.","lastModifiedDate":"2023-10-17"},{"lineNumber":668,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":669,"author":{"gitId":"CelestineTan03"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":670,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":671,"author":{"gitId":"CelestineTan03"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":672,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":673,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":674,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":675,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":676,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":677,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":678,"author":{"gitId":"CelestineTan03"},"content":"* 1b. Applicant list is empty.","lastModifiedDate":"2023-10-17"},{"lineNumber":679,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":680,"author":{"gitId":"CelestineTan03"},"content":"    * 1b1. Staff-Snap shows an empty applicant list.","lastModifiedDate":"2023-10-17"},{"lineNumber":681,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":682,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":683,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":684,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC04 - Delete an applicant**","lastModifiedDate":"2023-10-17"},{"lineNumber":685,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":686,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: The applicant will be removed from the list of applicants.","lastModifiedDate":"2023-10-17"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":688,"author":{"gitId":"CelestineTan03"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":689,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":690,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to delete an applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":691,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap removes the applicant from the list of applicants.","lastModifiedDate":"2023-10-17"},{"lineNumber":692,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":693,"author":{"gitId":"CelestineTan03"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":694,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":695,"author":{"gitId":"CelestineTan03"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":696,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":697,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":698,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":699,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":700,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":701,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":702,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":703,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC05 - Find an applicant by name**","lastModifiedDate":"2023-10-17"},{"lineNumber":704,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":705,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: The applicants with name matching the search will be listed.","lastModifiedDate":"2023-10-17"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to to find an applicant by name.","lastModifiedDate":"2023-10-17"},{"lineNumber":710,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap displays the list of all applicants that match the search.","lastModifiedDate":"2023-10-17"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":717,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":718,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":719,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":720,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":721,"author":{"gitId":"CelestineTan03"},"content":"* 1b. No applicant found.","lastModifiedDate":"2023-10-17"},{"lineNumber":722,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":723,"author":{"gitId":"CelestineTan03"},"content":"    * 1b1. Staff-Snap shows an empty applicant list.","lastModifiedDate":"2023-10-17"},{"lineNumber":724,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":725,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":726,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":727,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC06 - Sort applicants**","lastModifiedDate":"2023-10-17"},{"lineNumber":728,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":729,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: The list of applicants will be sorted by the descriptor.","lastModifiedDate":"2023-10-17"},{"lineNumber":730,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":731,"author":{"gitId":"CelestineTan03"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":732,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":733,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to sort the applicants by a particular descriptor.","lastModifiedDate":"2023-10-17"},{"lineNumber":734,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap displays the list of applicants sorted by the descriptor.","lastModifiedDate":"2023-10-17"},{"lineNumber":735,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":736,"author":{"gitId":"CelestineTan03"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":737,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":738,"author":{"gitId":"CelestineTan03"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":739,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":740,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":741,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":742,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":743,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":744,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":745,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":746,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC07 - Filter applicants**","lastModifiedDate":"2023-10-17"},{"lineNumber":747,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":748,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: Only applicants that satisfies the specified criterion will be listed.","lastModifiedDate":"2023-10-17"},{"lineNumber":749,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":750,"author":{"gitId":"CelestineTan03"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":751,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":752,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to filter the list of applicants by a specified criterion.","lastModifiedDate":"2023-10-17"},{"lineNumber":753,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap displays the list of all applicants that satisfies the specified criterion.","lastModifiedDate":"2023-10-17"},{"lineNumber":754,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":755,"author":{"gitId":"CelestineTan03"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":756,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":757,"author":{"gitId":"CelestineTan03"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":758,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":759,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":760,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":761,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":762,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":763,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":764,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":765,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC08 - List all commands**","lastModifiedDate":"2023-10-02"},{"lineNumber":766,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":767,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: The list of all available commands will be made accessible.","lastModifiedDate":"2023-10-02"},{"lineNumber":768,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":769,"author":{"gitId":"CelestineTan03"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":770,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":771,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to view the list of all available commands.","lastModifiedDate":"2023-10-02"},{"lineNumber":772,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap opens the user guide in the default browser.","lastModifiedDate":"2023-10-17"},{"lineNumber":773,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":774,"author":{"gitId":"CelestineTan03"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":775,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":776,"author":{"gitId":"CelestineTan03"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":777,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":778,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":779,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":780,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":781,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":782,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC09 - Exit the program**","lastModifiedDate":"2023-10-02"},{"lineNumber":785,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":786,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: Staff-Snap exits.","lastModifiedDate":"2023-10-02"},{"lineNumber":787,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":788,"author":{"gitId":"CelestineTan03"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":789,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":790,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to exit the program.","lastModifiedDate":"2023-10-02"},{"lineNumber":791,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap exits and closes.","lastModifiedDate":"2023-10-02"},{"lineNumber":792,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":793,"author":{"gitId":"CelestineTan03"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":794,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":795,"author":{"gitId":"CelestineTan03"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":796,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":797,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":798,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":799,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":802,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":803,"author":{"gitId":"CelestineTan03"},"content":"* 1b. User closes the application window.","lastModifiedDate":"2023-10-02"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC10 - Clear list of applicants**","lastModifiedDate":"2023-10-17"},{"lineNumber":808,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":809,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: The list of applicants will be cleared.","lastModifiedDate":"2023-10-17"},{"lineNumber":810,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":811,"author":{"gitId":"CelestineTan03"},"content":"**MSS**","lastModifiedDate":"2023-10-17"},{"lineNumber":812,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":813,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to clear the list of applicants.","lastModifiedDate":"2023-10-17"},{"lineNumber":814,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap prompts for confirmation","lastModifiedDate":"2023-10-17"},{"lineNumber":815,"author":{"gitId":"CelestineTan03"},"content":"3. User confirms the action.","lastModifiedDate":"2023-10-17"},{"lineNumber":816,"author":{"gitId":"CelestineTan03"},"content":"4. Staff-Snap clears the list of applicants and displays an empty list.","lastModifiedDate":"2023-10-17"},{"lineNumber":817,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":818,"author":{"gitId":"CelestineTan03"},"content":"   Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":819,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":820,"author":{"gitId":"CelestineTan03"},"content":"**Extensions**","lastModifiedDate":"2023-10-17"},{"lineNumber":821,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":822,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-17"},{"lineNumber":823,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":824,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-17"},{"lineNumber":825,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":826,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":827,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":828,"author":{"gitId":"CelestineTan03"},"content":"* 2a. User rejects the confirmation.","lastModifiedDate":"2023-10-17"},{"lineNumber":829,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":830,"author":{"gitId":"CelestineTan03"},"content":"    * 2a1. Staff-Snap clears confirmation message.","lastModifiedDate":"2023-10-17"},{"lineNumber":831,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":832,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":833,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":834,"author":{"gitId":"CelestineTan03"},"content":"**Use case: UC11 - Add an interview to an applicant**","lastModifiedDate":"2023-10-17"},{"lineNumber":835,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":836,"author":{"gitId":"CelestineTan03"},"content":"Guarantees: A new interview will be added to the applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":837,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":838,"author":{"gitId":"CelestineTan03"},"content":"**MSS**","lastModifiedDate":"2023-10-17"},{"lineNumber":839,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":840,"author":{"gitId":"CelestineTan03"},"content":"1. User inputs the command to add an interview to an applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":841,"author":{"gitId":"CelestineTan03"},"content":"2. Staff-Snap updates the applicant information with the new interview.","lastModifiedDate":"2023-10-17"},{"lineNumber":842,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":843,"author":{"gitId":"CelestineTan03"},"content":"   Use case ends.","lastModifiedDate":"2023-10-17"},{"lineNumber":844,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":845,"author":{"gitId":"CelestineTan03"},"content":"**Extensions**","lastModifiedDate":"2023-10-17"},{"lineNumber":846,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":847,"author":{"gitId":"CelestineTan03"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-10-17"},{"lineNumber":848,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":849,"author":{"gitId":"CelestineTan03"},"content":"    * 1a1. Staff-Snap shows an error message.","lastModifiedDate":"2023-10-17"},{"lineNumber":850,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":851,"author":{"gitId":"CelestineTan03"},"content":"      Use case ends","lastModifiedDate":"2023-10-17"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":853,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"jingting1412"},"content":"2. The entire software should be able to be packaged into a single _JAR file_ for users to download.","lastModifiedDate":"2023-09-29"},{"lineNumber":859,"author":{"gitId":"jingting1412"},"content":"3. The file size of the JAR file should not exceed 100MB.","lastModifiedDate":"2023-09-29"},{"lineNumber":860,"author":{"gitId":"jingting1412"},"content":"4. A user who can type fast should be able to accomplish most tasks faster via a _command line interface (CLI)_,","lastModifiedDate":"2023-09-29"},{"lineNumber":861,"author":{"gitId":"jingting1412"},"content":"   compared to a hypothetical GUI-only version of the app.","lastModifiedDate":"2023-09-29"},{"lineNumber":862,"author":{"gitId":"jingting1412"},"content":"5. The product is for single-users. The application should not be running in a shared computer and with","lastModifiedDate":"2023-09-29"},{"lineNumber":863,"author":{"gitId":"jingting1412"},"content":"   different people using it at different times.","lastModifiedDate":"2023-09-29"},{"lineNumber":864,"author":{"gitId":"jingting1412"},"content":"6. The software should respond to user input within 2 seconds under normal load conditions.","lastModifiedDate":"2023-09-29"},{"lineNumber":865,"author":{"gitId":"jingting1412"},"content":"7. There should be no shared file storage mechanism. The data file created by one user should not be accessed by","lastModifiedDate":"2023-09-29"},{"lineNumber":866,"author":{"gitId":"jingting1412"},"content":"   another user during regular operations.","lastModifiedDate":"2023-09-29"},{"lineNumber":867,"author":{"gitId":"jingting1412"},"content":"8. The data should be stored locally and should be in a _human editable text file_.","lastModifiedDate":"2023-09-29"},{"lineNumber":868,"author":{"gitId":"jingting1412"},"content":"9. The software should work without requiring an installer.","lastModifiedDate":"2023-09-29"},{"lineNumber":869,"author":{"gitId":"jingting1412"},"content":"10. The software should not depend on a remote server so that anyone can use the app at anytime.","lastModifiedDate":"2023-09-29"},{"lineNumber":870,"author":{"gitId":"jingting1412"},"content":"11. The _GUI_ should not cause any resolution-related inconveniences to the user for","lastModifiedDate":"2023-09-29"},{"lineNumber":871,"author":{"gitId":"jingting1412"},"content":"    standard screen resolutions 1920x1080 and higher, and for screen scales 100% and 125%.","lastModifiedDate":"2023-09-29"},{"lineNumber":872,"author":{"gitId":"ivanleekk"},"content":"12. All functions can be used via the GUI, even if the user experience is not optimal, for resolutions 1280x720 and","lastModifiedDate":"2023-10-24"},{"lineNumber":873,"author":{"gitId":"ivanleekk"},"content":"    higher,","lastModifiedDate":"2023-10-24"},{"lineNumber":874,"author":{"gitId":"jingting1412"},"content":"    and for screen scales 150%.","lastModifiedDate":"2023-09-29"},{"lineNumber":875,"author":{"gitId":"ivanleekk"},"content":"13. The software should provide error messages which clearly states the error and provides guidance on correcting the","lastModifiedDate":"2023-10-24"},{"lineNumber":876,"author":{"gitId":"ivanleekk"},"content":"    error.","lastModifiedDate":"2023-10-24"},{"lineNumber":877,"author":{"gitId":"ivanleekk"},"content":"14. The software should provide easily accessible help in the form of documentation for users unfamiliar with the","lastModifiedDate":"2023-10-24"},{"lineNumber":878,"author":{"gitId":"ivanleekk"},"content":"    commands.","lastModifiedDate":"2023-10-24"},{"lineNumber":879,"author":{"gitId":"jingting1412"},"content":"15. The software should include automated tests to ensure correctness and reliability.","lastModifiedDate":"2023-09-29"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"jingting1412"},"content":"* **Mainstream OS**: Windows, Linux, MacOS","lastModifiedDate":"2023-09-29"},{"lineNumber":884,"author":{"gitId":"ivanleekk"},"content":"* **JAR file**: A package file format that bundles all the components of a Java application into a single file for","lastModifiedDate":"2023-10-24"},{"lineNumber":885,"author":{"gitId":"ivanleekk"},"content":"  distribution.","lastModifiedDate":"2023-10-24"},{"lineNumber":886,"author":{"gitId":"jingting1412"},"content":"* **Command Line Interface (CLI)**: A means for users to interact with a software by inputting commands","lastModifiedDate":"2023-09-29"},{"lineNumber":887,"author":{"gitId":"jingting1412"},"content":"* **Human editable text file**: A text file that can be viewed and modified using a standard text editor by a user.","lastModifiedDate":"2023-09-29"},{"lineNumber":888,"author":{"gitId":"jingting1412"},"content":"  (e.g. a `.txt` file)","lastModifiedDate":"2023-09-29"},{"lineNumber":889,"author":{"gitId":"jingting1412"},"content":"* **Graphical User Interface (GUI)**: A type of user interface that allows users to interact with software through","lastModifiedDate":"2023-09-29"},{"lineNumber":890,"author":{"gitId":"jingting1412"},"content":"  graphical icons and visual indicators.","lastModifiedDate":"2023-09-29"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":900,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":901,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"ivanleekk"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2023-10-24"},{"lineNumber":911,"author":{"gitId":"ivanleekk"},"content":"       optimum.","lastModifiedDate":"2023-10-24"},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"ivanleekk"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2023-10-24"},{"lineNumber":930,"author":{"gitId":"ivanleekk"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-24"},{"lineNumber":931,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CelestineTan03":243,"AustinHuang1203":27,"jingting1412":60,"craigtonlian":28,"-":332,"ivanleekk":256}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"   1. Run the `seedu.staffsnap.Main` and try a few commands.","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"craigtonlian":1,"-":60}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Testing guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Testing guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"   e.g. `seedu.staffsnap.commons.StringUtilTest`","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"   e.g. `seedu.staffsnap.storage.StorageManagerTest`","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"   e.g. `seedu.staffsnap.logic.LogicManagerTest`","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"craigtonlian":3,"-":38}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"# Staff-Snap User Guide","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"## User Interface Guide","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"![User Interface Guide Example](images/user-guide/userInterfaceGuide.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"AustinHuang1203"},"content":"## Introduction","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"AustinHuang1203"},"content":"Staffsnap is an application meant HR managers hiring canadidates to make applicant tracking easier.","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"## Features","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"**Notation Guide**\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"* Items in square brackets are optional. ","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"* Parameters can be in any order. ","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"* Extraneous parameters for commands that do not take in parameters such as `help`, `list`, `clear`, `exit` will be ignored.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"### `help` : Viewing help","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"AustinHuang1203"},"content":"Opens up the user guide in the browser. Also displays a list of basic commands the user can use.","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"Format: `help`","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"UI mockup:","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"![Help UI Mockup](images/user-guide/help.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"---","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"### `add` : Adding a new applicant","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"Adds a new applicant to the current list.","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"Format: `add n/NAME hp/PHONE e/EMAIL p/POSITION`","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"Example:","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"* `add n/John Doe hp/91234567 e/johndoe@gmail.com p/Software Engineer`","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"* `add n/Jane Greenwood p/Project Manager e/janeg@yahoo.com hp/91234567`","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"UI mockup:","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"![Add UI Mockup](images/user-guide/add.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"### `edit` : Editing an applicant","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"Edits the details of an applicant in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"Format: `edit INDEX [n/NAME] [hp/PHONE] [e/EMAIL] [p/POSITION]`","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"* Existing values will be updated by the input values.","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"Example:","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"* `edit 1 n/Vijay Sankar Kumar` edits the name of the 1st applicant in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"* `edit 2 hp/80081234 e/newEmail@hotmail.com` edits the phone number and email of the 2nd applicant in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"UI mockup:","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"![Edit UI Mockup](images/user-guide/edit.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"### `list` : Listing all applicants","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"Displays the full list of all applicants.","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"Format: `list`","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"UI mockup:","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"![List UI Mockup](images/user-guide/list.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"### `delete` : Deleting an applicant","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"Deletes a particular applicant based on their index number.","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"* The index refers to the index number shown in the displayed applicant list.","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"* The index **must be a positive integer** 1, 2, 3, ….","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"Examples:","lastModifiedDate":"2023-09-28"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the applicant list.","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"* `sort d/name` followed by `delete 3` deletes the 3rd person in the sorted applicant list.","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"UI mockup:","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"![Delete UI Mockup](images/user-guide/delete.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"### `find` : Finding an applicant by name","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"Find employees whose name contains a particular keyword.","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"* The search is case-insensitive, e.g. `JOHN` will return both `john` and `John`.","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"* The order of the keywords does not matter. e.g. `Alice Tan` will match `Tan Alice`.","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"* Only the applicant name is searched.","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"craigtonlian"},"content":"* Any person whose name contains the sequence of characters given as the keyword will be given as a result. e.g. `Ed` will match both `Edward` and `Ed`.","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"* Persons matching at least one keyword will be returned (i.e. OR search). e.g. `Ben Bobby` will return `Ben Yang`, `Bobby Chin`.","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-09-28"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"* `find IVAN` finds any applicant whose name contains “ivan”.","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"* `find IVAN CHEW` finds any applicant whose name contains “ivan” or contains “chew”.","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"ivanleekk"},"content":"UI mockup:","lastModifiedDate":"2023-09-28"},{"lineNumber":115,"author":{"gitId":"ivanleekk"},"content":"![Find UI Mockup](images/user-guide/find.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"### `sort`: Sorting applicants by descriptor","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"Sorts the applicant list by using a particular descriptor as the sorting criteria.","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"ivanleekk"},"content":"Format: `sort d/DESCRIPTOR`","lastModifiedDate":"2023-09-28"},{"lineNumber":123,"author":{"gitId":"craigtonlian"},"content":"* `DESCRIPTOR` must be either `name` or `phone` or `email` or `position` or `score` or `status`.","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"craigtonlian"},"content":"* `sort d/name` sorts the applicant list by name in alphabetical order.","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"craigtonlian"},"content":"* `sort d/phone` sorts the applicant list by phone numbers in ascending order.","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"craigtonlian"},"content":"* `sort d/email` sorts the applicant list by email in alphabetical order.","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"craigtonlian"},"content":"* `sort d/position` sorts the applicant list by positions in alphabetical order.","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"craigtonlian"},"content":"* `sort d/score` sorts the applicant list by score in descending order.","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"craigtonlian"},"content":"* `sort d/status` sorts the applicant list by status in alphabetical order.","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":133,"author":{"gitId":"ivanleekk"},"content":"UI mockup:","lastModifiedDate":"2023-09-28"},{"lineNumber":134,"author":{"gitId":"ivanleekk"},"content":"![Sort UI Mockup](images/user-guide/sort.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":136,"author":{"gitId":"craigtonlian"},"content":"---","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"craigtonlian"},"content":"### `addi` : Adding an interview to an applicant","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"AustinHuang1203"},"content":"Adds a new interview to an applicant. In the case of duplicate names, the system will automatically increment the last ","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"AustinHuang1203"},"content":"number in the user input by 1, or add 1 if there is no number.","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"AustinHuang1203"},"content":"Duplicate handling: ","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"AustinHuang1203"},"content":"* Entering `technical12`, then `technical12` again will result in the 2nd entry being converted to ","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"AustinHuang1203"},"content":"`technical13`.","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"AustinHuang1203"},"content":"* Entering `technical`, then `technical` again will result in the 2nd entry being converted to `technical1`.","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"CelestineTan03"},"content":"Format: `addi INDEX t/TYPE [r/RATING]`","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"craigtonlian"},"content":"Examples:","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"CelestineTan03"},"content":"* `addi 1 t/technical r/8.6` adds a Technical interview with rating 8.6 to the 1st person in the displayed applicant list.","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"CelestineTan03"},"content":"* `addi 3 t/screening` adds a Screening interview without rating to the 3rd person in the displayed applicant list.","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"craigtonlian"},"content":"---","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"### `editi` : Editing an interview of an applicant","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"craigtonlian"},"content":"Edits an interview of an applicant.","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"CelestineTan03"},"content":"Format: `editi INDEX i/INTERVIEW_INDEX [t/TYPE] [r/RATING]`","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"CelestineTan03"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"CelestineTan03"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"CelestineTan03"},"content":"* Existing values will be updated by the input values.","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"CelestineTan03"},"content":"* `editi 1 i/1 t/technical r/7.8` edits the 1st interview of the 1st person in the displayed applicant list to a technical interview with rating 7.8.","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"CelestineTan03"},"content":"* `editi 3 i/2 t/screening` edits the 2nd interview type of the 3rd person in the displayed applicant list to a screening interview.","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"CelestineTan03"},"content":"* `editi 2 i/1 r/8.9` edits the 1st interview rating of the 2nd person in the displayed applicant list to 8.9.","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"craigtonlian"},"content":"---","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"craigtonlian"},"content":"### `deletei` : Deleting an interview from an applicant","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"craigtonlian"},"content":"Deletes an interview from an applicant.","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"craigtonlian"},"content":"Format: `deletei INDEX i/INTERVIEW_INDEX`","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"craigtonlian"},"content":"Examples:","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"craigtonlian"},"content":"* `deletei 1 i/2` deletes the 2nd interview of the 1st person in the displayed applicant list.","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"craigtonlian"},"content":"---","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"craigtonlian"},"content":"### `status` : Editing an applicant status","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"craigtonlian"},"content":"Edits the status of an applicant.","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"craigtonlian"},"content":"Format: `status INDEX s/STATUS`","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"craigtonlian"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"craigtonlian"},"content":"* `STATUS` must be either `o`(offered) or `r`(rejected) or `u`(undecided).","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"craigtonlian"},"content":"Examples:","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"craigtonlian"},"content":"* `status 3 s/o` updates the status of the 3rd person in the displayed applicant list to OFFERED.","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"ivanleekk"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":191,"author":{"gitId":"craigtonlian"},"content":"### `clear` : Clearing all applicant entries","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":193,"author":{"gitId":"AustinHuang1203"},"content":"After typing `clear`, system asks the user to confirm clearing. If user types `yes`, all the current data stored ","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"AustinHuang1203"},"content":"in the system is the cleared. Else, the clear process is cancelled. ","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"ivanleekk"},"content":"UI mockup:","lastModifiedDate":"2023-09-28"},{"lineNumber":199,"author":{"gitId":"ivanleekk"},"content":"![Clear UI Mockup](images/user-guide/clear.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":201,"author":{"gitId":"ivanleekk"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":202,"author":{"gitId":"craigtonlian"},"content":"### `exit` : Exiting the program","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"ivanleekk"},"content":"Exits the program.","lastModifiedDate":"2023-09-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"ivanleekk"},"content":"Format: `exit`","lastModifiedDate":"2023-09-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"craigtonlian"},"content":"---","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"craigtonlian"},"content":"### Saving the data","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":211,"author":{"gitId":"craigtonlian"},"content":"Automatically saves the data to a local storage whenever there is a change to the applicant list. There is no need to save manually.","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":213,"author":{"gitId":"craigtonlian"},"content":"---","lastModifiedDate":"2023-10-15"},{"lineNumber":214,"author":{"gitId":"craigtonlian"},"content":"### Editing the data file","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":216,"author":{"gitId":"craigtonlian"},"content":"\u003cbox type\u003d\"warning\" header\u003d\"**Caution**\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"craigtonlian"},"content":"    If the format of the edited data file is invalid, Staff-Snap will override the existing data file with an empty data file in the next run. Please make a backup before you attempt to edit the data file!","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"craigtonlian"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":220,"author":{"gitId":"craigtonlian"},"content":"Staff-Snap applicant data are saved automatically as a JSON file `[JAR file location]/data/applicantBook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CelestineTan03":10,"AustinHuang1203":11,"craigtonlian":81,"-":82,"ivanleekk":37}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eStaff-Snap\u003c/a\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-W08-1/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"craigtonlian":1,"-":65}},{"path":"docs/diagrams/FilterCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"start","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":":User enters filter command syntax;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":":ApplicantBookParser and FilterCommandParser","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"parse arguments;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"if (At least 1 argument is provided) then (true)","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"  :Parse provided fields;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"  if (Provided fields are valid) then (true)","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"      :Create new CustomFilterPredicate","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"      from specified fields;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"      :Create new FilterCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"      from CustomFilterPredicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"      :FilterCommand updates predicate used in","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"      ModelManager with CustomFilterPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"      :Display success message and show updated list in GUI;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"      stop","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"  else (false)","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"  :Throw ParseException with","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"        invalid command format","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"        message and proper Filter","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"        syntax;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"        :Display error message;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"        stop","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    endif","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"else (false)","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"label 1","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"label 2","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"label 3","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":":Throw ParseException with","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"      invalid command format","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"      message and proper Filter","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"      syntax;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"      :Display error message;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"      stop","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"endif","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"@enduml","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"ivanleekk":42}},{"path":"docs/diagrams/SortCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"start","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":":User enters sort command syntax;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":":ApplicantBookParser parses command_word;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":":SortCommandParser parses arguments;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"if (Descriptor is present) then (true)","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"  :Execute SortCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"  :Update Applicant Descriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"  :Refresh Applicant List;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"  :Display success message;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"  :Show updated list in GUI;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"  stop","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"else (false)","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"    :Throw ParseException with","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    invalid command format","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    message and proper Sort","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    syntax;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    :Display error message;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    stop","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ivanleekk":22}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"# Staff-Snap","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W08-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W08-1/tp/actions)","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W08-1/tp/graph/badge.svg?token\u003d7PPPGQNQFE)](https://codecov.io/gh/AY2324S1-CS2103T-W08-1/tp)","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"**Staff-Snap is a desktop application for managing your applicant details during your recruitment cycle.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"* If you are interested in using Staff-Snap, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"* If you are interested about developing Staff-Snap, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"craigtonlian":6,"-":15}},{"path":"docs/team/austinhuang1203.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AustinHuang1203"},"content":"﻿\u003ca name\u003d\"br1\"\u003e\u003c/a\u003e ","lastModifiedDate":"2023-09-23"},{"lineNumber":2,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":3,"author":{"gitId":"AustinHuang1203"},"content":"Austin\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"AustinHuang1203"},"content":"Project: Staffsnap","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"AustinHuang1203"},"content":"Staffsnap - An app for HR people.","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"AustinHuang1203"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"AustinHuang1203"},"content":"● **New Feature**: (ﬁller content) Added the ability to undo/redo previous","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"AustinHuang1203"},"content":"commands.","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"AustinHuang1203"},"content":"○ What it does: allows the user to undo all previous commands","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"AustinHuang1203"},"content":"one at a time. Preceding undo commands can be reversed by","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"AustinHuang1203"},"content":"using the redo command.","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"AustinHuang1203"},"content":"○ Justiﬁcation: This feature improves the product signiﬁcantly","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"AustinHuang1203"},"content":"because a user can make mistakes in commands and the app","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"AustinHuang1203"},"content":"should provide a convenient way to rectify them.","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"AustinHuang1203"},"content":"○ Highlights: This enhancement affects existing commands and","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"AustinHuang1203"},"content":"commands to be added in future. It required an in-depth","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"AustinHuang1203"},"content":"analysis of design alternatives. The implementation too was","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"AustinHuang1203"},"content":"challenging as it required changes to existing commands.","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"AustinHuang1203"},"content":"○ Credits: *{mention here if you reused any code/ideas from*","lastModifiedDate":"2023-09-23"},{"lineNumber":36,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"AustinHuang1203"},"content":"*elsewhere or if a third-party library is heavily used in the feature*","lastModifiedDate":"2023-09-23"},{"lineNumber":38,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":39,"author":{"gitId":"AustinHuang1203"},"content":"*so that a reader can make a more accurate judgement of how*","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":41,"author":{"gitId":"AustinHuang1203"},"content":"*much effort went into the feature}*","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"AustinHuang1203"},"content":"● **New Feature**: Some text","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":45,"author":{"gitId":"AustinHuang1203"},"content":"● **Code contributed**: [RepoSense](https://se-education.org/addressbook-level3/team/johndoe.html)[ ](https://se-education.org/addressbook-level3/team/johndoe.html)[link](https://se-education.org/addressbook-level3/team/johndoe.html)","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"AustinHuang1203"},"content":"● **Project management**:","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"AustinHuang1203"},"content":"○ some text","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"AustinHuang1203"},"content":"● **Enhancements to existing features**:","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":53,"author":{"gitId":"AustinHuang1203"},"content":"○ Some text","lastModifiedDate":"2023-09-23"},{"lineNumber":54,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"AustinHuang1203"},"content":"● **Documentation**:","lastModifiedDate":"2023-09-23"},{"lineNumber":56,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":57,"author":{"gitId":"AustinHuang1203"},"content":"○ User Guide:","lastModifiedDate":"2023-09-23"},{"lineNumber":58,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":59,"author":{"gitId":"AustinHuang1203"},"content":"■ Added the userguides feature descriptions for","lastModifiedDate":"2023-09-23"},{"lineNumber":60,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":61,"author":{"gitId":"AustinHuang1203"},"content":"purge and ﬁlter","lastModifiedDate":"2023-09-23"},{"lineNumber":62,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":63,"author":{"gitId":"AustinHuang1203"},"content":"■ Ported the userguide to github","lastModifiedDate":"2023-09-23"},{"lineNumber":64,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":65,"author":{"gitId":"AustinHuang1203"},"content":"○ Developer Guide:","lastModifiedDate":"2023-09-23"},{"lineNumber":66,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":67,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":68,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":69,"author":{"gitId":"AustinHuang1203"},"content":"\u003ca name\u003d\"br2\"\u003e\u003c/a\u003e ","lastModifiedDate":"2023-09-23"},{"lineNumber":70,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":71,"author":{"gitId":"AustinHuang1203"},"content":"■ Some text","lastModifiedDate":"2023-09-23"},{"lineNumber":72,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":73,"author":{"gitId":"AustinHuang1203"},"content":"● **Community**:","lastModifiedDate":"2023-09-23"},{"lineNumber":74,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":75,"author":{"gitId":"AustinHuang1203"},"content":"○ Some text","lastModifiedDate":"2023-09-23"},{"lineNumber":76,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":77,"author":{"gitId":"AustinHuang1203"},"content":"● **Tools**:","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"AustinHuang1203"},"content":"○ Some text","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":81,"author":{"gitId":"AustinHuang1203"},"content":"● *{you can add/remove categories in the list above}*","lastModifiedDate":"2023-09-23"},{"lineNumber":82,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-09-23"}],"authorContributionMap":{"AustinHuang1203":82}},{"path":"docs/team/celestinetan03.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"  title: \"Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"# Project: Staff-Snap","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"### Celestine Tan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"Author: Celestine Tan @celestinetan03","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"### Overview","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"Staff-Snap is a desktop HR management application used for managing employees. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about ?? kLoC.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"  * What it does: ","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"  * Justification: ","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"  * Credits:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dcelestinetan03\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"    * Added documentation for the features `add` and `edit` [\\#72]()","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"  * PRs reviewed (with non-trivial review comments): ","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"  * Contributed to forum discussions (examples: )","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: )","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ()","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CelestineTan03":17,"craigtonlian":2,"-":22}},{"path":"docs/team/craigtonlian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"  title: \"Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"# Project: Staff-Snap","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"\u003e ***Craigton Lian\u0027s*** *Project Portfolio Page*\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"## Overview","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"Staff-Snap is a desktop HR management application used for managing employees. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about \u003cspan style\u003d\"color:red\"\u003e**[TO BE UPDATED]**\u003c/span\u003e 10 kLoC.","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dcraigtonlian\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    * \u003cspan style\u003d\"color:red\"\u003e**[TO BE UPDATED]**\u003c/span\u003e Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    * \u003cspan style\u003d\"color:red\"\u003e**[TO BE UPDATED]**\u003c/span\u003e Added implementation details of the `delete` feature.","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"  * \u003cspan style\u003d\"color:red\"\u003e**[TO BE UPDATED]**\u003c/span\u003e PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"      [\\#31](https://github.com/AY2324S1-CS2103T-W08-1/tp/pull/31),","lastModifiedDate":"2023-09-30"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"      [\\#32](),","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"      [\\#19](),","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"      [\\#42]()","lastModifiedDate":"2023-09-30"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"  * Contributed to forum discussions (examples:","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"      [\\#2](https://github.com/nus-cs2103-AY2324S1/forum/issues/2),","lastModifiedDate":"2023-09-30"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"      [\\#121](https://github.com/nus-cs2103-AY2324S1/forum/issues/121),","lastModifiedDate":"2023-09-30"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"      [\\#158](https://github.com/nus-cs2103-AY2324S1/forum/issues/158),","lastModifiedDate":"2023-09-30"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"      [\\#228](https://github.com/nus-cs2103-AY2324S1/forum/issues/228))","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"  * \u003cspan style\u003d\"color:red\"\u003e**[TO BE UPDATED]**\u003c/span\u003e Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"craigtonlian":21,"-":32}},{"path":"docs/team/ivanleekk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"  title: \" Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"# Project: Staff-Snap","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"## Ivan Lee\u0027s Project Portfolio Page!","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"Author: Ivan Lee @ivanleekk","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"### What is Staff-Snap?","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"Staff-Snap is a desktop HR management application used for managing employees. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about **~~10 kLoC~~**.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"### What have I done?","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"___","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"TODO: ","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"- [ ] Update features ","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"- [ ] Update reposense link","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"- [ ] Update Project Management","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"- [ ] Update Enhancements","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"- [ ] Update User guide and Dev guide","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"- [ ] Update Community","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"- [ ] Update Tools","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"craigtonlian":3,"-":41,"ivanleekk":19}},{"path":"docs/team/jingting1412.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"  title: \" Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"### Project: Staff-Snap","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"Author: Wang Jingting @jingting1412","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"Staff-Snap is a desktop HR management application used for managing employees. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djingting1412\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"craigtonlian":3,"jingting1412":2,"-":40}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their applicant book and edit it if required. The command should have the following format:","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":" * Changes the remark of an existing person in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"craigtonlian"},"content":"Create a `RemarkCommandParser` class in the `seedu.staffsnap.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"craigtonlian"},"content":"Create a new `Remark` in `seedu.staffsnap.model.applicant`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"craigtonlian"},"content":"Simply add the following to [`seedu.staffsnap.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"craigtonlian"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty applicant book!","lastModifiedDate":"2023-10-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"craigtonlian":9,"-":393}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"The `address` field in `Person` is actually an instance of the `seedu.staffsnap.model.applicant.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"craigtonlian":1,"-":114}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.staffsnap.logic.Logic`.","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"A quick look at the `seedu.staffsnap.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"craigtonlian"},"content":"    3.  Save the applicant book in the CSV format instead","lastModifiedDate":"2023-10-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"craigtonlian"},"content":"    6.  Add a new entity to the applicant book","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"craigtonlian":4,"-":307}},{"path":"src/main/java/seedu/staffsnap/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.FileUtil;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"craigtonlian":4,"-":69}},{"path":"src/main/java/seedu/staffsnap/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"craigtonlian":2,"-":39}},{"path":"src/main/java/seedu/staffsnap/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.Config;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.Version;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.StringUtil;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Logic;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.LogicManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.storage.ApplicantBookStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.storage.JsonApplicantBookStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.storage.Storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.storage.StorageManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.ui.Ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.ui.UiManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, false);","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    protected HostServices hostServices \u003d getHostServices();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Staff-Snap ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBookStorage applicantBookStorage \u003d new JsonApplicantBookStorage(userPrefs.getApplicantBookFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"        storage \u003d new StorageManager(applicantBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"        ui \u003d new UiManager(logic, hostServices);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s applicant book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"     * The data from the sample applicant book will be used instead if {@code storage}\u0027s applicant book is not found,","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"     * or an empty applicant book will be used instead if errors occur when reading {@code storage}\u0027s applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"        logger.info(\"Using data file : \" + storage.getApplicantBookFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"        Optional\u003cReadOnlyApplicantBook\u003e applicantBookOptional;","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        ReadOnlyApplicantBook initialData;","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"            applicantBookOptional \u003d storage.readApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"            if (!applicantBookOptional.isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"jingting1412"},"content":"                logger.info(\"No applicant book found at file path. A new data file will be created at \"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"jingting1412"},"content":"                        + storage.getApplicantBookFilePath()","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"                        + \" populated with a sample ApplicantBook.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"            initialData \u003d applicantBookOptional.orElseGet(SampleDataUtil::getSampleApplicantBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"            logger.warning(\"Data file at \" + storage.getApplicantBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"                    + \" Will be starting with an empty ApplicantBook.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"            initialData \u003d new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"jingting1412"},"content":"                logger.info(\"Creating new config file at\" + configFilePathUsed);","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":129,"author":{"gitId":"jingting1412"},"content":"                    + \" Using default config properties at \" + Config.DEFAULT_CONFIG_FILE);","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"craigtonlian"},"content":"        logger.info(\"Starting Staff-Snap \" + MainApp.VERSION);","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"craigtonlian"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Staff-Snap ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":46,"jingting1412":4,"-":139}},{"path":"src/main/java/seedu/staffsnap/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.core;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":2,"-":64}},{"path":"src/main/java/seedu/staffsnap/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.core;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":2,"-":80}},{"path":"src/main/java/seedu/staffsnap/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.core;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    private static final String LOG_FILE \u003d \"applicantBook.log\";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":2,"-":104}},{"path":"src/main/java/seedu/staffsnap/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.core;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":1,"-":120}},{"path":"src/main/java/seedu/staffsnap/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.core.index;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"craigtonlian":2,"-":67}},{"path":"src/main/java/seedu/staffsnap/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.exceptions;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"craigtonlian":1,"-":10}},{"path":"src/main/java/seedu/staffsnap/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.exceptions;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":1,"-":20}},{"path":"src/main/java/seedu/staffsnap/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.MainApp;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"craigtonlian":2,"-":40}},{"path":"src/main/java/seedu/staffsnap/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":1,"-":34}},{"path":"src/main/java/seedu/staffsnap/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.Config;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"craigtonlian":3,"-":20}},{"path":"src/main/java/seedu/staffsnap/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":1,"-":82}},{"path":"src/main/java/seedu/staffsnap/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":3,"-":141}},{"path":"src/main/java/seedu/staffsnap/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"        String[] wordsInPreppedSentence \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"                .anyMatch(sentenceWord -\u003e sentenceWord.toLowerCase().contains(preppedWord.toLowerCase()));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"     *   Ignores case.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"     *       containsStringIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"     *       containsStringIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"     *       containsStringIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"     *       containsStringIgnoreCase(\"ABc def\", \"acd\") \u003d\u003d false // \"acd\" is not a substring in \"ABc def\"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"     * @param sentence a String that is not null","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"     * @param word a String that is not empty and is not null","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"    public static boolean containsStringIgnoreCase(String sentence, String word) {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(word);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"        return sentence.toLowerCase().contains(preppedWord.toLowerCase());","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":2,"jingting1412":1,"-":63,"ivanleekk":22}},{"path":"src/main/java/seedu/staffsnap/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"craigtonlian":1,"-":52}},{"path":"src/main/java/seedu/staffsnap/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.CommandResult;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"     * Returns the ApplicantBook.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"     * @see seedu.staffsnap.model.Model#getApplicantBook()","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    ReadOnlyApplicantBook getApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    /** Returns an unmodifiable view of the filtered list of applicants */","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"     * Returns the user prefs\u0027 applicant book file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"craigtonlian":14,"-":36}},{"path":"src/main/java/seedu/staffsnap/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.Command;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.CommandResult;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.ApplicantBookParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.storage.Storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    private final ApplicantBookParser applicantBookParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        applicantBookParser \u003d new ApplicantBookParser();","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        Command command \u003d applicantBookParser.parseCommand(commandText);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"            storage.saveApplicantBook(model.getApplicantBook());","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"    public ReadOnlyApplicantBook getApplicantBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        return model.getApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        return model.getFilteredApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"        return model.getApplicantBookFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"craigtonlian":22,"-":66}},{"path":"src/main/java/seedu/staffsnap/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.Prefix;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX \u003d \"The applicant index provided is invalid\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX \u003d \"The interview index provided is invalid\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_APPLICANTS_LISTED_OVERVIEW \u003d \"%1$d applicants listed!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"     * Formats the {@code applicant} for display to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    public static String format(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        builder.append(applicant.getName())","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"                .append(applicant.getPhone())","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"                .append(applicant.getEmail())","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"                .append(\"; Position: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"                .append(applicant.getPosition())","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"                .append(\"; Interviews: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        builder.append(\"[\");","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"        applicant.getInterviews().forEach(interview -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"                builder.append(interview.getType())","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"                .append(\"(\")","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"                .append(interview.getRating())","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"                .append(\"); \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        builder.append(\"]\");","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"        builder.append(\"; Status: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"                .append(applicant.getStatus())","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"                .append(\"; Score: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"                .append(applicant.getScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CelestineTan03":8,"craigtonlian":17,"-":36,"ivanleekk":1}},{"path":"src/main/java/seedu/staffsnap/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":" * Adds an applicant to the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an applicant to the applicant book.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_POSITION + \"POSITION\\n \"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_POSITION + \"Software Engineer\";","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New applicant added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in the applicant book\";","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"    private final Applicant toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"     * Creates an AddCommand to add the specified {@code Applicant}","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"    public AddCommand(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        toAdd \u003d applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        if (model.hasApplicant(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        model.addApplicant(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":27,"-":53}},{"path":"src/main/java/seedu/staffsnap/logic/commands/AddInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":" * Adds an interview to an applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"public class AddInterviewCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    public static final String COMMAND_WORD \u003d \"addi\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an interview to an applicant identified \"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"            + \"by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"            + PREFIX_TYPE + \"TYPE\" + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"            + \"[\" + PREFIX_RATING + \"RATING]...\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"            + \"1 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"            + PREFIX_TYPE + \"technical\" + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"            + PREFIX_RATING + \"8.0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New interview added to applicant: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"This interview already exists for this applicant\";","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_INTERVIEW_LIMIT_REACHED \u003d \"This applicant has reached the interview limit of 5\";","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"AustinHuang1203"},"content":"    private Interview interviewToAdd;","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"     * Creates an AddInterviewCommand to add the specified {@code Interview}","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"    public AddInterviewCommand(Index index, Interview interview) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(interview);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        this.interviewToAdd \u003d interview;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"        if (applicantToEdit.getInterviews().size() \u003d\u003d 5) {","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(MESSAGE_INTERVIEW_LIMIT_REACHED);","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"AustinHuang1203"},"content":"        while (applicantToEdit.getInterviews().contains(interviewToAdd)","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"                || interviewToAdd.isContainedIn(applicantToEdit.getInterviews())) {","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"AustinHuang1203"},"content":"            interviewToAdd \u003d interviewToAdd.incrementName();","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        applicantToEdit.addInterview(interviewToAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"        applicantToEdit.getScore().updateScoreAfterAdd(interviewToAdd);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        model.refreshApplicantList();","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(applicantToEdit)));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"        if (!(other instanceof AddInterviewCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"        AddInterviewCommand otherAddCommand \u003d (AddInterviewCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"        return interviewToAdd.equals(otherAddCommand.interviewToAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"                .add(\"interviewToAdd\", interviewToAdd)","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"CelestineTan03":8,"AustinHuang1203":3,"craigtonlian":88}},{"path":"src/main/java/seedu/staffsnap/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":" * Clears the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"AustinHuang1203"},"content":"    public static final String COMMAND_WORD \u003d \"yes\";","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"AustinHuang1203"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Clear is cancelled!\";","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"AustinHuang1203"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Staff-Snap has been successfully cleared!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"AustinHuang1203"},"content":"    public final Boolean isSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"AustinHuang1203"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"AustinHuang1203"},"content":"     * Constructor for the command","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"AustinHuang1203"},"content":"     * @param args whether to clear","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"AustinHuang1203"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"AustinHuang1203"},"content":"    public ClearCommand(String args) {","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"AustinHuang1203"},"content":"        System.out.println(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"AustinHuang1203"},"content":"        if (args.equals(COMMAND_WORD)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"AustinHuang1203"},"content":"            this.isSuccess \u003d true;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"AustinHuang1203"},"content":"        } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"AustinHuang1203"},"content":"            this.isSuccess \u003d false;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"AustinHuang1203"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"AustinHuang1203"},"content":"        System.out.println(isSuccess);","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"AustinHuang1203"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"AustinHuang1203"},"content":"        if (this.isSuccess) {","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"AustinHuang1203"},"content":"            assert(model !\u003d null);","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"            model.setApplicantBook(new ApplicantBook());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"AustinHuang1203"},"content":"        return new CommandResult(MESSAGE_FAILURE);","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"AustinHuang1203"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AustinHuang1203":23,"craigtonlian":5,"-":16}},{"path":"src/main/java/seedu/staffsnap/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":3,"-":17}},{"path":"src/main/java/seedu/staffsnap/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":2,"-":80}},{"path":"src/main/java/seedu/staffsnap/logic/commands/ConfirmationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AustinHuang1203"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"AustinHuang1203"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"AustinHuang1203"},"content":" * Clears the applicant book.","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"AustinHuang1203"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"AustinHuang1203"},"content":"public class ConfirmationCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"AustinHuang1203"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"AustinHuang1203"},"content":"    public static final String CONFIRM \u003d \"Enter yes to confirm clear. Otherwise, enter any other key to cancel.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"AustinHuang1203"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"AustinHuang1203"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"AustinHuang1203"},"content":"        return new CommandResult(CONFIRM);","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"AustinHuang1203"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"AustinHuang1203"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"AustinHuang1203":15}},{"path":"src/main/java/seedu/staffsnap/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":" * Deletes a applicant identified using it\u0027s displayed index from the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"            + \": Deletes the applicant identified by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_DELETE_APPLICANT_SUCCESS \u003d \"Deleted Applicant: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicantToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPLICANT_SUCCESS, Messages.format(applicantToDelete)));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":15,"-":54}},{"path":"src/main/java/seedu/staffsnap/logic/commands/DeleteInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":" * Deletes an applicant\u0027s specified interview identified using it\u0027s displayed index from the applicant book.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"public class DeleteInterviewCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"    public static final String COMMAND_WORD \u003d \"deletei\";","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"            + \": Deletes the applicant\u0027s specified interview identified by the index number \"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"            + \"used in the displayed applicant list.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"            + \"Parameters: INDEX (must be a positive integer) \\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_INTERVIEW + \"INTERVIEW_INDEX\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 i/2\";","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_DELETE_INTERVIEW_SUCCESS \u003d \"Deleted interview from Applicant: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    private final Index targetApplicantIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    private final Index targetInterviewIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"     * Creates a DeleteInterviewCommand to delete the interview at the","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"     * specified {@code targetInterviewIndex} from the applicant at the","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"     * {@code targetApplicantIndex} in the displayed Applicant list.","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    public DeleteInterviewCommand(Index targetApplicantIndex, Index targetInterviewIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        this.targetApplicantIndex \u003d targetApplicantIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        this.targetInterviewIndex \u003d targetInterviewIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        if (targetApplicantIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicantToDeleteFrom \u003d lastShownList.get(targetApplicantIndex.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        if (targetInterviewIndex.getZeroBased() \u003e\u003d applicantToDeleteFrom.getInterviews().size()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"        Interview interviewToDelete \u003d applicantToDeleteFrom.getInterviews().get(targetInterviewIndex.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"        applicantToDeleteFrom.deleteInterview(interviewToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"        applicantToDeleteFrom.getScore().updateScoreAfterDelete(interviewToDelete);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"        model.refreshApplicantList();","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"                String.format(MESSAGE_DELETE_INTERVIEW_SUCCESS, Messages.format(applicantToDeleteFrom)));","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"        if (!(other instanceof DeleteInterviewCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        DeleteInterviewCommand otherDeleteCommand \u003d (DeleteInterviewCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"        return targetApplicantIndex.equals(otherDeleteCommand.targetApplicantIndex)","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 targetInterviewIndex.equals(otherDeleteCommand.targetInterviewIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"                .add(\"targetApplicantIndex\", targetApplicantIndex)","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"                .add(\"targetInterviewIndex\", targetInterviewIndex)","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"CelestineTan03":1,"craigtonlian":92}},{"path":"src/main/java/seedu/staffsnap/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.applicant.Score;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":" * Edits the details of an existing applicant in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the applicant identified \"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"            + \"by the index number used in the displayed applicant list. \"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION]\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_EDIT_APPLICANT_SUCCESS \u003d \"Edited Applicant: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in the applicant book.\";","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"    private final EditApplicantDescriptor editApplicantDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"     * @param index                   of the applicant in the filtered applicant list to edit","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"     * @param editApplicantDescriptor details to edit the applicant with","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"    public EditCommand(Index index, EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(editApplicantDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        this.editApplicantDescriptor \u003d new EditApplicantDescriptor(editApplicantDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        Applicant editedApplicant \u003d createEditedApplicant(applicantToEdit, editApplicantDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"CelestineTan03"},"content":"        // Check if edited applicant has the same identity as another applicant","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"        if (!applicantToEdit.isSameApplicant(editedApplicant) \u0026\u0026 model.hasApplicant(editedApplicant)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"CelestineTan03"},"content":"        // Check if edited applicant has the same email or phone number as the original","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"CelestineTan03"},"content":"        // applicant and another existing applicant","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"CelestineTan03"},"content":"        if (model.isDuplicateApplicant(editedApplicant)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"CelestineTan03"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"        model.setApplicant(applicantToEdit, editedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPLICANT_SUCCESS, Messages.format(editedApplicant)));","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"     * Creates and returns a {@code Applicant} with the details of {@code applicantToEdit}","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"     * edited with {@code editApplicantDescriptor}.","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"    private static Applicant createEditedApplicant(Applicant applicantToEdit,","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"                                                   EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"        assert applicantToEdit !\u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"        Name updatedName \u003d editApplicantDescriptor.getName().orElse(applicantToEdit.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"        Phone updatedPhone \u003d editApplicantDescriptor.getPhone().orElse(applicantToEdit.getPhone());","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"craigtonlian"},"content":"        Email updatedEmail \u003d editApplicantDescriptor.getEmail().orElse(applicantToEdit.getEmail());","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"        Position updatedPosition \u003d editApplicantDescriptor.getPosition().orElse(applicantToEdit.getPosition());","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"        List\u003cInterview\u003e updatedInterviews \u003d applicantToEdit.getInterviews();","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"ivanleekk"},"content":"        Status updatedStatus \u003d editApplicantDescriptor.getStatus().orElse(applicantToEdit.getStatus());","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"CelestineTan03"},"content":"        Score updatedScore \u003d editApplicantDescriptor.getScore().orElse(applicantToEdit.getScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"        return new Applicant(updatedName, updatedPhone, updatedEmail, updatedPosition,","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"CelestineTan03"},"content":"                updatedInterviews, updatedStatus, updatedScore);","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 editApplicantDescriptor.equals(otherEditCommand.editApplicantDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"ivanleekk"},"content":"                .add(\"editApplicantDescriptor\", editApplicantDescriptor).toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"craigtonlian"},"content":"     * Stores the details to edit the applicant with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"craigtonlian"},"content":"     * corresponding field value of the applicant.","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"craigtonlian"},"content":"    public static class EditApplicantDescriptor {","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"craigtonlian"},"content":"        private Email email;","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"craigtonlian"},"content":"        private Position position;","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"craigtonlian"},"content":"        private List\u003cInterview\u003e interviews;","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"ivanleekk"},"content":"        private Status status;","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"CelestineTan03"},"content":"        private Score score;","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"ivanleekk"},"content":"        public EditApplicantDescriptor() {","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"craigtonlian"},"content":"         * A defensive copy of {@code applicant} is used internally.","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"craigtonlian"},"content":"        public EditApplicantDescriptor(EditApplicantDescriptor toCopy) {","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"craigtonlian"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"craigtonlian"},"content":"            setPosition(toCopy.position);","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"craigtonlian"},"content":"            setInterviews(toCopy.interviews);","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"ivanleekk"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"CelestineTan03"},"content":"            setScore(toCopy.score);","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"craigtonlian"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, position);","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"craigtonlian"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"craigtonlian"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"craigtonlian"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"craigtonlian"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"craigtonlian"},"content":"        public void setPosition(Position position) {","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"craigtonlian"},"content":"            this.position \u003d position;","lastModifiedDate":"2023-10-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"craigtonlian"},"content":"        public Optional\u003cPosition\u003e getPosition() {","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"craigtonlian"},"content":"            return Optional.ofNullable(position);","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"craigtonlian"},"content":"         * Sets {@code interviews} to this object\u0027s {@code interviews}.","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"craigtonlian"},"content":"         * A defensive copy of {@code interviews} is used internally.","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"craigtonlian"},"content":"        public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"craigtonlian"},"content":"            this.interviews \u003d (interviews !\u003d null) ? new ArrayList\u003c\u003e(interviews) : null;","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"craigtonlian"},"content":"         * Returns an unmodifiable interview set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"craigtonlian"},"content":"         * Returns {@code Optional#empty()} if {@code interviews} is null.","lastModifiedDate":"2023-10-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"craigtonlian"},"content":"        public Optional\u003cList\u003cInterview\u003e\u003e getInterviews() {","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"craigtonlian"},"content":"            return (interviews !\u003d null) ? Optional.of(Collections.unmodifiableList(interviews)) : Optional.empty();","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"ivanleekk"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"ivanleekk"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-10-23"},{"lineNumber":228,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":230,"author":{"gitId":"ivanleekk"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"ivanleekk"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"CelestineTan03"},"content":"        public void setScore(Score score) {","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"CelestineTan03"},"content":"            this.score \u003d score;","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"CelestineTan03"},"content":"        public Optional\u003cScore\u003e getScore() {","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"CelestineTan03"},"content":"            return Optional.ofNullable(score);","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"craigtonlian"},"content":"            if (!(other instanceof EditApplicantDescriptor)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"craigtonlian"},"content":"            EditApplicantDescriptor otherEditApplicantDescriptor \u003d (EditApplicantDescriptor) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":255,"author":{"gitId":"craigtonlian"},"content":"            return Objects.equals(name, otherEditApplicantDescriptor.name)","lastModifiedDate":"2023-10-12"},{"lineNumber":256,"author":{"gitId":"craigtonlian"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditApplicantDescriptor.phone)","lastModifiedDate":"2023-10-12"},{"lineNumber":257,"author":{"gitId":"craigtonlian"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditApplicantDescriptor.email)","lastModifiedDate":"2023-10-15"},{"lineNumber":258,"author":{"gitId":"craigtonlian"},"content":"                    \u0026\u0026 Objects.equals(position, otherEditApplicantDescriptor.position)","lastModifiedDate":"2023-10-13"},{"lineNumber":259,"author":{"gitId":"ivanleekk"},"content":"                    \u0026\u0026 Objects.equals(status, otherEditApplicantDescriptor.status);","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":267,"author":{"gitId":"craigtonlian"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2023-10-15"},{"lineNumber":268,"author":{"gitId":"craigtonlian"},"content":"                    .add(\"position\", position)","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"CelestineTan03"},"content":"                    .add(\"status\", status)","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"CelestineTan03"},"content":"                    .add(\"score\", score)","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"CelestineTan03":22,"craigtonlian":87,"-":144,"ivanleekk":21}},{"path":"src/main/java/seedu/staffsnap/logic/commands/EditInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":" * Edits the details of an existing interview of an applicant.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"public class EditInterviewCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    public static final String COMMAND_WORD \u003d \"editi\";","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"            + \": Edits the applicant\u0027s specified interview identified by the index number \"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"            + \"used in the displayed applicant list. \"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_INTERVIEW + \"INTERVIEW_INDEX \"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"            + \"[\" + PREFIX_TYPE + \"TYPE] \\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"            + \"[\" + PREFIX_RATING + \"RATING] \\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_INTERVIEW + \"2 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"            + PREFIX_TYPE + \"Behavioral \"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"            + PREFIX_RATING + \"8.0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_EDIT_INTERVIEW_SUCCESS \u003d \"Edited interview of Applicant: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"This interview already exists for this applicant.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"    private final Index applicantIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"    private final Index interviewIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"    private final EditInterviewDescriptor editInterviewDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"     * @param applicantIndex of the applicant in the filtered applicant list to edit","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"     * @param interviewIndex of the interview in the applicant\u0027s interview list","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"     * @param editInterviewDescriptor details to edit the interview with","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"    public EditInterviewCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"            Index applicantIndex, Index interviewIndex, EditInterviewDescriptor editInterviewDescriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(applicantIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(interviewIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(editInterviewDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"        this.applicantIndex \u003d applicantIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"        this.interviewIndex \u003d interviewIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"        this.editInterviewDescriptor \u003d new EditInterviewDescriptor(editInterviewDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        if (applicantIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicantToEdit \u003d lastShownList.get(applicantIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"        if (interviewIndex.getZeroBased() \u003e\u003d applicantToEdit.getInterviews().size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        Interview interviewToEdit \u003d applicantToEdit.getInterviews().get(interviewIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"        Interview editedInterview \u003d createEditedInterview(interviewToEdit, editInterviewDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"CelestineTan03"},"content":"        if (!interviewToEdit.getType().equals(editedInterview.getType())","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"CelestineTan03"},"content":"                \u0026\u0026 editedInterview.isContainedIn(applicantToEdit.getInterviews())) {","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"        applicantToEdit.deleteInterview(interviewToEdit);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"        applicantToEdit.addInterview(editedInterview);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"CelestineTan03"},"content":"        applicantToEdit.getScore().updateScoreAfterEdit(interviewToEdit, editedInterview);","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"        model.refreshApplicantList();","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INTERVIEW_SUCCESS, Messages.format(applicantToEdit)));","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"     * Creates and returns an {@code Interview} with the details of {@code interviewToEdit}","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"     * edited with {@code editInterviewDescriptor}.","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"    private static Interview createEditedInterview(","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"            Interview interviewToEdit, EditInterviewDescriptor editInterviewDescriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"        assert interviewToEdit !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"        String updatedType \u003d editInterviewDescriptor.getType().orElse(interviewToEdit.getType());","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"CelestineTan03"},"content":"        Rating updatedRating \u003d editInterviewDescriptor.getRating().orElse(interviewToEdit.getRating());","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"CelestineTan03"},"content":"        return new Interview(updatedType, updatedRating);","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"        if (!(other instanceof EditInterviewCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"        EditInterviewCommand otherEditCommand \u003d (EditInterviewCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"craigtonlian"},"content":"        return applicantIndex.equals(otherEditCommand.applicantIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 interviewIndex.equals(otherEditCommand.interviewIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 editInterviewDescriptor.equals(otherEditCommand.editInterviewDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"craigtonlian"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"craigtonlian"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"craigtonlian"},"content":"                .add(\"applicantIndex\", applicantIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"craigtonlian"},"content":"                .add(\"interviewIndex\", interviewIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"craigtonlian"},"content":"                .add(\"editInterviewDescriptor\", editInterviewDescriptor)","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"craigtonlian"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"craigtonlian"},"content":"     * Stores the details to edit the interview with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"craigtonlian"},"content":"     * corresponding field value of the interview.","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"craigtonlian"},"content":"    public static class EditInterviewDescriptor {","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"craigtonlian"},"content":"        private String type;","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"CelestineTan03"},"content":"        private Rating rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"craigtonlian"},"content":"        public EditInterviewDescriptor() {}","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"craigtonlian"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"craigtonlian"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"craigtonlian"},"content":"         * A defensive copy of {@code interviews} is used internally.","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"craigtonlian"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"craigtonlian"},"content":"        public EditInterviewDescriptor(EditInterviewDescriptor toCopy) {","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"craigtonlian"},"content":"            setType(toCopy.type);","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"CelestineTan03"},"content":"            setRating(toCopy.rating);","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"craigtonlian"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"craigtonlian"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"craigtonlian"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"craigtonlian"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"CelestineTan03"},"content":"            return CollectionUtil.isAnyNonNull(type, rating);","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"craigtonlian"},"content":"        public void setType(String type) {","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"craigtonlian"},"content":"            this.type \u003d type;","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"craigtonlian"},"content":"        public Optional\u003cString\u003e getType() {","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"craigtonlian"},"content":"            return Optional.ofNullable(type);","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"CelestineTan03"},"content":"        public void setRating(Rating rating) {","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"CelestineTan03"},"content":"            this.rating \u003d rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"CelestineTan03"},"content":"        public Optional\u003cRating\u003e getRating() {","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"CelestineTan03"},"content":"            return Optional.ofNullable(rating);","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"craigtonlian"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"craigtonlian"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"craigtonlian"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"craigtonlian"},"content":"                return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"craigtonlian"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"craigtonlian"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"craigtonlian"},"content":"            if (!(other instanceof EditInterviewDescriptor)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"craigtonlian"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"craigtonlian"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"craigtonlian"},"content":"            EditInterviewDescriptor otherEditInterviewDescriptor \u003d (EditInterviewDescriptor) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"CelestineTan03"},"content":"            return Objects.equals(type, otherEditInterviewDescriptor.type)","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"CelestineTan03"},"content":"                    \u0026\u0026 Objects.equals(rating, otherEditInterviewDescriptor.rating);","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"craigtonlian"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"craigtonlian"},"content":"        public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"craigtonlian"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"craigtonlian"},"content":"                    .add(\"type\", type)","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"CelestineTan03"},"content":"                    .add(\"rating\", rating)","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"craigtonlian"},"content":"                    .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"CelestineTan03":24,"craigtonlian":179}},{"path":"src/main/java/seedu/staffsnap/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Staff-Snap as requested ...\";","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"craigtonlian":3,"-":16}},{"path":"src/main/java/seedu/staffsnap/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_GREATER_THAN_SCORE;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_LESS_THAN_SCORE;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.CustomFilterPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":" * Finds and lists all applicants in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all applicants who match the descriptor.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Please add at least one field to filter by. \"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"            + \"Possible fields include:\" + \"\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"            + PREFIX_NAME + \" [NAME], \"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"            + PREFIX_EMAIL + \" [EMAIL], \"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"            + PREFIX_POSITION + \" [POSITION], \"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"            + PREFIX_PHONE + \" [PHONE], \"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"            + PREFIX_STATUS + \" [STATUS], \"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"            + PREFIX_LESS_THAN_SCORE + \" [SCORE], \"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"            + PREFIX_GREATER_THAN_SCORE + \" [SCORE]\";","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_SCORE_PARSE_FAILURE \u003d \"Score in lts/ or gts/ has to be a number with up to 1 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"            + \"decimal place\";","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"    private final CustomFilterPredicate predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"    public FilterCommand(CustomFilterPredicate predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"        model.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"                String.format(Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW, model.getFilteredApplicantList().size()));","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"     * Checks if the two FilterCommand objects are equivalent, by comparing the equivalence of their predicates.","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"     * @param other Other FilterCommand.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"     * @return true if equals, false if not equals.","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"        return predicate.equals(otherFilterCommand.predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ivanleekk":80}},{"path":"src/main/java/seedu/staffsnap/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":" * Finds and lists all applicants in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all applicants whose names contain any of \"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"            + \"Expected outcome: Returns a list of applicants whose name contains any of the words \"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"            + \"\\\"alice\\\", \\\"bob\\\", or \\\"charlie\\\"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        model.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"                String.format(Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW, model.getFilteredApplicantList().size()));","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"    /**","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"     * Checks if the applicant exists.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"     * @param other Other applicant.","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"     * @return true if equals, false if not equals.","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"     */","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"craigtonlian":11,"jingting1412":7,"-":47}},{"path":"src/main/java/seedu/staffsnap/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_SHOW_HELP \u003d \"Here are a few basic commands to get you started.\"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"AustinHuang1203"},"content":"            + \"\\nAdd\"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"AustinHuang1203"},"content":"            + \"\\nEdit\"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"AustinHuang1203"},"content":"            + \"\\nList\"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"AustinHuang1203"},"content":"            + \"\\nDelete\"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"AustinHuang1203"},"content":"            + \"\\nFind\"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"AustinHuang1203"},"content":"            + \"\\nSort\"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"AustinHuang1203"},"content":"            + \"\\nClear\"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"AustinHuang1203"},"content":"            + \"\\nExit\"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"AustinHuang1203"},"content":"            + \"\\nFilter\";","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        return new CommandResult(MESSAGE_SHOW_HELP, true, false);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AustinHuang1203":9,"craigtonlian":4,"-":16}},{"path":"src/main/java/seedu/staffsnap/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_FILENAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.CsvApplicantParser;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":" * Imports applicants from a CSV file and adds them to the applicant book.","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports applicants from a CSV file.\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_FILENAME + \"FILENAME\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_FILENAME + \"applicants.csv\";","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_SUCCESS_SINGULAR \u003d \"Imported %d applicant from %s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_SUCCESS_PLURAL \u003d \"Imported %d applicants from %s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_INVALID_CSV_FORMAT \u003d \"The csv file has an invalid format!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_INVALID_FILENAME \u003d \"The file name provided is not a valid csv file!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"The csv file contains an applicant \"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"            + \"already in Staff-Snap: %s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_CSV_CONTAINS_DUPLICATE \u003d \"The csv file contains duplicate applicants: %s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"File not found: %s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    public static final String FILENAME_VALIDATION_REGEX \u003d \"[-_. A-Za-z0-9]+\\\\.csv\";","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    private final String fileName;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    public ImportCommand(String fileName) {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e applicantsToImport;","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"            applicantsToImport \u003d CsvApplicantParser.parse(fileName);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(String.format(MESSAGE_FILE_NOT_FOUND, fileName));","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(MESSAGE_INVALID_CSV_FORMAT);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        // checks if the csv file contains duplicate applicants","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        if (containsDuplicates(applicantsToImport)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"            Applicant duplicateApplicantInCsv \u003d getDuplicateApplicantInCsv(applicantsToImport);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(String.format(MESSAGE_CSV_CONTAINS_DUPLICATE,","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"                    Messages.format(duplicateApplicantInCsv)));","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"        // checks if the csv file contains applicants already in Staff-Snap","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"        if (hasDuplicateApplicants(applicantsToImport, model)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"            Applicant duplicateApplicantInModel \u003d getDuplicateApplicantInModel(applicantsToImport, model);","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_APPLICANT,","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"                    Messages.format(duplicateApplicantInModel)));","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"        for (Applicant applicant : applicantsToImport) {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"            model.addApplicant(applicant);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"                applicantsToImport.size() \u003d\u003d 1 ? MESSAGE_SUCCESS_SINGULAR : MESSAGE_SUCCESS_PLURAL,","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"                applicantsToImport.size(),","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"                fileName));","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"    private boolean containsDuplicates(List\u003cApplicant\u003e applicantsToImport) {","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"        return applicantsToImport.stream().anyMatch(applicant -\u003e applicantsToImport.stream()","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"                .filter(applicant::isSameApplicant).count() \u003e 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"    private boolean hasDuplicateApplicants(List\u003cApplicant\u003e applicantsToImport, Model model) {","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"        return applicantsToImport.stream().anyMatch(model::hasApplicant);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"    private Applicant getDuplicateApplicantInCsv(List\u003cApplicant\u003e applicantsToImport) {","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"        return applicantsToImport.stream().filter(applicant -\u003e applicantsToImport.stream()","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"                .filter(applicant::isSameApplicant).count() \u003e 1).findFirst().get();","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"    private Applicant getDuplicateApplicantInModel(List\u003cApplicant\u003e applicantsToImport, Model model) {","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"        return applicantsToImport.stream().filter(model::hasApplicant).findFirst().get();","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"craigtonlian":95}},{"path":"src/main/java/seedu/staffsnap/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":" * Lists all applicants in the applicant book to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all applicants\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":6,"-":18}},{"path":"src/main/java/seedu/staffsnap/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_DESCRIPTOR;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":" * Sorts all Applicants in the address book to the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorted all Applicants. \"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"            + PREFIX_DESCRIPTOR + \"DESCRIPTOR \";","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all Applicants\";","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Please add a descriptor with d/ \"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"            + \"[name/phone/score/status/email/position].\";","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    private final Descriptor descriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"    private final Boolean isDescendingOrder;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"     * Creates a SortCommand to add the specified {@code descriptor}","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"    public SortCommand(Descriptor descriptor, Boolean isDescendingOrder) {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"        this.descriptor \u003d descriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"        if (isDescendingOrder \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"            this.isDescendingOrder \u003d false;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"            this.isDescendingOrder \u003d isDescendingOrder;","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"        model.updateSortedApplicantList(descriptor, isDescendingOrder);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"        model.refreshApplicantList();","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"        SortCommand that \u003d (SortCommand) o;","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"        return descriptor \u003d\u003d that.descriptor \u0026\u0026 Objects.equals(isDescendingOrder, that.isDescendingOrder);","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"        return Objects.hash(descriptor, isDescendingOrder);","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ivanleekk":68}},{"path":"src/main/java/seedu/staffsnap/logic/commands/StatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":" * Edits the details of an existing applicant in the applicant book.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"public class StatusCommand extends Command {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    public static final String COMMAND_WORD \u003d \"status\";","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the status of the applicant identified \"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"            + \"by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"            + \"Parameters: INDEX (must be a positive integer) \" + \"s/ [u(ndecided)/o(ffered)/r(ejected)].\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_EDIT_STATUS_SUCCESS \u003d \"Edited Applicant Status: %1$s\";","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_NO_STATUS \u003d \"Missing Status, please follow the following parameters.\"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"            + \"s/ [u(ndecided)/o(ffered)/r(ejected)].\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_NO_INDEX \u003d \"Missing Index, please follow the following parameters.\"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"            + \"s/ [u(ndecided)/o(ffered)/r(ejected)].\";","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"    private final Index index;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"    private final Status status;","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"     * @param index  of the applicant in the filtered applicant list to edit","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"     * @param status The status to assign to the applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"    public StatusCommand(Index index, Status status) {","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"        applicantToEdit.setStatus(this.status);","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"        model.refreshApplicantList();","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STATUS_SUCCESS, Messages.format(applicantToEdit)));","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"    public Index getIndex() {","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"        return index;","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"        return status;","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"        if (!(other instanceof StatusCommand)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"        StatusCommand otherStatusCommand \u003d (StatusCommand) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"        return index.equals(otherStatusCommand.index) \u0026\u0026 status.equals(otherStatusCommand.status);","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"        return new ToStringBuilder(this).add(\"index\", index).add(\"status\", status).toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"ivanleekk":96}},{"path":"src/main/java/seedu/staffsnap/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands.exceptions;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":" * Represents an error which occurs during execution of a Command.","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"craigtonlian":1,"jingting1412":1,"-":15}},{"path":"src/main/java/seedu/staffsnap/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.AddCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.applicant.Score;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"                        PREFIX_POSITION);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_POSITION, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSITION);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        Position position \u003d ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        List\u003cInterview\u003e interviewList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"        Status status \u003d Status.UNDECIDED;","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"        Score score \u003d new Score(interviewList);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"        Applicant applicant \u003d new Applicant(name, phone, email, position, interviewList, status, score);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        return new AddCommand(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"CelestineTan03":3,"craigtonlian":25,"-":27,"ivanleekk":2}},{"path":"src/main/java/seedu/staffsnap/logic/parser/AddInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":" * Parses input arguments and creates a new AddInterviewCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"public class AddInterviewCommandParser implements Parser\u003cAddInterviewCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"     * Parses the given {@code String} of arguments in the context of the AddInterviewCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"     * and returns an AddInterviewCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    public AddInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_RATING);","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInterviewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TYPE, PREFIX_RATING);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        String type \u003d ParserUtil.parseType(argMultimap.getValue(PREFIX_TYPE).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"        Rating rating \u003d new Rating(\"-\");","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"        if (argMultimap.getValue(PREFIX_RATING).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"            rating \u003d ParserUtil.parseRating(argMultimap.getValue(PREFIX_RATING).get());","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"        Interview interview \u003d new Interview(type, rating);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        return new AddInterviewCommand(index, interview);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"CelestineTan03":11,"craigtonlian":43}},{"path":"src/main/java/seedu/staffsnap/logic/parser/ApplicantBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.AddCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.ConfirmationCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.DeleteInterviewCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.EditCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditInterviewCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.FindCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.ImportCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.ListCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.SortCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.StatusCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantBookParser {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"AustinHuang1203"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"AustinHuang1203"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ApplicantBookParser.class);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    private Boolean isConfirmedNext \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"    private Boolean isConfirmed \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"        isConfirmed \u003d isConfirmedNext;","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"        isConfirmedNext \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"AustinHuang1203"},"content":"        if (isConfirmed) {","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"AustinHuang1203"},"content":"            return new ClearCommandParser().parse(commandWord.toLowerCase());","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"AustinHuang1203"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"        switch (commandWord.toLowerCase()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"AustinHuang1203"},"content":"        case ConfirmationCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"            isConfirmedNext \u003d true;","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"AustinHuang1203"},"content":"            return new ConfirmationCommand();","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"        case AddInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"            return new AddInterviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"        case EditInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"            return new EditInterviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"        case DeleteInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"            return new DeleteInterviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"ivanleekk"},"content":"        case StatusCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"ivanleekk"},"content":"            return new StatusCommandParser().parse(arguments);","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"            return new ImportCommandParser().parse(arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AustinHuang1203":19,"craigtonlian":28,"-":65,"ivanleekk":14}},{"path":"src/main/java/seedu/staffsnap/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"craigtonlian":3,"-":75}},{"path":"src/main/java/seedu/staffsnap/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"craigtonlian":1,"-":147}},{"path":"src/main/java/seedu/staffsnap/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AustinHuang1203"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"AustinHuang1203"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"AustinHuang1203"},"content":" * Parser for clearCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"AustinHuang1203"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"AustinHuang1203"},"content":"public class ClearCommandParser {","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"AustinHuang1203"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"AustinHuang1203"},"content":"     * Returns the clearcommand with the user input processed","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"AustinHuang1203"},"content":"     * @param args user input","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"AustinHuang1203"},"content":"     * @return ClearCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"AustinHuang1203"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"AustinHuang1203"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"AustinHuang1203"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"AustinHuang1203"},"content":"        return new ClearCommand(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"AustinHuang1203"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"AustinHuang1203"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"AustinHuang1203":21}},{"path":"src/main/java/seedu/staffsnap/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"hp/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"    public static final Prefix PREFIX_DESCRIPTOR \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"    public static final Prefix PREFIX_INTERVIEW \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"    public static final Prefix PREFIX_TYPE \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    public static final Prefix PREFIX_RATING \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    public static final Prefix PREFIX_LESS_THAN_SCORE \u003d new Prefix(\"lts/\");","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    public static final Prefix PREFIX_GREATER_THAN_SCORE \u003d new Prefix(\"gts/\");","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    public static final Prefix PREFIX_FILENAME \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    public static final Prefix PREFIX_ASCENDING \u003d new Prefix(\"asc/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    public static final Prefix PREFIX_DESCENDING \u003d new Prefix(\"dsc/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"CelestineTan03":1,"craigtonlian":7,"-":10,"ivanleekk":7}},{"path":"src/main/java/seedu/staffsnap/logic/parser/CsvApplicantParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import com.opencsv.CSVReader;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import com.opencsv.CSVReaderBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import com.opencsv.bean.CsvToBeanBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.CsvApplicant;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":" * Parses input arguments and creates a new ImportCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"public class CsvApplicantParser {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"     * Parses the given {@code String} of arguments in the context of the ImportCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"     * and returns an ImportCommand object for execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"    public static List\u003cApplicant\u003e parse(String fileName) throws ParseException, IOException {","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"        List\u003cCsvApplicant\u003e csvApplicants;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e applicantsToImport \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        try (CSVReader reader \u003d new CSVReaderBuilder(new FileReader(fileName)).withSkipLines(1).build()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"            csvApplicants \u003d new CsvToBeanBuilder\u003cCsvApplicant\u003e(reader)","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"                    .withType(CsvApplicant.class)","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"                    .build()","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"                    .parse();","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"            throw new IOException();","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"        for (CsvApplicant csvApplicant : csvApplicants) {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"            applicantsToImport.add(ParserUtil.parseApplicantFromCsv(csvApplicant));","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        return applicantsToImport;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"craigtonlian":44}},{"path":"src/main/java/seedu/staffsnap/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"craigtonlian":5,"-":23}},{"path":"src/main/java/seedu/staffsnap/logic/parser/DeleteInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.DeleteInterviewCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":" * Parses input arguments and creates a new DeleteInterviewCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"public class DeleteInterviewCommandParser implements Parser\u003cDeleteInterviewCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteInterviewCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"     * and returns a DeleteInterviewCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    public DeleteInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INTERVIEW);","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        Index applicantIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        Index interviewIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"            applicantIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteInterviewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INTERVIEW)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        interviewIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INTERVIEW).get());","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_INTERVIEW);","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        return new DeleteInterviewCommand(applicantIndex, interviewIndex);","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"craigtonlian":49}},{"path":"src/main/java/seedu/staffsnap/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSITION);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSITION);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"            editApplicantDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"            editApplicantDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"            editApplicantDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        if (argMultimap.getValue(PREFIX_POSITION).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"            editApplicantDescriptor.setPosition(ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        if (!editApplicantDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"        return new EditCommand(index, editApplicantDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"craigtonlian":21,"-":40}},{"path":"src/main/java/seedu/staffsnap/logic/parser/EditInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditInterviewCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditInterviewCommand.EditInterviewDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":" * Parses input arguments and creates a new EditInterviewCommand object.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"public class EditInterviewCommandParser implements Parser\u003cEditInterviewCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"     * Parses the given {@code String} of arguments in the context of the EditInterviewCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"     * and returns an EditInterviewCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    public EditInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INTERVIEW, PREFIX_TYPE, PREFIX_RATING);","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        Index applicantIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        Index interviewIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"            applicantIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"            interviewIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INTERVIEW).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditInterviewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"        } catch (NoSuchElementException ex) {","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditInterviewCommand.MESSAGE_USAGE), ex);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_INTERVIEW, PREFIX_TYPE, PREFIX_RATING);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        EditInterviewDescriptor editInterviewDescriptor \u003d new EditInterviewDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        if (argMultimap.getValue(PREFIX_TYPE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"            editInterviewDescriptor.setType(ParserUtil.parseType(argMultimap.getValue(PREFIX_TYPE).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"        if (argMultimap.getValue(PREFIX_RATING).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"            editInterviewDescriptor.setRating(ParserUtil.parseRating(argMultimap.getValue(PREFIX_RATING).get()));","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        if (!editInterviewDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(EditInterviewCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"        return new EditInterviewCommand(applicantIndex, interviewIndex, editInterviewDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"CelestineTan03":12,"craigtonlian":49}},{"path":"src/main/java/seedu/staffsnap/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_GREATER_THAN_SCORE;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_LESS_THAN_SCORE;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.CustomFilterPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_FAILURE));","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"                        PREFIX_POSITION, PREFIX_INTERVIEW, PREFIX_STATUS, PREFIX_LESS_THAN_SCORE,","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"                        PREFIX_GREATER_THAN_SCORE);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"        Name name \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"        Phone phone \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"        Email email \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"        Position position \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"        List\u003cInterview\u003e interviewList \u003d null;","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"        Status status \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"        Double lessThanScore \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"        Double greaterThanScore \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSITION,","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"                PREFIX_STATUS, PREFIX_LESS_THAN_SCORE, PREFIX_GREATER_THAN_SCORE);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_POSITION).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"            position \u003d ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_INTERVIEW).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"            interviewList \u003d ParserUtil.parseInterviews(argMultimap.getAllValues(PREFIX_INTERVIEW));","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"            status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_LESS_THAN_SCORE).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"            lessThanScore \u003d ParserUtil.parseScore(argMultimap.getValue(PREFIX_LESS_THAN_SCORE).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_GREATER_THAN_SCORE).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"            greaterThanScore \u003d ParserUtil.parseScore(argMultimap.getValue(PREFIX_GREATER_THAN_SCORE).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"        return new FilterCommand(new CustomFilterPredicate(name, phone, email, position, interviewList, status,","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"                lessThanScore, greaterThanScore));","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ivanleekk":86}},{"path":"src/main/java/seedu/staffsnap/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.FindCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"craigtonlian":5,"-":28}},{"path":"src/main/java/seedu/staffsnap/logic/parser/ImportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_FILENAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.ImportCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":" * Parses input arguments and creates a new ImportCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"public class ImportCommandParser implements Parser\u003cImportCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"     * Parses the given {@code String} of arguments in the context of the ImportCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"     * and returns an ImportCommand object for execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"    public ImportCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FILENAME);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_FILENAME)","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_FILENAME);","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        String fileName \u003d ParserUtil.parseFileName(argMultimap.getValue(PREFIX_FILENAME).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        return new ImportCommand(fileName);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"craigtonlian":33}},{"path":"src/main/java/seedu/staffsnap/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.Command;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"craigtonlian":3,"-":13}},{"path":"src/main/java/seedu/staffsnap/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.StringUtil;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.ImportCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.CsvApplicant;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Score;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"     * Capitalizes the first letter of each word.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"     * @return the new content with the first letter of each word capitalized.","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"    public static String standardizeCapitalization(String content) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"        String[] tokens \u003d content.split(\" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"        StringBuilder newContent \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"        for (String token : tokens) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"            if (token.isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"                continue;","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"            char capLetter \u003d Character.toUpperCase(token.charAt(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"            newContent.append(\" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"            newContent.append(capLetter);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"            newContent.append(token.substring(1).toLowerCase());","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"        return newContent.toString().trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"CelestineTan03"},"content":"        trimmedName \u003d standardizeCapitalization(trimmedName);","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"     * Parses a {@code String position} into an {@code Position}.","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the given {@code position} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"    public static Position parsePosition(String position) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(position);","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"craigtonlian"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"        if (!Position.isValidPosition(trimmedPosition)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"CelestineTan03"},"content":"        trimmedPosition \u003d standardizeCapitalization(trimmedPosition);","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"craigtonlian"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"craigtonlian"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"CelestineTan03"},"content":"        return new Email(trimmedEmail.toLowerCase());","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"CelestineTan03"},"content":"     * Parses a {@code String type} and {@code String rating} into a {@code Interview}.","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the given {@code interview} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"CelestineTan03"},"content":"    public static Interview parseInterview(String type, String rating) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"CelestineTan03"},"content":"        requireNonNull(type, rating);","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"CelestineTan03"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"CelestineTan03"},"content":"        String trimmedRating \u003d rating.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"CelestineTan03"},"content":"        Rating ratingValue \u003d new Rating(trimmedRating);","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"CelestineTan03"},"content":"        if (!Interview.isValidType(trimmedType)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(Interview.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"CelestineTan03"},"content":"        if (!Rating.isValidRating(trimmedRating)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"CelestineTan03"},"content":"            throw new ParseException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"CelestineTan03"},"content":"        return new Interview(trimmedType, ratingValue);","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"craigtonlian"},"content":"     * Parses {@code Collection\u003cString\u003e interviews} into a {@code List\u003cInterview\u003e}.","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"craigtonlian"},"content":"    public static List\u003cInterview\u003e parseInterviews(Collection\u003cString\u003e interviews) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(interviews);","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"craigtonlian"},"content":"        final List\u003cInterview\u003e interviewList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"craigtonlian"},"content":"        for (String interviewType : interviews) {","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"CelestineTan03"},"content":"            interviewList.add(parseInterview(interviewType, \"-\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"craigtonlian"},"content":"        return interviewList;","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"ivanleekk"},"content":"     * Parses a {@code String descriptor} into a {@code Name}.","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"ivanleekk"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"ivanleekk"},"content":"     * Case-insensitive","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"ivanleekk"},"content":"     * @throws ParseException if the given {@code descriptor} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"ivanleekk"},"content":"    public static Descriptor parseDescriptor(String descriptor) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"ivanleekk"},"content":"        String trimmedDescriptor \u003d descriptor.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"ivanleekk"},"content":"        Descriptor result \u003d Descriptor.findByName(trimmedDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"ivanleekk"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"ivanleekk"},"content":"            throw new ParseException(Descriptor.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"ivanleekk"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"craigtonlian"},"content":"     * Parses a {@code String type} into a {@code String}.","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"craigtonlian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"craigtonlian"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the given {@code type} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"craigtonlian"},"content":"    public static String parseType(String type) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(type);","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"craigtonlian"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"craigtonlian"},"content":"        if (!Interview.isValidType(trimmedType)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(Interview.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"craigtonlian"},"content":"        return trimmedType.toLowerCase();","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"CelestineTan03"},"content":"     * Parses a {@code String rating} into a {@code Rating}.","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"CelestineTan03"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"CelestineTan03"},"content":"     * @throws ParseException if the given {@code rating} is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"CelestineTan03"},"content":"    public static Rating parseRating(String rating) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"CelestineTan03"},"content":"        requireNonNull(rating);","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"CelestineTan03"},"content":"        String trimmedRating \u003d rating.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"CelestineTan03"},"content":"        Double ratingValue;","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"CelestineTan03"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"CelestineTan03"},"content":"            ratingValue \u003d Double.parseDouble(trimmedRating);","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"CelestineTan03"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"CelestineTan03"},"content":"            throw new ParseException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"CelestineTan03"},"content":"        String ratingString \u003d String.format(\"%.1f\", ratingValue);","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"CelestineTan03"},"content":"        if (!Rating.isValidRating(ratingString)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"CelestineTan03"},"content":"            throw new ParseException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"CelestineTan03"},"content":"        return new Rating(ratingString);","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"craigtonlian"},"content":"     * Checks if all prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"craigtonlian"},"content":"     * @param argumentMultimap","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"craigtonlian"},"content":"     * @param prefixes","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"craigtonlian"},"content":"     * @return true if all prefixes are present, false otherwise","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"CelestineTan03"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"CelestineTan03"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"ivanleekk"},"content":"     * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"ivanleekk"},"content":"     * @param status String representation of Status","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"ivanleekk"},"content":"     * @return Status if successful, or null if no matching status is found.","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"ivanleekk"},"content":"    public static Status parseStatus(String status) {","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"ivanleekk"},"content":"        return Status.findByName(status);","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"ivanleekk"},"content":"     * Parses a {@code String score} into a {@code Double}.","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"ivanleekk"},"content":"     * @param score String representation of score","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"ivanleekk"},"content":"     * @return Double score which is the average rating of all interviews","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"ivanleekk"},"content":"     * @throws ParseException if a NumberFormatException is caught","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"ivanleekk"},"content":"    public static Double parseScore(String score) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"ivanleekk"},"content":"        requireNonNull(score);","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"ivanleekk"},"content":"        Double result;","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"craigtonlian"},"content":"            result \u003d Double.parseDouble(score);","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"ivanleekk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"ivanleekk"},"content":"            throw new ParseException(FilterCommand.MESSAGE_SCORE_PARSE_FAILURE);","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"ivanleekk"},"content":"        return result;","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"craigtonlian"},"content":"     * Parses a {@code String fileName} into a {@code String}.","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"craigtonlian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"craigtonlian"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the given {@code fileName} is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"craigtonlian"},"content":"    public static String parseFileName(String fileName) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(fileName);","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"craigtonlian"},"content":"        String trimmedFileName \u003d fileName.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"craigtonlian"},"content":"        if (!trimmedFileName.matches(ImportCommand.FILENAME_VALIDATION_REGEX)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"craigtonlian"},"content":"            throw new ParseException(ImportCommand.MESSAGE_INVALID_FILENAME);","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"craigtonlian"},"content":"        return trimmedFileName;","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"craigtonlian"},"content":"     * Parses a {@code CsvApplicant csvApplicant} into a {@code Applicant}.","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"craigtonlian"},"content":"     * Interviews and status will be given default values.","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"craigtonlian"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"craigtonlian"},"content":"     * @throws ParseException if the given {@code csvApplicant} is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"craigtonlian"},"content":"    public static Applicant parseApplicantFromCsv(CsvApplicant csvApplicant) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"craigtonlian"},"content":"        Name name \u003d ParserUtil.parseName(csvApplicant.getName());","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"craigtonlian"},"content":"        Phone phone \u003d ParserUtil.parsePhone(csvApplicant.getPhone());","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"craigtonlian"},"content":"        Email email \u003d ParserUtil.parseEmail(csvApplicant.getEmail());","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"craigtonlian"},"content":"        Position position \u003d ParserUtil.parsePosition(csvApplicant.getPosition());","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"craigtonlian"},"content":"        List\u003cInterview\u003e interviewList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":284,"author":{"gitId":"craigtonlian"},"content":"        Status status \u003d Status.UNDECIDED;","lastModifiedDate":"2023-10-28"},{"lineNumber":285,"author":{"gitId":"craigtonlian"},"content":"        Score score \u003d new Score(interviewList);","lastModifiedDate":"2023-10-28"},{"lineNumber":286,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":287,"author":{"gitId":"craigtonlian"},"content":"        return new Applicant(name, phone, email, position, interviewList, status, score);","lastModifiedDate":"2023-10-28"},{"lineNumber":288,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"CelestineTan03":63,"craigtonlian":96,"-":82,"ivanleekk":48}},{"path":"src/main/java/seedu/staffsnap/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"craigtonlian":1,"-":41}},{"path":"src/main/java/seedu/staffsnap/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_ASCENDING;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_DESCENDING;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_DESCRIPTOR;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.SortCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTOR, PREFIX_ASCENDING, PREFIX_DESCENDING);","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTOR)","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_FAILURE));","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DESCRIPTOR);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"        Descriptor descriptor \u003d ParserUtil.parseDescriptor(argMultimap.getValue(PREFIX_DESCRIPTOR).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"        // default behaviour is to sort in ascending order if none are specified, or if both are specified","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"        boolean isDescendingOrder \u003d false;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_DESCENDING).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"            isDescendingOrder \u003d true;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_ASCENDING).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"            isDescendingOrder \u003d false;","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"        return new SortCommand(descriptor, isDescendingOrder);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"craigtonlian":1,"ivanleekk":45}},{"path":"src/main/java/seedu/staffsnap/logic/parser/StatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.StatusCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":" * Parses inputs and returns a StatusCommand","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"public class StatusCommandParser implements Parser\u003cStatusCommand\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    public StatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STATUS);","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"        Index index \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"        Status status \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_NO_INDEX));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"            status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_NO_STATUS));","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"        return new StatusCommand(index, status);","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"ivanleekk":46}},{"path":"src/main/java/seedu/staffsnap/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser.exceptions;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"craigtonlian":2,"-":15}},{"path":"src/main/java/seedu/staffsnap/model/ApplicantBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.UniqueApplicantList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":" * Duplicates are not allowed (by .isSameApplicant comparison)","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantBook implements ReadOnlyApplicantBook {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"    private final UniqueApplicantList applicants;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        applicants \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBook() {}","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"     * Creates an ApplicantBook using the Applicants in the {@code toBeCopied}","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBook(ReadOnlyApplicantBook toBeCopied) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"     * Replaces the contents of the applicant list with {@code applicants}.","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        this.applicants.setApplicants(applicants);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"     * Resets the existing data of this {@code ApplicantBook} with {@code newData}.","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"    public void resetData(ReadOnlyApplicantBook newData) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"        setApplicants(newData.getApplicantList());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"    //// applicant-level operations","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"     * Returns true if a applicant with the same identity as {@code applicant} exists in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"        return applicants.contains(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"     * Returns true if there are more than one applicant with the same identity as {@code applicant}","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"    public boolean isDuplicateApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"        return applicants.numberOfDuplicates(applicant) \u003e 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"     * Adds an applicant to the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"     * The applicant must not already exist in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"    public void addApplicant(Applicant e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"        applicants.add(e);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"     * Replaces the given applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"     * {@code target} must exist in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"     * applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(editedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"        applicants.setApplicant(target, editedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"     * Removes {@code key} from this {@code ApplicantBook}.","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"     * {@code key} must exist in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"    public void removeApplicant(Applicant key) {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"        applicants.remove(key);","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"                .add(\"applicants\", applicants)","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"    public ObservableList\u003cApplicant\u003e getApplicantList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"        return applicants.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"craigtonlian"},"content":"        if (!(other instanceof ApplicantBook)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook otherApplicantBook \u003d (ApplicantBook) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"craigtonlian"},"content":"        return applicants.equals(otherApplicantBook.applicants);","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"craigtonlian"},"content":"        return applicants.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CelestineTan03":8,"craigtonlian":45,"-":86}},{"path":"src/main/java/seedu/staffsnap/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"    Predicate\u003cApplicant\u003e PREDICATE_SHOW_ALL_APPLICANTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    /** {@code Predicate} that always evaluate to false */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    Predicate\u003cApplicant\u003e PREDICATE_HIDE_ALL_APPLICANTS \u003d unused -\u003e false;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"     * Returns the user prefs\u0027 applicant book file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"     * Sets the user prefs\u0027 applicant book file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"    void setApplicantBookFilePath(Path applicantBookFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"     * Replaces applicant book data with the data in {@code applicantBook}.","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"    void setApplicantBook(ReadOnlyApplicantBook applicantBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"    /** Returns the ApplicantBook */","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"    ReadOnlyApplicantBook getApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"     * Returns true if an applicant with the same identity as {@code applicant} exists in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"    boolean hasApplicant(Applicant applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"     * Returns true if an applicant with the same identity as {@code applicant} exists in the applicant book","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"     * and they are not the same applicant.","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"    boolean isDuplicateApplicant(Applicant applicant);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"     * Deletes the given applicant.","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"     * The applicant must exist in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"    void deleteApplicant(Applicant target);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"     * Adds the given applicant.","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"     * {@code applicant} must not already exist in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"    void addApplicant(Applicant applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"     * Replaces the given applicant {@code target} with {@code editedApplicant}.","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"     * {@code target} must exist in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"     * applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"    void setApplicant(Applicant target, Applicant editedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"    /** Returns an unmodifiable view of the filtered applicant list */","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"     * Updates the filter of the filtered applicant list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"CelestineTan03"},"content":"    void updateFilteredApplicantList(Predicate\u003c? super Applicant\u003e predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"     * Updates the Descriptor for sorting Applicants.","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"    void updateSortedApplicantList(Descriptor descriptor, Boolean descendingOrder);","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"     * Refreshes the applicant list and keeps the same predicate","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"    void refreshApplicantList();","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"CelestineTan03":7,"craigtonlian":28,"-":58,"ivanleekk":13}},{"path":"src/main/java/seedu/staffsnap/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":" * Represents the in-memory model of the applicant book data.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    private final ApplicantBook applicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    private final FilteredList\u003cApplicant\u003e filteredApplicants;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"     * Initializes a ModelManager with the given applicantBook and userPrefs.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    public ModelManager(ReadOnlyApplicantBook applicantBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        requireAllNonNull(applicantBook, userPrefs);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        logger.fine(\"Initializing with applicant book: \" + applicantBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"        this.applicantBook \u003d new ApplicantBook(applicantBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.applicantBook.getApplicantList());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        this(new ApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        return userPrefs.getApplicantBookFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicantBookFilePath(Path applicantBookFilePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(applicantBookFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"        userPrefs.setApplicantBookFilePath(applicantBookFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ApplicantBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicantBook(ReadOnlyApplicantBook applicantBook) {","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"        this.applicantBook.resetData(applicantBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"    public ReadOnlyApplicantBook getApplicantBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"        return applicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"        return applicantBook.hasApplicant(applicant);","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"CelestineTan03"},"content":"    public boolean isDuplicateApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"CelestineTan03"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"CelestineTan03"},"content":"        return applicantBook.isDuplicateApplicant(applicant);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"    public void deleteApplicant(Applicant target) {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"        applicantBook.removeApplicant(target);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"    public void addApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"        applicantBook.addApplicant(applicant);","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"        updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"        applicantBook.setApplicant(target, editedApplicant);","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Applicant List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"craigtonlian"},"content":"     * Returns an unmodifiable view of the list of {@code Applicant} backed by the internal list of","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"craigtonlian"},"content":"     * {@code versionedApplicantBook}","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"craigtonlian"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ivanleekk"},"content":"        return new SortedList\u003c\u003e(filteredApplicants).sorted();","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"CelestineTan03"},"content":"    public void updateFilteredApplicantList(Predicate\u003c? super Applicant\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"craigtonlian"},"content":"        filteredApplicants.setPredicate(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"ivanleekk"},"content":"    public void updateSortedApplicantList(Descriptor descriptor, Boolean descendingOrder) {","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setDescriptor(descriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(descendingOrder);","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"craigtonlian"},"content":"        return applicantBook.equals(otherModelManager.applicantBook)","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 filteredApplicants.equals(otherModelManager.filteredApplicants);","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"ivanleekk"},"content":"     * Refreshes the applicant list with the same predicate","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"ivanleekk"},"content":"    public void refreshApplicantList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"CelestineTan03"},"content":"        Predicate\u003c? super Applicant\u003e predicate \u003d filteredApplicants.getPredicate();","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"ivanleekk"},"content":"        if (predicate \u003d\u003d null) {","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"ivanleekk"},"content":"            predicate \u003d PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"ivanleekk"},"content":"        updateFilteredApplicantList(PREDICATE_HIDE_ALL_APPLICANTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"ivanleekk"},"content":"        updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"ivanleekk"},"content":"        updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CelestineTan03":8,"craigtonlian":43,"-":103,"ivanleekk":21}},{"path":"src/main/java/seedu/staffsnap/model/ReadOnlyApplicantBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":" * Unmodifiable view of an applicant book","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"public interface ReadOnlyApplicantBook {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"    ObservableList\u003cApplicant\u003e getApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":5,"-":12}},{"path":"src/main/java/seedu/staffsnap/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"craigtonlian":3,"-":13}},{"path":"src/main/java/seedu/staffsnap/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    private Path applicantBookFilePath \u003d Paths.get(\"data\" , \"applicantBook.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"        setApplicantBookFilePath(newUserPrefs.getApplicantBookFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        return applicantBookFilePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicantBookFilePath(Path applicantBookFilePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(applicantBookFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        this.applicantBookFilePath \u003d applicantBookFilePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 applicantBookFilePath.equals(otherUserPrefs.applicantBookFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"        return Objects.hash(guiSettings, applicantBookFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"        sb.append(\"\\nLocal data file location : \" + applicantBookFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":12,"-":76}},{"path":"src/main/java/seedu/staffsnap/model/applicant/Applicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":" * Represents an Applicant in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"public class Applicant implements Comparable\u003cApplicant\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    // Field to compare by, default to Name","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    private static Descriptor descriptor \u003d Descriptor.NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    // Order of comparision, default to ascending","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    private static Boolean isDescendingOrder \u003d false;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    private final Phone phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    private final Email email;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    private final Position position;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    private final List\u003cInterview\u003e interviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"    private Status status;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"    private final Score score;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"    public Applicant(Name name, Phone phone, Email email, Position position, List\u003cInterview\u003e interviews,","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"                     Status status, Score score) {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        requireAllNonNull(name, phone, email, position, interviews);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        this.interviews.addAll(interviews);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        Collections.sort(this.interviews);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"        this.status \u003d Objects.requireNonNullElse(status, Status.UNDECIDED);","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"        if (score \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"            this.score \u003d new Score(0, 0, 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"            this.score \u003d new Score(score);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"        return email;","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"    public Position getPosition() {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"        return position;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"    public Score getScore() {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"        return score;","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"     * Returns an immutable interview list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"    public List\u003cInterview\u003e getInterviews() {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        return Collections.unmodifiableList(interviews);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"CelestineTan03"},"content":"     * Returns true if both applicants have the same email or phone number.","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"     * This defines a weaker notion of equality between two applicants.","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"    public boolean isSameApplicant(Applicant otherApplicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"        if (otherApplicant \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"        return otherApplicant !\u003d null","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"CelestineTan03"},"content":"                \u0026\u0026 (otherApplicant.getEmail().equals(getEmail())","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"CelestineTan03"},"content":"                || otherApplicant.getPhone().equals(getPhone()));","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"     * Returns true if both applicants have the same identity and data fields.","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"     * This defines a stronger notion of equality between two applicants.","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"        if (!(other instanceof Applicant)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"        Applicant otherApplicant \u003d (Applicant) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"        return name.equals(otherApplicant.name)","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 phone.equals(otherApplicant.phone)","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 email.equals(otherApplicant.email)","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 position.equals(otherApplicant.position)","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"                \u0026\u0026 interviews.equals(otherApplicant.interviews)","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"                \u0026\u0026 status.equals(otherApplicant.status);","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"ivanleekk"},"content":"        return Objects.hash(name, phone, email, position, interviews, status);","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"craigtonlian"},"content":"                .add(\"email\", email)","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"craigtonlian"},"content":"                .add(\"position\", position)","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"craigtonlian"},"content":"                .add(\"interviews\", interviews)","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"ivanleekk"},"content":"                .add(\"status\", status)","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"ivanleekk"},"content":"     * Update the descriptor for all Applicants.","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"ivanleekk"},"content":"     * @param newDescriptor the new descriptor to sort Applicants by","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"ivanleekk"},"content":"    public static void setDescriptor(Descriptor newDescriptor) {","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"ivanleekk"},"content":"        descriptor \u003d newDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"ivanleekk"},"content":"    public static Descriptor getDescriptor() {","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"ivanleekk"},"content":"        return descriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"ivanleekk"},"content":"     * @param o the Applicant to be compared.","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"ivanleekk"},"content":"     * @return the value 0 if the argument Name is equal to this Name; a value less than 0 if this Name is","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically less than the Name argument; and a value greater than 0 if this string is","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically greater than the Name argument.","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"ivanleekk"},"content":"    public int compareByName(Applicant o) {","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"ivanleekk"},"content":"        if (isDescendingOrder) {","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"ivanleekk"},"content":"            return -this.name.compareTo(o.name);","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"ivanleekk"},"content":"        return this.name.compareTo(o.name);","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"ivanleekk"},"content":"     * @param o the Applicant to be compared.","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"ivanleekk"},"content":"     * @return the value 0 if the argument Phone is equal to this Phone; a value less than 0 if this Phone is","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically less than the Phone argument; and a value greater than 0 if this Phone is","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically greater than the Phone argument.","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"ivanleekk"},"content":"    public int compareByPhone(Applicant o) {","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"ivanleekk"},"content":"        if (isDescendingOrder) {","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"ivanleekk"},"content":"            return -this.phone.compareTo(o.phone);","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"ivanleekk"},"content":"        return this.phone.compareTo(o.phone);","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"ivanleekk"},"content":"     * @param o the Applicant to be compared.","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"ivanleekk"},"content":"     * @return the value 0 if the argument Score is equal to this Score; a value less than 0 if this Score is","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"ivanleekk"},"content":"     *      less than the Score argument; and a value greater than 0 if this Score is","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"ivanleekk"},"content":"     *      greater than the Score argument.","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"ivanleekk"},"content":"    public int compareByScore(Applicant o) {","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"ivanleekk"},"content":"        if (isDescendingOrder) {","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"ivanleekk"},"content":"            return -this.getScore().getAverageScore().compareTo(o.getScore().getAverageScore());","lastModifiedDate":"2023-10-29"},{"lineNumber":187,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"ivanleekk"},"content":"        return this.getScore().getAverageScore().compareTo(o.getScore().getAverageScore());","lastModifiedDate":"2023-10-29"},{"lineNumber":189,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"ivanleekk"},"content":"     * @param o the Applicant to be compared.","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"ivanleekk"},"content":"     * @return the value 0 if the argument Email is equal to this Email; a value less than 0 if this Email is","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically less than the Email argument; and a value greater than 0 if this Email is","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically greater than the Email argument.","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"ivanleekk"},"content":"    public int compareByEmail(Applicant o) {","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"ivanleekk"},"content":"        if (isDescendingOrder) {","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"ivanleekk"},"content":"            return -this.email.compareTo(o.email);","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"ivanleekk"},"content":"        return this.email.compareTo(o.email);","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"ivanleekk"},"content":"     * @param o the Applicant to be compared.","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"ivanleekk"},"content":"     * @return the value 0 if the argument Status is equal to this Status; a value less than 0 if this Status is","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"ivanleekk"},"content":"     *      less than the Status argument; and a value greater than 0 if this Status is","lastModifiedDate":"2023-10-30"},{"lineNumber":208,"author":{"gitId":"ivanleekk"},"content":"     *      greater than the Status argument. Order is (Undecided, Offered, Rejected)","lastModifiedDate":"2023-10-30"},{"lineNumber":209,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"ivanleekk"},"content":"    public int compareByStatus(Applicant o) {","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"ivanleekk"},"content":"        if (isDescendingOrder) {","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"ivanleekk"},"content":"            return -this.status.compareTo(o.status);","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"ivanleekk"},"content":"        return this.status.compareTo(o.status);","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"ivanleekk"},"content":"     * @param o the Applicant to be compared.","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"ivanleekk"},"content":"     * @return the value 0 if the argument Position is equal to this Position; a value less than 0 if this Position is","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically less than the Position argument; and a value greater than 0 if this Position is","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically greater than the Position argument.","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"ivanleekk"},"content":"    public int compareByPosition(Applicant o) {","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"ivanleekk"},"content":"        if (isDescendingOrder) {","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"ivanleekk"},"content":"            return -this.position.compareTo(o.position);","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"ivanleekk"},"content":"        return this.position.compareTo(o.position);","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"ivanleekk"},"content":"     * @param o the object to be compared.","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"ivanleekk"},"content":"     * @return the value 0 if the argument Applicant is equal to this Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":233,"author":{"gitId":"ivanleekk"},"content":"     *      a value less than 0 if this Applicant is lexicographically less than the Applicant argument;","lastModifiedDate":"2023-10-14"},{"lineNumber":234,"author":{"gitId":"ivanleekk"},"content":"     *      and a value greater than 0 if this Applicant is lexicographically greater than the Applicant argument.","lastModifiedDate":"2023-10-14"},{"lineNumber":235,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":236,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"ivanleekk"},"content":"    public int compareTo(Applicant o) {","lastModifiedDate":"2023-10-14"},{"lineNumber":238,"author":{"gitId":"ivanleekk"},"content":"        switch (descriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"ivanleekk"},"content":"        case NAME:","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"ivanleekk"},"content":"            return compareByName(o);","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"ivanleekk"},"content":"        case PHONE:","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"ivanleekk"},"content":"            return compareByPhone(o);","lastModifiedDate":"2023-10-13"},{"lineNumber":243,"author":{"gitId":"ivanleekk"},"content":"        case SCORE:","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"ivanleekk"},"content":"            return compareByScore(o);","lastModifiedDate":"2023-10-30"},{"lineNumber":245,"author":{"gitId":"ivanleekk"},"content":"        case EMAIL:","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"ivanleekk"},"content":"            return compareByEmail(o);","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"ivanleekk"},"content":"        case STATUS:","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"ivanleekk"},"content":"            return compareByStatus(o);","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"ivanleekk"},"content":"        case POSITION:","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"ivanleekk"},"content":"            return compareByPosition(o);","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"ivanleekk"},"content":"        default:","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"ivanleekk"},"content":"            return 0;","lastModifiedDate":"2023-10-13"},{"lineNumber":253,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":254,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":255,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":256,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":257,"author":{"gitId":"craigtonlian"},"content":"     * Add an interview to an Applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":258,"author":{"gitId":"craigtonlian"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":259,"author":{"gitId":"craigtonlian"},"content":"     * @param interviewToAdd the new interview to add to the Applicant","lastModifiedDate":"2023-10-17"},{"lineNumber":260,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":261,"author":{"gitId":"craigtonlian"},"content":"    public void addInterview(Interview interviewToAdd) {","lastModifiedDate":"2023-10-17"},{"lineNumber":262,"author":{"gitId":"craigtonlian"},"content":"        interviews.add(interviewToAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"craigtonlian"},"content":"        Collections.sort(interviews);","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":266,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":267,"author":{"gitId":"craigtonlian"},"content":"     * Deletes an interview of an Applicant.","lastModifiedDate":"2023-10-19"},{"lineNumber":268,"author":{"gitId":"craigtonlian"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":269,"author":{"gitId":"craigtonlian"},"content":"     * @param interviewToDelete the interview to delete to the Applicant","lastModifiedDate":"2023-10-19"},{"lineNumber":270,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":271,"author":{"gitId":"craigtonlian"},"content":"    public void deleteInterview(Interview interviewToDelete) {","lastModifiedDate":"2023-10-19"},{"lineNumber":272,"author":{"gitId":"craigtonlian"},"content":"        interviews.remove(interviewToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":273,"author":{"gitId":"craigtonlian"},"content":"        Collections.sort(interviews);","lastModifiedDate":"2023-10-19"},{"lineNumber":274,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":275,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"craigtonlian"},"content":"    public int getInterviewIndexForApplicantCard(Interview interview) {","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"craigtonlian"},"content":"        return interviews.indexOf(interview) + 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":281,"author":{"gitId":"ivanleekk"},"content":"     * Get the status of an Applicant.","lastModifiedDate":"2023-10-20"},{"lineNumber":282,"author":{"gitId":"ivanleekk"},"content":"     * @return Status of applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":283,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":284,"author":{"gitId":"ivanleekk"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-10-20"},{"lineNumber":285,"author":{"gitId":"ivanleekk"},"content":"        return status;","lastModifiedDate":"2023-10-20"},{"lineNumber":286,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":287,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":288,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":289,"author":{"gitId":"ivanleekk"},"content":"     * Set the status of an Applicant.","lastModifiedDate":"2023-10-20"},{"lineNumber":290,"author":{"gitId":"ivanleekk"},"content":"     * @param status Status to be set","lastModifiedDate":"2023-10-20"},{"lineNumber":291,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":292,"author":{"gitId":"ivanleekk"},"content":"    public void setStatus(Status status) {","lastModifiedDate":"2023-10-20"},{"lineNumber":293,"author":{"gitId":"ivanleekk"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-20"},{"lineNumber":294,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":295,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":296,"author":{"gitId":"ivanleekk"},"content":"    public static Boolean getIsDescendingOrder() {","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"ivanleekk"},"content":"        return isDescendingOrder;","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"ivanleekk"},"content":"    public static void setIsDescendingOrder(Boolean newIsDescendingOrder) {","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"ivanleekk"},"content":"        isDescendingOrder \u003d newIsDescendingOrder;","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CelestineTan03":10,"craigtonlian":60,"-":73,"ivanleekk":160}},{"path":"src/main/java/seedu/staffsnap/model/applicant/CsvApplicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import com.opencsv.bean.CsvBindByPosition;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":" * Represents a CSV version of Applicant in the applicant book.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"public class CsvApplicant implements Serializable {","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    @CsvBindByPosition(position \u003d 0)","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"    private String name;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"    @CsvBindByPosition(position \u003d 1)","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    private String phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"    @CsvBindByPosition(position \u003d 2)","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    private String email;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    @CsvBindByPosition(position \u003d 3)","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    private String position;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    public CsvApplicant(String name, String phone, String email, String position) {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        requireAllNonNull(name, phone, email, position);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"     * Default no-argument constructor for JavaBean standard.","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    public CsvApplicant() {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        this.name \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        this.phone \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        this.email \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        this.position \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"    public String getName() {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        return name;","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"    public String getPhone() {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        return phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"    public String getEmail() {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        return email;","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"    public String getPosition() {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"        return position;","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"     * Returns true if both applicants have the same email or phone number.","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"     * This defines a weaker notion of equality between two applicants.","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"    public boolean isSameApplicant(CsvApplicant otherCsvApplicant) {","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"        if (otherCsvApplicant \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"        return otherCsvApplicant !\u003d null","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 (otherCsvApplicant.getEmail().equals(getEmail())","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"                || otherCsvApplicant.getPhone().equals(getPhone()));","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"     * Returns true if both applicants have the same identity and data fields.","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"     * This defines a stronger notion of equality between two applicants.","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"        if (!(other instanceof CsvApplicant)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"        CsvApplicant otherCsvApplicant \u003d (CsvApplicant) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"        return name.equals(otherCsvApplicant.name)","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 phone.equals(otherCsvApplicant.phone)","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 email.equals(otherCsvApplicant.email)","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"                \u0026\u0026 position.equals(otherCsvApplicant.position);","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"        return Objects.hash(name, phone, email, position);","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"craigtonlian"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"                .add(\"email\", email)","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"                .add(\"position\", position)","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"craigtonlian":113}},{"path":"src/main/java/seedu/staffsnap/model/applicant/CustomFilterPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":" * Custom predicate to be used to filter applicants","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"public class CustomFilterPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    // Identity fields","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    private final Name name;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    private final Phone phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    // Data fields","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    private final Email email;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    private final Position position;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    private final List\u003cInterview\u003e interviews;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"    private final Status status;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"    private final Double lessThanScore;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    private final Double greaterThanScore;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"     * Constructor for CustomFilterPredicate","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"     * @param name       Name of applicant","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"     * @param phone      Phone number of applicant","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"     * @param email      Email address of applicant","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"     * @param position   Position applied for by applicant","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"     * @param interviews Interviews applicant has to go through","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"    public CustomFilterPredicate(Name name, Phone phone, Email email, Position position, List\u003cInterview\u003e interviews,","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"                                 Status status, Double lessThanScore, Double greaterThanScore) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"        this.interviews \u003d interviews;","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"        this.lessThanScore \u003d lessThanScore;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"        this.greaterThanScore \u003d greaterThanScore;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"     * @param applicant the applicant to be tested.","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"     * @return true if applicant matches all specified fields in the predicate","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"        if (this.name !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"            if (!StringUtil.containsStringIgnoreCase(applicant.getName().toString(), this.name.toString())) {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"        if (this.phone !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"            if (!StringUtil.containsWordIgnoreCase(applicant.getPhone().toString(), this.phone.toString())) {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"        if (this.email !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"            if (!StringUtil.containsWordIgnoreCase(applicant.getEmail().toString(), this.email.toString())) {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"        if (this.position !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"            if (!StringUtil.containsStringIgnoreCase(applicant.getPosition().toString(), this.position.toString())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"        if (this.status !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"            if (applicant.getStatus() !\u003d this.status) {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"                return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"        if (this.lessThanScore !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"CelestineTan03"},"content":"            if (applicant.getScore().getAverageScore() \u003e\u003d this.lessThanScore) {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"                return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"        if (this.greaterThanScore !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"CelestineTan03"},"content":"            if (applicant.getScore().getAverageScore() \u003c\u003d this.greaterThanScore) {","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"                return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"        return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"                .add(\"email\", email)","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"                .add(\"position\", position)","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"                .add(\"interviews\", interviews)","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"                .add(\"status\", status).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"ivanleekk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"ivanleekk"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"        CustomFilterPredicate that \u003d (CustomFilterPredicate) o;","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"ivanleekk"},"content":"        return Objects.equals(name, that.name) \u0026\u0026 Objects.equals(phone, that.phone) \u0026\u0026 Objects.equals(email,","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"ivanleekk"},"content":"                that.email) \u0026\u0026 Objects.equals(position, that.position) \u0026\u0026 Objects.equals(interviews, that.interviews)","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"ivanleekk"},"content":"                \u0026\u0026 Objects.equals(status, that.status);","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"ivanleekk"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"ivanleekk"},"content":"        return Objects.hash(name, phone, email, position, interviews);","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"CelestineTan03":2,"ivanleekk":121}},{"path":"src/main/java/seedu/staffsnap/model/applicant/Descriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":" * Enum for valid Descriptors","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"public enum Descriptor {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"    NAME, PHONE, SCORE, EMAIL, POSITION, STATUS;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"            \"Descriptors should be one of the following:\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"            + \"Name, Phone, Score, Email, Position, Status\";","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"     * Finds the correct descriptor by the string given","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"     * @param name name of the descriptor","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"     * @return the descriptor if valid, null otherwise","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    public static Descriptor findByName(String name) {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"        Descriptor result \u003d null;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"        for (Descriptor descriptor : values()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"            if (descriptor.name().equalsIgnoreCase(name)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"                result \u003d descriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"                break;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ivanleekk":28}},{"path":"src/main/java/seedu/staffsnap/model/applicant/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":" * Represents an Applicant\u0027s email in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"public class Email implements Comparable\u003cEmail\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"            + \"3. The entire email address must not be more than 30 characters long.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"     * @param email A valid email.","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d 30;","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"    public int compareTo(Email email) {","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"        return this.value.compareTo(email.value);","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":7,"-":72,"ivanleekk":4}},{"path":"src/main/java/seedu/staffsnap/model/applicant/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":" * Represents an Applicant\u0027s name in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"            \"Names should only contain alphanumeric characters and spaces, should not be blank, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"                    + \"and should not exceed 25 characters\";","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d 25;","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"     * @param o the object to be compared.","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"     * @return the value 0 if the argument Name is equal to this Name; a value less than 0 if this Name is","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically less than the Name argument; and a value greater than 0 if this string is","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically greater than the Name argument.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"    public int compareTo(Name o) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"        return this.fullName.compareTo(o.fullName);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":7,"-":60,"ivanleekk":11}},{"path":"src/main/java/seedu/staffsnap/model/applicant/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"import seedu.staffsnap.commons.util.StringUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":" * Tests that a {@code Applicant}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"                       .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(applicant.getName().fullName, keyword));","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"craigtonlian":5,"jingting1412":2,"-":37}},{"path":"src/main/java/seedu/staffsnap/model/applicant/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":" * Represents a Applicant\u0027s phone number in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"public class Phone implements Comparable\u003cPhone\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"            \"Phone numbers should only contain numbers, should be at least 3 digits long, \"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"                    + \"and at most 30 digits long\";","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d 30;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"     * @param o the object to be compared.","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"     * @return the value 0 if the argument Phone is equal to this Phone; a value less than 0 if this Phone is","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically less than the Phone argument; and a value greater than 0 if this Phone is","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"     *      lexicographically greater than the Phone argument.","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"    public int compareTo(Phone o) {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"        return this.value.compareTo(o.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":6,"-":55,"ivanleekk":11}},{"path":"src/main/java/seedu/staffsnap/model/applicant/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":" * Represents a Applicant\u0027s position in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPosition(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"public class Position implements Comparable\u003cPosition\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Positions can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"     * The first character of the position must not be a whitespace,","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"     * Constructs an {@code Position}.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"     * @param position A valid position.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    public Position(String position) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(position);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        checkArgument(isValidPosition(position), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        value \u003d position;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    public static boolean isValidPosition(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        if (!(other instanceof Position)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        Position otherPosition \u003d (Position) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"        return value.equals(otherPosition.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"    public int compareTo(Position o) {","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"        return this.value.compareTo(o.value);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"craigtonlian":16,"-":48,"ivanleekk":5}},{"path":"src/main/java/seedu/staffsnap/model/applicant/Score.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":" * Represents the score of an applicant.","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"public class Score {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"            \"Score should have non-negative total score to 1dp, non-negative average score 1dp and non-negative\"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"                    + \" number of ratings\";","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    private Double totalScore \u003d 0.0;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    private Double averageScore \u003d 0.0;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"    private int numberOfRatings \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"     * Constructs a {@code Score}.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"    public Score(Score score) {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"        requireNonNull(score);","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"        this.totalScore \u003d score.getTotalScore();","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"        this.averageScore \u003d score.getAverageScore();","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"        this.numberOfRatings \u003d score.getNumberOfRatings();","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"     * Constructs a {@code Score}.","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"    public Score(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"        requireNonNull(interviews);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"        for (Interview interview : interviews) {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"            updateScoreAfterAdd(interview);","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"     * Constructs a {@code Score}.","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"    public Score(double totalScore, double averageScore, int numberOfRatings) {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"        checkArgument(isValidScore(totalScore, averageScore, numberOfRatings), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"        this.totalScore \u003d totalScore;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"        this.averageScore \u003d averageScore;","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"        this.numberOfRatings \u003d numberOfRatings;","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"     * Returns the number of decimals of a given score.","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"    public static int getNumberOfDecimals(double score) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"        String[] splitter \u003d Double.toString(score).split(\"\\\\.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"        return splitter[1].length();","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"     * Returns true if a given score is valid.","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"    public static Boolean isValidScore(double totalScore, double averageScore, int numberOfRatings) {","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"        return totalScore \u003e\u003d 0.0 \u0026\u0026 getNumberOfDecimals(totalScore) \u003d\u003d 1","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"                \u0026\u0026 averageScore \u003e\u003d 0.0 \u0026\u0026 getNumberOfDecimals(averageScore) \u003d\u003d 1","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"                \u0026\u0026 numberOfRatings \u003e\u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"     * Updates the score of the applicant when a new interview is added.","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"     * @param interview The interview that was added or updated.","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"    public void updateScoreAfterAdd(Interview interview) {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"        String rating \u003d interview.getRating().value;","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"        if (!rating.equals(\"-\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"            numberOfRatings++;","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"CelestineTan03"},"content":"            totalScore +\u003d Double.parseDouble(rating);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"CelestineTan03"},"content":"        averageScore \u003d Double.parseDouble(String.format(\"%.1f\", totalScore / numberOfRatings));","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"CelestineTan03"},"content":"     * Updates the score of the applicant when an interview is edited.","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"CelestineTan03"},"content":"     * @param oldInterview The interview before it was edited.","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"CelestineTan03"},"content":"     * @param newInterview The interview after it was edited.","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"CelestineTan03"},"content":"    public void updateScoreAfterEdit(Interview oldInterview, Interview newInterview) {","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"CelestineTan03"},"content":"        String oldRating \u003d oldInterview.getRating().value;","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"CelestineTan03"},"content":"        String newRating \u003d newInterview.getRating().value;","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"CelestineTan03"},"content":"        if (!oldRating.equals(\"-\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"CelestineTan03"},"content":"            totalScore -\u003d Double.parseDouble(oldRating);","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"CelestineTan03"},"content":"        if (!newRating.equals(\"-\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"CelestineTan03"},"content":"            totalScore +\u003d Double.parseDouble(newRating);","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"CelestineTan03"},"content":"        if (oldRating.equals(\"-\") \u0026\u0026 !newRating.equals(\"-\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"CelestineTan03"},"content":"            numberOfRatings++;","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"CelestineTan03"},"content":"        averageScore \u003d Double.parseDouble(String.format(\"%.1f\", totalScore / numberOfRatings));","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"CelestineTan03"},"content":"     * Updates the score of the applicant when an interview is deleted.","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"CelestineTan03"},"content":"     * @param interview The interview that was deleted.","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"CelestineTan03"},"content":"    public void updateScoreAfterDelete(Interview interview) {","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"CelestineTan03"},"content":"        String rating \u003d interview.getRating().value;","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"CelestineTan03"},"content":"        if (!rating.equals(\"-\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"CelestineTan03"},"content":"            numberOfRatings--;","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"CelestineTan03"},"content":"            totalScore -\u003d Double.parseDouble(rating);","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"CelestineTan03"},"content":"        averageScore \u003d Double.parseDouble(String.format(\"%.1f\", totalScore / numberOfRatings));","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"CelestineTan03"},"content":"     * Returns true if the applicant has been rated for an interview.","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"CelestineTan03"},"content":"     * @return true if the applicant has been rated for an interview.","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"CelestineTan03"},"content":"    public boolean hasRating() {","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"CelestineTan03"},"content":"        return numberOfRatings \u003e 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"CelestineTan03"},"content":"     * Returns the average score of the applicant.","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"CelestineTan03"},"content":"     * @return averageScore The average score of the applicant.","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"ivanleekk"},"content":"    public Double getAverageScore() {","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"CelestineTan03"},"content":"        return averageScore;","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"CelestineTan03"},"content":"     * Returns the total score of the applicant.","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"CelestineTan03"},"content":"     * @return totalScore The total score of the applicant.","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"ivanleekk"},"content":"    public Double getTotalScore() {","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"CelestineTan03"},"content":"        return totalScore;","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"CelestineTan03"},"content":"     * Returns the number of ratings the applicant has.","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"CelestineTan03"},"content":"     * @return numberOfRatings The number of ratings the applicant has.","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"CelestineTan03"},"content":"    public int getNumberOfRatings() {","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"CelestineTan03"},"content":"        return numberOfRatings;","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"CelestineTan03"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"CelestineTan03"},"content":"        return String.format(\"%.1f\", averageScore);","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"CelestineTan03":153,"ivanleekk":4}},{"path":"src/main/java/seedu/staffsnap/model/applicant/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":" * Status enum for valid statuses","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"public enum Status {","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"    UNDECIDED, OFFERED, REJECTED;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status can take the following values: \"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"            + \"[u(ndecided)/o(ffered)/r(ejected)]\";","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"     * Finds the correct descriptor by the string given","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"     * @param name name of the descriptor","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"     * @return the descriptor if valid, null otherwise","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    public static Status findByName(String name) {","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"        Status result \u003d null;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"        for (Status status : values()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"            if (status.name().equalsIgnoreCase(name) || status.name().substring(0, 1).equalsIgnoreCase(name)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"                result \u003d status;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"                break;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"        return result;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"ivanleekk":27}},{"path":"src/main/java/seedu/staffsnap/model/applicant/UniqueApplicantList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"import seedu.staffsnap.commons.util.StringUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":" * A list of applicants that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":" * An applicant is considered unique by comparing using {@code Applicant#isSameApplicant(Applicant)}. As such, adding \\","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":" * and updating of applicants uses Applicant#isSameApplicant(Applicant) for equality so as to ensure that the applicant","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":" * being added or updated is unique in terms of identity in the UniqueApplicantList. However, the removal of a applicant","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":" * uses Applicant#equals(Object) to ensure that the applicant with exactly the same fields will be removed.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":" *","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":" *","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":" * @see Applicant#isSameApplicant(Applicant)","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"public class UniqueApplicantList implements Iterable\u003cApplicant\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UniqueApplicantList.class);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    private final ObservableList\u003cApplicant\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    private final ObservableList\u003cApplicant\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"     * Returns true if the list contains an equivalent applicant as the given argument.","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    public boolean contains(Applicant toCheck) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        return internalList.stream().anyMatch(toCheck::isSameApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"     * Returns the number of applicants with the same phone number or email as {@code toCheck}.","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"    public long numberOfDuplicates(Applicant toCheck) {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"        return internalList.stream().filter(applicant -\u003e applicant.isSameApplicant(toCheck)).count();","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"     * Adds a Applicant to the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"     * The Applicant must not already exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"jingting1412"},"content":"     * catches {@code RuntimeException} such as:","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"jingting1412"},"content":"     * ClassCastException, NullPointerException, IllegalArgumentException","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"    public void add(Applicant toAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"            internalList.add(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"jingting1412"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"jingting1412"},"content":"            logger.info(\"Error adding applicant: \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"     * Replaces the applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"jingting1412"},"content":"     * catches {@code RuntimeException} such as:","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jingting1412"},"content":"     * ClassCastException, NullPointerException, IllegalArgumentException, IndexOutOfBoundsException","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"            throw new ApplicantNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"        if (!target.isSameApplicant(editedApplicant) \u0026\u0026 contains(editedApplicant)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"            internalList.set(index, editedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"jingting1412"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"jingting1412"},"content":"            logger.info(\"Error editing applicant: \" + target.getName() + \" \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"     * Removes the equivalent applicant from the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"     * The applicant must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"    public void remove(Applicant toRemove) {","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"            throw new ApplicantNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicants(UniqueApplicantList replacement) {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"     * Replaces the contents of this list with {@code applicants}.","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"jingting1412"},"content":"     * Catches {@code RuntimeException} such as NullPointerException","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"        requireAllNonNull(applicants);","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"        if (!applicantsAreUnique(applicants)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"jingting1412"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"craigtonlian"},"content":"            internalList.setAll(applicants);","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"jingting1412"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jingting1412"},"content":"            logger.info(\"Error setting applicants: \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"craigtonlian"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"craigtonlian"},"content":"    public ObservableList\u003cApplicant\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"craigtonlian"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"craigtonlian"},"content":"    public Iterator\u003cApplicant\u003e iterator() {","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"craigtonlian"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"craigtonlian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"craigtonlian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"craigtonlian"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"craigtonlian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"craigtonlian"},"content":"        if (!(other instanceof UniqueApplicantList)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"craigtonlian"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"        UniqueApplicantList otherUniqueApplicantList \u003d (UniqueApplicantList) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"craigtonlian"},"content":"        return internalList.equals(otherUniqueApplicantList.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"craigtonlian"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"craigtonlian"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"craigtonlian"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"craigtonlian"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"craigtonlian"},"content":"     * Returns true if {@code applicants} contains only unique applicants.","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"craigtonlian"},"content":"    private boolean applicantsAreUnique(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"craigtonlian"},"content":"        for (int i \u003d 0; i \u003c applicants.size() - 1; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"craigtonlian"},"content":"            for (int j \u003d i + 1; j \u003c applicants.size(); j++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"craigtonlian"},"content":"                if (applicants.get(i).isSameApplicant(applicants.get(j))) {","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"craigtonlian"},"content":"                    return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"craigtonlian"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"craigtonlian"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"craigtonlian"},"content":"        return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"CelestineTan03":8,"craigtonlian":150,"jingting1412":23}},{"path":"src/main/java/seedu/staffsnap/model/applicant/exceptions/ApplicantNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":" * Signals that the operation is unable to find the specified employee.","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"craigtonlian":6}},{"path":"src/main/java/seedu/staffsnap/model/applicant/exceptions/DuplicateApplicantException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":" * Signals that the operation will result in duplicate Applicants (Applicants are considered duplicates if they have the","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":" * same identity).","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"public class DuplicateApplicantException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"    public DuplicateApplicantException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"        super(\"Operation would result in duplicate applicants\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"craigtonlian":11}},{"path":"src/main/java/seedu/staffsnap/model/interview/Interview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AustinHuang1203"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"AustinHuang1203"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":" * Represents an Interview in the applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":" * Guarantees: immutable; type is valid as declared in {@link #isValidType(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"public class Interview implements Comparable\u003cInterview\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Interview types should not be empty and should be at most 14 \"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"            + \"characters long\";","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    public final String type;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"    public final Rating rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"     * Constructs a {@code Interview}.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"     * @param type A valid interview type.","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"    public Interview(String type, Rating rating) {","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"        requireAllNonNull(type);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"        checkArgument(isValidType(type), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"     * Returns true if a given string is a valid interview type.","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"    public static boolean isValidType(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        return !test.isEmpty() \u0026\u0026 test.length() \u003c\u003d 14;","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"    public String getType() {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        return type;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"    public Rating getRating() {","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"        return rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"AustinHuang1203"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"AustinHuang1203"},"content":"     * Increments the interview name and returns the incremented interview","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"AustinHuang1203"},"content":"     * @return the incremented interview","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"AustinHuang1203"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"AustinHuang1203"},"content":"    public Interview incrementName() {","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"AustinHuang1203"},"content":"        Pattern pattern \u003d Pattern.compile(\".*?(\\\\d+)$\");","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"AustinHuang1203"},"content":"        Matcher matcher \u003d pattern.matcher(type);","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"AustinHuang1203"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"AustinHuang1203"},"content":"            String lastNumber \u003d matcher.group(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"AustinHuang1203"},"content":"            int number \u003d Integer.parseInt(lastNumber);","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"AustinHuang1203"},"content":"            int incrementedNumber \u003d number + 1;","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"AustinHuang1203"},"content":"            String result \u003d type.replace(lastNumber, String.valueOf(incrementedNumber));","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"AustinHuang1203"},"content":"            return new Interview(result, rating);","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"AustinHuang1203"},"content":"        } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"AustinHuang1203"},"content":"            return new Interview(type + 1, rating);","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"AustinHuang1203"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"AustinHuang1203"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"        if (!(other instanceof Interview)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"        Interview otherInterview \u003d (Interview) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"CelestineTan03"},"content":"        return type.equals(otherInterview.type)","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"CelestineTan03"},"content":"                \u0026\u0026 rating.equals(otherInterview.rating);","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"CelestineTan03"},"content":"     * Returns true if the applicant has an interview with the same interview type.","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"CelestineTan03"},"content":"    public boolean isContainedIn(List\u003cInterview\u003e otherInterviews) {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"CelestineTan03"},"content":"        return otherInterviews.stream().anyMatch(interview -\u003e interview.getType().equals(getType()));","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"CelestineTan03"},"content":"        return Objects.hash(type, rating);","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"CelestineTan03"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"CelestineTan03"},"content":"                .add(\"type\", type)","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"CelestineTan03"},"content":"                .add(\"rating\", rating)","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"CelestineTan03"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"     * @param o the object to be compared.","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"     * @return the value 0 if the argument Interview is equal to this Interview; a value less than 0 if this","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"     *      Interview type is lexicographically less than the Interview argument\u0027s type; and a value greater than","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"     *      0 if this Interview type is lexicographically greater than the Interview argument\u0027s type.","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"    public int compareTo(Interview o) {","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"        return this.type.compareTo(o.type);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"CelestineTan03":29,"AustinHuang1203":24,"craigtonlian":71}},{"path":"src/main/java/seedu/staffsnap/model/interview/Rating.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package seedu.staffsnap.model.interview;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":" * Represents an Interview\u0027s rating in the applicant book.","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRating(String)}","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"public class Rating {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"            \"Rating should be a number between 0.0 and 10.0 to 1 decimal place\";","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(10|10.0|\\\\d{1}(\\\\.\\\\d{1})?)$\";","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    public final String value;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"     * Constructs a {@code Rating}.","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"     * @param rating A valid rating.","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"    public Rating(String rating) {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"        requireNonNull(rating);","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"        checkArgument(isValidRating(rating), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"        value \u003d rating;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"     * Returns true if a given string is a valid rating.","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"    public static boolean isValidRating(String test) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"        return test.equals(\"-\") || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"        return value;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"        if (!(other instanceof Rating)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"        Rating otherRating \u003d (Rating) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"        return value.equals(otherRating.value);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"CelestineTan03":60}},{"path":"src/main/java/seedu/staffsnap/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.applicant.Score;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":" * Contains utility methods for populating {@code ApplicantBook} with sample data.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    public static Applicant[] getSampleApplicants() {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"        return new Applicant[] {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"            new Applicant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"                new Position(\"Software Engineer\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"                getInterviewList(new Interview(\"behavioral\", new Rating(\"7.5\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"                        new Interview(\"technical\", new Rating(\"7.0\"))), Status.OFFERED,","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"                    new Score(getInterviewList(new Interview(\"behavioral\", new Rating(\"7.5\")),","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"                            new Interview(\"technical\", new Rating(\"7.0\"))))),","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"            new Applicant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"                new Position(\"Software Engineer\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"                getInterviewList(new Interview(\"behavioral\", new Rating(\"7.9\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"                        new Interview(\"technical\", new Rating(\"8.0\"))), Status.UNDECIDED,","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"                    new Score(getInterviewList(new Interview(\"behavioral\", new Rating(\"7.9\")),","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"                            new Interview(\"technical\", new Rating(\"8.0\"))))),","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"            new Applicant(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"                new Email(\"charlotte@example.com\"), new Position(\"Software Engineer\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"                getInterviewList(new Interview(\"behavioral\", new Rating(\"8.8\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"                        new Interview(\"technical\", new Rating(\"8.7\"))), Status.REJECTED,","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"                    new Score(getInterviewList(new Interview(\"behavioral\", new Rating(\"8.8\")),","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"                            new Interview(\"technical\", new Rating(\"8.7\"))))),","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"            new Applicant(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"                new Position(\"Frontend Engineer\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"                getInterviewList(new Interview(\"behavioral\", new Rating(\"7.7\"))), Status.OFFERED,","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"                    new Score(getInterviewList(new Interview(\"behavioral\", new Rating(\"7.7\"))))),","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"            new Applicant(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"                new Position(\"Backend Engineer\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"                getInterviewList(new Interview(\"behavioral\", new Rating(\"7.9\"))), Status.UNDECIDED,","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"                    new Score(getInterviewList(new Interview(\"behavioral\", new Rating(\"7.9\"))))),","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"            new Applicant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"                new Position(\"Testing Engineer\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"                getInterviewList(new Interview(\"behavioral\", new Rating(\"6.0\"))), Status.REJECTED,","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"                    new Score(getInterviewList(new Interview(\"behavioral\", new Rating(\"6.0\"))))),","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"    public static ReadOnlyApplicantBook getSampleApplicantBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook sampleAb \u003d new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"        for (Applicant sampleApplicant : getSampleApplicants()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"            sampleAb.addApplicant(sampleApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"     * Returns a interview set containing the list of strings given.","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"    public static List\u003cInterview\u003e getInterviewList(Interview... interviews) {","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"        return Arrays.stream(interviews)","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"CelestineTan03":28,"craigtonlian":25,"-":20,"ivanleekk":1}},{"path":"src/main/java/seedu/staffsnap/storage/ApplicantBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":" * Represents a storage for {@link seedu.staffsnap.model.ApplicantBook}.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"public interface ApplicantBookStorage {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"     * Returns ApplicantBook data as a {@link ReadOnlyApplicantBook}.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook() throws DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"     * @see #getApplicantBookFilePath()","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"     * Saves the given {@link ReadOnlyApplicantBook} to the storage.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"     * @param applicantBook cannot be null.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    void saveApplicantBook(ReadOnlyApplicantBook applicantBook) throws IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"     * @see #saveApplicantBook(ReadOnlyApplicantBook)","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    void saveApplicantBook(ReadOnlyApplicantBook applicantBook, Path filePath) throws IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"craigtonlian":45}},{"path":"src/main/java/seedu/staffsnap/storage/JsonAdaptedApplicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.applicant.Score;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":" * Jackson-friendly version of {@link Applicant}.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"class JsonAdaptedApplicant {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Applicant\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    private final String email;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    private final String position;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    private final List\u003cJsonAdaptedInterview\u003e interviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"    private final String status;","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"    private final Double averageScore;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"    private final Double totalScore;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"     * Constructs a {@code JsonAdaptedApplicant} with the given applicant details.","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"    public JsonAdaptedApplicant(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"position\") String position,","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"            @JsonProperty(\"interviews\") List\u003cJsonAdaptedInterview\u003e interviews,","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"            @JsonProperty(\"status\") String status, @JsonProperty(\"average_score\") Double averageScore,","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"            @JsonProperty(\"total_score\") Double totalScore) {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        if (interviews !\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"            this.interviews.addAll(interviews);","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"        this.averageScore \u003d averageScore;","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"        this.totalScore \u003d totalScore;","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"     * Converts a given {@code Applicant} into this class for Jackson use.","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"    public JsonAdaptedApplicant(Applicant source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"        position \u003d source.getPosition().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        interviews.addAll(source.getInterviews().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"                .map(JsonAdaptedInterview::new)","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"        status \u003d source.getStatus().toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"        averageScore \u003d source.getScore().getAverageScore();","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"        totalScore \u003d source.getScore().getTotalScore();","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"     * Converts this Jackson-friendly adapted applicant object into the model\u0027s {@code Applicant} object.","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted applicant.","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"    public Applicant toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"        final List\u003cInterview\u003e applicantInterviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        for (JsonAdaptedInterview interview : interviews) {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"            applicantInterviews.add(interview.toModelType());","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"CelestineTan03"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"                    Email.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"        if (position \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Position.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"        if (!Position.isValidPosition(position)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"            throw new IllegalValueException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"        final Position modelPosition \u003d new Position(position);","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"        final Status modelStatus \u003d Status.findByName(status);","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"        final List\u003cInterview\u003e modelInterviews \u003d new ArrayList\u003c\u003e(applicantInterviews);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"CelestineTan03"},"content":"        final Score modelScore \u003d new Score(modelInterviews);","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"CelestineTan03"},"content":"        return new Applicant(modelName, modelPhone, modelEmail, modelPosition, modelInterviews, modelStatus,","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"CelestineTan03"},"content":"                modelScore);","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"CelestineTan03":15,"craigtonlian":45,"-":61,"ivanleekk":8}},{"path":"src/main/java/seedu/staffsnap/storage/JsonAdaptedInterview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":" * Jackson-friendly version of {@link Interview}.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"class JsonAdaptedInterview {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"    private final String type;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    private final String rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"     * Constructs a {@code JsonAdaptedInterview} with the given interview details.","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"    public JsonAdaptedInterview(@JsonProperty(\"type\") String type, @JsonProperty(\"rating\") String rating) {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"     * Converts a given {@code Interview} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    public JsonAdaptedInterview(Interview source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        type \u003d source.type;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"        rating \u003d source.getRating().value;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"     * Converts this Jackson-friendly adapted interview object into the model\u0027s {@code Interview} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted interview.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    public Interview toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        if (!Interview.isValidType(type)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"            throw new IllegalValueException(Interview.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"        if (!Rating.isValidRating(rating)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"            throw new IllegalValueException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"        final Rating modelRating \u003d new Rating(rating);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"        return new Interview(type, modelRating);","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"CelestineTan03":12,"craigtonlian":39}},{"path":"src/main/java/seedu/staffsnap/storage/JsonApplicantBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.FileUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.JsonUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":" * A class to access ApplicantBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"public class JsonApplicantBookStorage implements ApplicantBookStorage {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonApplicantBookStorage.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    public JsonApplicantBookStorage(Path filePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        return filePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    public Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"        return readApplicantBook(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"     * Similar to {@link #readApplicantBook()}.","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"    public Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        Optional\u003cJsonSerializableApplicantBook\u003e jsonApplicantBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"                filePath, JsonSerializableApplicantBook.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        if (!jsonApplicantBook.isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"            return Optional.of(jsonApplicantBook.get().toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"    public void saveApplicantBook(ReadOnlyApplicantBook applicantBook) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        saveApplicantBook(applicantBook, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"     * Similar to {@link #saveApplicantBook(ReadOnlyApplicantBook)}.","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"    public void saveApplicantBook(ReadOnlyApplicantBook applicantBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(applicantBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableApplicantBook(applicantBook), filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"craigtonlian":80}},{"path":"src/main/java/seedu/staffsnap/storage/JsonSerializableApplicantBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":" * An Immutable ApplicantBook that is serializable to JSON format.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"@JsonRootName(value \u003d \"applicantBook\")","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"class JsonSerializableApplicantBook {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"Applicants list contains duplicate Applicant(s).\";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    private final List\u003cJsonAdaptedApplicant\u003e applicants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"     * Constructs a {@code JsonSerializableApplicantBook} with the given applicants.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    public JsonSerializableApplicantBook(@JsonProperty(\"applicants\") List\u003cJsonAdaptedApplicant\u003e applicants) {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        this.applicants.addAll(applicants);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"     * Converts a given {@code ReadOnlyApplicantBook} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableApplicantBook}.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"    public JsonSerializableApplicantBook(ReadOnlyApplicantBook source) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        applicants.addAll(source.getApplicantList().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"                .map(JsonAdaptedApplicant::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"     * Converts this applicant book into the model\u0027s {@code ApplicantBook} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook applicantBook \u003d new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        for (JsonAdaptedApplicant jsonAdaptedApplicant : applicants) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"            Applicant applicant \u003d jsonAdaptedApplicant.toModelType();","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"            if (applicantBook.hasApplicant(applicant)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"            applicantBook.addApplicant(applicant);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        return applicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"craigtonlian":27,"-":34}},{"path":"src/main/java/seedu/staffsnap/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.JsonUtil;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"craigtonlian":5,"-":42}},{"path":"src/main/java/seedu/staffsnap/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"public interface Storage extends ApplicantBookStorage, UserPrefsStorage {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook() throws DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    void saveApplicantBook(ReadOnlyApplicantBook applicantBook) throws IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"craigtonlian":9,"-":23}},{"path":"src/main/java/seedu/staffsnap/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":" * Manages storage of ApplicantBook data in local storage.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    private ApplicantBookStorage applicantBookStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"     * Creates a {@code StorageManager} with the given {@code ApplicantBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    public StorageManager(ApplicantBookStorage applicantBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        this.applicantBookStorage \u003d applicantBookStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ApplicantBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"        return applicantBookStorage.getApplicantBookFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"    public Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        return readApplicantBook(applicantBookStorage.getApplicantBookFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"    public Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        return applicantBookStorage.readApplicantBook(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"    public void saveApplicantBook(ReadOnlyApplicantBook applicantBook) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"        saveApplicantBook(applicantBook, applicantBookStorage.getApplicantBookFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"    public void saveApplicantBook(ReadOnlyApplicantBook applicantBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"        applicantBookStorage.saveApplicantBook(applicantBook, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":22,"-":56}},{"path":"src/main/java/seedu/staffsnap/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":" * Represents a storage for {@link seedu.staffsnap.model.UserPrefs}.","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"     * Saves the given {@link seedu.staffsnap.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"craigtonlian":6,"-":30}},{"path":"src/main/java/seedu/staffsnap/ui/ApplicantCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import javafx.scene.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import javafx.scene.shape.Arc;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import javafx.scene.shape.ArcType;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":" * A UI component that displays information of a {@code Applicant}.","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    private static final String FXML \u003d \"ApplicantListCard.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    public final Applicant applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"    private HBox phone;","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"    private HBox email;","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"    private HBox position;","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"    private Label status;","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"    private StackPane overallRating;","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"    private HBox interviews;","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"     * Creates a {@code ApplicantCode} with the given {@code Applicant} and index to display.","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantCard(Applicant applicant, int displayedIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        displayApplicantId(displayedIndex);","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"        displayApplicantDetails();","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        displayApplicantStatus();","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"        displayApplicantInterviews();","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"        displayApplicantScore();","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"    private void displayApplicantId(int displayedIndex) {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"    private void displayApplicantDetails() {","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"        name.setText(applicant.getName().fullName);","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"        Label phoneLabel \u003d new Label(applicant.getPhone().value);","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"        ImageView phoneIcon \u003d new ImageView(\"/images/phone_white_icon.png\");","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"        phoneIcon.setFitHeight(13.5);","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"        phoneIcon.setFitWidth(13.5);","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"        phone.getChildren().add(phoneIcon);","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"        phone.getChildren().add(phoneLabel);","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"        Label emailLabel \u003d new Label(applicant.getEmail().value);","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"        ImageView emailIcon \u003d new ImageView(\"/images/email_white_icon.png\");","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"        emailIcon.setFitHeight(13.5);","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"        emailIcon.setFitWidth(13.5);","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"        email.getChildren().add(emailIcon);","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"        email.getChildren().add(emailLabel);","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"        Label positionLabel \u003d new Label(applicant.getPosition().value);","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"        ImageView positionIcon \u003d new ImageView(\"/images/position_white_icon.png\");","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"        positionIcon.setFitHeight(13.5);","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"        positionIcon.setFitWidth(13.5);","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"        position.getChildren().add(positionIcon);","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"        position.getChildren().add(positionLabel);","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"    private void displayApplicantStatus() {","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"        status.setText(applicant.getStatus().toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"        switch (applicant.getStatus()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"        case OFFERED:","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"            status.setStyle(\"-fx-background-color: #0da811\");","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"        case REJECTED:","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"            status.setStyle(\"-fx-background-color: #cc4242\");","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"        case UNDECIDED:","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"            status.setStyle(\"-fx-background-color: #36769a\");","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"        default:","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"craigtonlian"},"content":"    private void displayApplicantInterviews() {","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"craigtonlian"},"content":"        for (Interview interview : applicant.getInterviews()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"craigtonlian"},"content":"            VBox interviewBox \u003d new VBox();","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"craigtonlian"},"content":"            HBox interviewHeader \u003d new HBox();","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"craigtonlian"},"content":"            HBox interviewRating \u003d new HBox();","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"craigtonlian"},"content":"            interviewBox.setMinHeight(100);","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"craigtonlian"},"content":"            interviewBox.setMinWidth(120);","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"craigtonlian"},"content":"            interviewRating.setPrefWidth(100);","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"craigtonlian"},"content":"            interviewRating.setAlignment(Pos.CENTER);","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"craigtonlian"},"content":"            interviewHeader.setAlignment(Pos.CENTER);","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"craigtonlian"},"content":"            VBox.setVgrow(interviewRating, Priority.ALWAYS);","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"jingting1412"},"content":"            interviewBox.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"jingting1412"},"content":"                    Color.TRANSPARENT,","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"jingting1412"},"content":"                    new CornerRadii(10),","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"jingting1412"},"content":"                    Insets.EMPTY)));","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"jingting1412"},"content":"            interviewBox.setBorder(new Border(new BorderStroke(","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"jingting1412"},"content":"                    Color.TRANSPARENT,","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"jingting1412"},"content":"                    BorderStrokeStyle.NONE,","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"jingting1412"},"content":"                    new CornerRadii(10),","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"jingting1412"},"content":"                    BorderWidths.DEFAULT)));","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"jingting1412"},"content":"            interviewHeader.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"jingting1412"},"content":"                    Color.web(\"#3e7b91\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"jingting1412"},"content":"                    new CornerRadii(10, 10, 0, 0, false),","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"jingting1412"},"content":"                    Insets.EMPTY)));","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"jingting1412"},"content":"            interviewRating.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"jingting1412"},"content":"                    Color.web(\"#7fc9e8\"),","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"jingting1412"},"content":"                    new CornerRadii(0, 0, 10, 10, false),","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"jingting1412"},"content":"                    Insets.EMPTY)));","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"            Label interviewLabel \u003d new Label(applicant.getInterviewIndexForApplicantCard(interview)","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"craigtonlian"},"content":"                    + \". \" + interview.type);","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"craigtonlian"},"content":"            Label interviewRatingLabel \u003d new Label();","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"craigtonlian"},"content":"            interviewRatingLabel.getStyleClass().add(\"rating\");","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"craigtonlian"},"content":"            interviewRatingLabel.setText(interview.getRating().toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"craigtonlian"},"content":"            interviewHeader.getChildren().add(interviewLabel);","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"craigtonlian"},"content":"            interviewRating.getChildren().add(interviewRatingLabel);","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"craigtonlian"},"content":"            interviewBox.getChildren().addAll(interviewHeader, interviewRating);","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"craigtonlian"},"content":"            interviews.getChildren().add(interviewBox);","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"CelestineTan03"},"content":"    private void displayApplicantScore() {","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"craigtonlian"},"content":"        Circle outerCircle \u003d new Circle(50);","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"craigtonlian"},"content":"        outerCircle.setFill(Color.web(\"#454545\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"craigtonlian"},"content":"        Circle midCircle \u003d new Circle(43);","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"craigtonlian"},"content":"        midCircle.setFill(Color.web(\"#454545\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"craigtonlian"},"content":"        Circle innerCircle \u003d new Circle(36);","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"craigtonlian"},"content":"        innerCircle.setFill(Color.web(\"#454545\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"craigtonlian"},"content":"        Group stackedArcs \u003d new Group();","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"craigtonlian"},"content":"        stackedArcs.getChildren().addAll(outerCircle, midCircle);","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"craigtonlian"},"content":"        String labelText \u003d applicant.getScore().hasRating() ? applicant.getScore().toString() : \"-\";","lastModifiedDate":"2023-10-29"},{"lineNumber":182,"author":{"gitId":"jingting1412"},"content":"        Label scoreLabel \u003d new Label(labelText);","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"CelestineTan03"},"content":"        scoreLabel.getStyleClass().add(\"score_label\");","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"jingting1412"},"content":"        Color[] colours \u003d { Color.TRANSPARENT, Color.web(\"#1a8cff\"), Color.web(\"#3333cc\"),","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"jingting1412"},"content":"                Color.web(\"#7a00cc\"), Color.web(\"#cc0099\"), Color.web(\"#ff0066\"),","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"jingting1412"},"content":"                Color.web(\"#ff6600\"), Color.web(\"#ffcc00\"), Color.web(\"#ccff33\"),","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"jingting1412"},"content":"                Color.web(\"#66ff33\"), Color.web(\"#00ffcc\")};","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"jingting1412"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"jingting1412"},"content":"            Arc arc \u003d new Arc(0, 0, 43, 43,","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"jingting1412"},"content":"                    90 + i * 36, -30);","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"jingting1412"},"content":"            arc.setType(ArcType.ROUND);","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"jingting1412"},"content":"            arc.setFill(Color.GREY);","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"jingting1412"},"content":"            stackedArcs.getChildren().add(arc);","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"jingting1412"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"craigtonlian"},"content":"        double applicantRating \u003d labelText.equals(\"-\") ? 0 : Double.parseDouble(labelText);","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"jingting1412"},"content":"        double ratingArcLength \u003d -360 * (applicantRating / 10);","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"jingting1412"},"content":"        Arc ratingArc \u003d new Arc(0, 0, 43, 43, 90, ratingArcLength);","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"jingting1412"},"content":"        Color arcColour \u003d colours[(int) Math.floor(applicantRating)];","lastModifiedDate":"2023-10-28"},{"lineNumber":202,"author":{"gitId":"jingting1412"},"content":"        ratingArc.setFill(arcColour);","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"jingting1412"},"content":"        ratingArc.setType(ArcType.ROUND);","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"jingting1412"},"content":"        stackedArcs.getChildren().add(ratingArc);","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"jingting1412"},"content":"        overallRating.getChildren().addAll(stackedArcs, innerCircle, scoreLabel);","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"CelestineTan03":3,"craigtonlian":113,"jingting1412":59,"-":32,"ivanleekk":2}},{"path":"src/main/java/seedu/staffsnap/ui/ApplicantListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":" * Panel containing the list of applicants.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    private static final String FXML \u003d \"ApplicantListPanel.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ApplicantListPanel.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"    private ListView\u003cApplicant\u003e applicantListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"     * Creates a {@code ApplicantListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantListPanel(ObservableList\u003cApplicant\u003e applicantList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        applicantListView.setItems(applicantList);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        applicantListView.setCellFactory(listView -\u003e new ApplicantListViewCell());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Applicant} using a {@code ApplicantCard}.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    class ApplicantListViewCell extends ListCell\u003cApplicant\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"        protected void updateItem(Applicant applicant, boolean empty) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"            super.updateItem(applicant, empty);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"            if (empty || applicant \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"                setText(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"            } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"                setGraphic(new ApplicantCard(applicant, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"craigtonlian":49}},{"path":"src/main/java/seedu/staffsnap/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.CommandResult;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"         * @see seedu.staffsnap.logic.Logic#execute(String)","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"craigtonlian":5,"-":80}},{"path":"src/main/java/seedu/staffsnap/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"AustinHuang1203"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w08-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"AustinHuang1203":1,"craigtonlian":2,"-":99}},{"path":"src/main/java/seedu/staffsnap/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Logic;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.CommandResult;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    private HostServices hostServices;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    private ApplicantListPanel applicantListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"    private StackPane applicantListPanelPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"    public MainWindow(Stage primaryStage, Logic logic, HostServices hostServices) {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        this.hostServices \u003d hostServices;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"        applicantListPanel \u003d new ApplicantListPanel(logic.getFilteredApplicantList());","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"        applicantListPanelPlaceholder.getChildren().add(applicantListPanel.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getApplicantBookFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":146,"author":{"gitId":"craigtonlian"},"content":"        hostServices.showDocument(HelpWindow.USERGUIDE_URL);","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"craigtonlian"},"content":"        // The block below is commented out until a better design for","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"craigtonlian"},"content":"        // Help command is decided on.","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"craigtonlian"},"content":"        /*","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"craigtonlian"},"content":"        */","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantListPanel getApplicantListPanel() {","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"craigtonlian"},"content":"        return applicantListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"craigtonlian"},"content":"     * @see seedu.staffsnap.logic.Logic#execute(String)","lastModifiedDate":"2023-10-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"craigtonlian":24,"-":180}},{"path":"src/main/java/seedu/staffsnap/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"craigtonlian":1,"-":27}},{"path":"src/main/java/seedu/staffsnap/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":1,"-":27}},{"path":"src/main/java/seedu/staffsnap/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"craigtonlian":1,"-":12}},{"path":"src/main/java/seedu/staffsnap/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.MainApp;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.StringUtil;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Logic;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    // Image credit to \"https://www.freepik.com/free-vector/flat-design-ss-logo-template_21857773","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"    // .htm#query\u003dss%20logo\u0026position\u003d4\u0026from_view\u003dkeyword\u0026track\u003dais\"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/ss_logo.png\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    private HostServices hostServices;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    public UiManager(Logic logic, HostServices hostServices) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"        this.hostServices \u003d hostServices;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic, hostServices);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"craigtonlian":13,"-":80}},{"path":"src/main/java/seedu/staffsnap/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.MainApp;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"craigtonlian":2,"-":86}},{"path":"src/main/resources/view/ApplicantListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"350\" minWidth\u003d\"350\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"150\" minWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"715\" minWidth\u003d\"400\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"100\" GridPane.columnIndex\u003d\"0\" GridPane.rowSpan\u003d\"2\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"      \u003cHBox fx:id\u003d\"details\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"        \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"status_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"      \u003cHBox fx:id\u003d\"phone\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"      \u003cHBox fx:id\u003d\"email\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"      \u003cHBox fx:id\u003d\"position\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"    \u003cVBox alignment\u003d\"CENTER\" minHeight\u003d\"60.0\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"      \u003cStackPane fx:id\u003d\"overallRating\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"    \u003cVBox minHeight\u003d\"60.0\" GridPane.columnIndex\u003d\"2\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        \u003cHBox fx:id\u003d\"interviews\" spacing\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"      \u003c/children\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jingting1412":18,"craigtonlian":18,"-":16}},{"path":"src/main/resources/view/ApplicantListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"  \u003cListView fx:id\u003d\"applicantListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":1,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"craigtonlian"},"content":".status_label {","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"craigtonlian"},"content":"    -fx-font-family: \"Segoe UI Black\";","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"craigtonlian"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"craigtonlian"},"content":"    -fx-background-color: #0fa5ea;","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"craigtonlian"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"craigtonlian"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"craigtonlian"},"content":"#interviews {","lastModifiedDate":"2023-10-13"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"craigtonlian"},"content":"#interviews .label {","lastModifiedDate":"2023-10-13"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"craigtonlian"},"content":"#interviews .rating {","lastModifiedDate":"2023-10-24"},{"lineNumber":360,"author":{"gitId":"craigtonlian"},"content":"    -fx-font-size: 30;","lastModifiedDate":"2023-10-24"},{"lineNumber":361,"author":{"gitId":"craigtonlian"},"content":"    -fx-background-color: #7fc9e8;","lastModifiedDate":"2023-10-24"},{"lineNumber":362,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":363,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":364,"author":{"gitId":"CelestineTan03"},"content":".score_label {","lastModifiedDate":"2023-10-27"},{"lineNumber":365,"author":{"gitId":"craigtonlian"},"content":"    -fx-font-size: 30;","lastModifiedDate":"2023-10-24"},{"lineNumber":366,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":367,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"CelestineTan03":1,"craigtonlian":17,"jingting1412":1,"-":348}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":".interview-selector {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"craigtonlian":1,"-":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"         title\u003d\"Staff-Snap\" minWidth\u003d\"1215\" minHeight\u003d\"660\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"    \u003cImage url\u003d\"@/images/ss_logo.png\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        \u003cVBox fx:id\u003d\"applicantList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"          \u003cStackPane fx:id\u003d\"applicantListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"craigtonlian":8,"-":51}},{"path":"src/test/java/seedu/staffsnap/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"craigtonlian":1,"-":88}},{"path":"src/test/java/seedu/staffsnap/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.core;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(defaultConfig.hashCode() \u003d\u003d defaultConfig.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"craigtonlian":8,"-":26}},{"path":"src/test/java/seedu/staffsnap/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.core;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"        GuiSettings defaultGuiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(defaultGuiSettings, defaultGuiSettings);","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"        GuiSettings defaultGuiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(defaultGuiSettings.hashCode(), defaultGuiSettings.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"craigtonlian":13,"-":15}},{"path":"src/test/java/seedu/staffsnap/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.core;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":2,"-":133}},{"path":"src/test/java/seedu/staffsnap/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.core.index;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        final Index fifthEmployeeIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(fifthEmployeeIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(fifthEmployeeIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(fifthEmployeeIndex.equals(fifthEmployeeIndex));","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(fifthEmployeeIndex.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(fifthEmployeeIndex.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(fifthEmployeeIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"craigtonlian":9,"-":58}},{"path":"src/test/java/seedu/staffsnap/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"        assertNotNull(AppUtil.getImage(\"/images/ss_logo.png\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"craigtonlian":3,"-":33}},{"path":"src/test/java/seedu/staffsnap/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"craigtonlian":3,"-":105}},{"path":"src/test/java/seedu/staffsnap/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.Config;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"craigtonlian":4,"-":112}},{"path":"src/test/java/seedu/staffsnap/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":2,"-":20}},{"path":"src/test/java/seedu/staffsnap/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.SerializableTestClass;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.TestUtil;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"    public void fromJsonString_nullString_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e JsonUtil.fromJsonString(null, SerializableTestClass.class));","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":10,"-":42}},{"path":"src/test/java/seedu/staffsnap/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.commons.util;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"jingting1412"},"content":"        // Matches a partial word only, returns true under new function","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"jingting1412"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"craigtonlian":2,"jingting1412":2,"-":139}},{"path":"src/test/java/seedu/staffsnap/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.AddCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.CommandResult;","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.ListCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.storage.JsonApplicantBookStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.storage.StorageManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        JsonApplicantBookStorage applicantBookStorage \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"                new JsonApplicantBookStorage(temporaryFolder.resolve(\"applicantBook.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        StorageManager storage \u003d new StorageManager(applicantBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"    public void getFilteredApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredApplicantList().remove(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"craigtonlian"},"content":"        Model expectedModel \u003d new ModelManager(model.getApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"craigtonlian"},"content":"        // Inject LogicManager with an ApplicantBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"craigtonlian"},"content":"        JsonApplicantBookStorage applicantBookStorage \u003d new JsonApplicantBookStorage(prefPath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"craigtonlian"},"content":"            public void saveApplicantBook(ReadOnlyApplicantBook applicantBook, Path filePath)","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"craigtonlian"},"content":"        StorageManager storage \u003d new StorageManager(applicantBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"craigtonlian"},"content":"        // Triggers the saveApplicantBook method by executing an add command","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"craigtonlian"},"content":"                + EMAIL_DESC_AMY + POSITION_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"craigtonlian"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(AMY).withInterviews().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"craigtonlian"},"content":"        expectedModel.addApplicant(expectedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"craigtonlian":38,"-":137}},{"path":"src/test/java/seedu/staffsnap/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"        model \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    public void execute_newApplicant_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"        Model expectedModel \u003d new ModelManager(model.getApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        expectedModel.addApplicant(validApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"        assertCommandSuccess(new AddCommand(validApplicant), model,","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validApplicant)),","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"    public void execute_duplicateApplicant_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicantInList \u003d model.getApplicantBook().getApplicantList().get(0);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        assertCommandFailure(new AddCommand(applicantInList), model,","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"                AddCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"craigtonlian":21,"-":27}},{"path":"src/test/java/seedu/staffsnap/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    public void constructor_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"    public void execute_applicantAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"        ModelStubAcceptingApplicantAdded modelStub \u003d new ModelStubAcceptingApplicantAdded();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        CommandResult commandResult \u003d new AddCommand(validApplicant).execute(modelStub);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validApplicant)),","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(Arrays.asList(validApplicant), modelStub.applicantsAdded);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    public void execute_duplicateApplicant_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        AddCommand addCommand \u003d new AddCommand(validApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        ModelStub modelStub \u003d new ModelStubWithApplicant(validApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"                AddCommand.MESSAGE_DUPLICATE_APPLICANT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"        Applicant alice \u003d new ApplicantBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"        Applicant bob \u003d new ApplicantBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"        public Path getApplicantBookFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"        public void setApplicantBookFilePath(Path applicantBookFilePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"craigtonlian"},"content":"        public void addApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"craigtonlian"},"content":"        public void setApplicantBook(ReadOnlyApplicantBook newData) {","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"craigtonlian"},"content":"        public ReadOnlyApplicantBook getApplicantBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"craigtonlian"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"CelestineTan03"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"CelestineTan03"},"content":"        public boolean isDuplicateApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"CelestineTan03"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"craigtonlian"},"content":"        public void deleteApplicant(Applicant target) {","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"        public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"craigtonlian"},"content":"        public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"CelestineTan03"},"content":"        public void updateFilteredApplicantList(Predicate\u003c? super Applicant\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"ivanleekk"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"ivanleekk"},"content":"        public void updateSortedApplicantList(Descriptor descriptor, Boolean descendingOrder) {","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"ivanleekk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"ivanleekk"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"ivanleekk"},"content":"        public void refreshApplicantList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"ivanleekk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"craigtonlian"},"content":"     * A Model stub that contains a single applicant.","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"craigtonlian"},"content":"    private class ModelStubWithApplicant extends ModelStub {","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"craigtonlian"},"content":"        private final Applicant applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"craigtonlian"},"content":"        ModelStubWithApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"craigtonlian"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"craigtonlian"},"content":"            this.applicant \u003d applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"craigtonlian"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"craigtonlian"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"craigtonlian"},"content":"            return this.applicant.isSameApplicant(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"craigtonlian"},"content":"     * A Model stub that always accept the applicant being added.","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"craigtonlian"},"content":"    private class ModelStubAcceptingApplicantAdded extends ModelStub {","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"craigtonlian"},"content":"        final ArrayList\u003cApplicant\u003e applicantsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"craigtonlian"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"craigtonlian"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"craigtonlian"},"content":"            return applicantsAdded.stream().anyMatch(applicant::isSameApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"craigtonlian"},"content":"        public void addApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"craigtonlian"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"craigtonlian"},"content":"            applicantsAdded.add(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"craigtonlian"},"content":"        public ReadOnlyApplicantBook getApplicantBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"craigtonlian"},"content":"            return new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"CelestineTan03":6,"craigtonlian":57,"-":147,"ivanleekk":11}},{"path":"src/test/java/seedu/staffsnap/logic/commands/AddInterviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"class AddInterviewCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    private Model model \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    public void constructor_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddInterviewCommand(null, null));","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"        Interview stubInterview \u003d BENSON.getInterviews().get(0);","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        AddInterviewCommand addInterviewCommand \u003d new AddInterviewCommand(INDEX_FIRST_APPLICANT, stubInterview);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        String expected \u003d AddInterviewCommand.class.getCanonicalName() + \"{interviewToAdd\u003d\" + stubInterview + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expected, addInterviewCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"        Interview stubInterview \u003d BENSON.getInterviews().get(0);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"        AddInterviewCommand addInterviewCommand \u003d new AddInterviewCommand(INDEX_FIRST_APPLICANT, stubInterview);","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(addInterviewCommand, addInterviewCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(addInterviewCommand, new AddInterviewCommand(INDEX_FIRST_APPLICANT, stubInterview));","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"        Interview stubInterview \u003d BENSON.getInterviews().get(0);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        AddInterviewCommand addInterviewCommand \u003d new AddInterviewCommand(INDEX_FIRST_APPLICANT, stubInterview);","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e addInterviewCommand.execute(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"CelestineTan03":4,"craigtonlian":42}},{"path":"src/test/java/seedu/staffsnap/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"AustinHuang1203"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"AustinHuang1203"},"content":"    private Command confirmStub \u003d new ConfirmationCommand();","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"    public void execute_emptyApplicantBook_success() {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"AustinHuang1203"},"content":"        assertCommandSuccess(new ClearCommand(\"yes\"), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"AustinHuang1203"},"content":"    public void execute_nonEmptyApplicantBook_success() throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        Model model \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        expectedModel.setApplicantBook(new ApplicantBook());","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"AustinHuang1203"},"content":"        confirmStub.execute(model);","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"AustinHuang1203"},"content":"        assertCommandSuccess(new ClearCommand(\"yes\"), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":38,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"AustinHuang1203":15,"craigtonlian":8,"-":17}},{"path":"src/test/java/seedu/staffsnap/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"craigtonlian":1,"-":62}},{"path":"src/test/java/seedu/staffsnap/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    public static final String VALID_POSITION_AMY \u003d \"Backend Engineer\";","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"    public static final String VALID_POSITION_BOB \u003d \"Software Engineer\";","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    public static final String VALID_TYPE_TECHNICAL \u003d \"technical\";","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"    public static final String VALID_TYPE_BEHAVIORAL \u003d \"behavioral\";","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"    public static final String VALID_RATING_TEN \u003d \"10.0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"    public static final Interview VALID_INTERVIEW_BEHAVIORAL \u003d new Interview(\"behavioral\", new Rating(\"8.5\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"    public static final Interview VALID_INTERVIEW_TECHNICAL \u003d new Interview(\"technical\", new Rating(\"8.0\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"    public static final String POSITION_DESC_AMY \u003d \" \" + PREFIX_POSITION + VALID_POSITION_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"    public static final String POSITION_DESC_BOB \u003d \" \" + PREFIX_POSITION + VALID_POSITION_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"    public static final String TYPE_DESC_TECHNICAL \u003d \" \" + PREFIX_TYPE + VALID_TYPE_TECHNICAL;","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"    public static final String TYPE_DESC_BEHAVIORAL \u003d \" \" + PREFIX_TYPE + VALID_TYPE_BEHAVIORAL;","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"    public static final String RATING_DESC_TEN \u003d \" \" + PREFIX_RATING + VALID_RATING_TEN;","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"    public static final String INVALID_POSITION_DESC \u003d \" \" + PREFIX_POSITION; // empty string not allowed for positions","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"    public static final String INVALID_TYPE_DESC \u003d \" \"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"            + PREFIX_TYPE + \"\"; // empty string not allowed in interviews","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"    public static final String INVALID_RATING_DESC \u003d \" \" + PREFIX_RATING","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"            + \"-1\"; // negative numbers not allowed for ratings","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"    public static final EditCommand.EditApplicantDescriptor DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"    public static final EditCommand.EditApplicantDescriptor DESC_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        DESC_AMY \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withPosition(VALID_POSITION_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"                .withInterviews(VALID_TYPE_TECHNICAL).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"        DESC_BOB \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withPosition(VALID_POSITION_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"                .withInterviews(VALID_TYPE_BEHAVIORAL, VALID_TYPE_TECHNICAL).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"     * - the applicant book, filtered applicant list and selected applicant in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook expectedApplicantBook \u003d new ApplicantBook(actualModel.getApplicantBook());","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredApplicantList());","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedApplicantBook, actualModel.getApplicantBook());","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredApplicantList());","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"craigtonlian"},"content":"     * Updates {@code model}\u0027s filtered list to show only the applicant at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"craigtonlian"},"content":"     * {@code model}\u0027s applicant book.","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"craigtonlian"},"content":"    public static void showApplicantAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicant \u003d model.getFilteredApplicantList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"craigtonlian"},"content":"        final String[] splitName \u003d applicant.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"craigtonlian"},"content":"        model.updateFilteredApplicantList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(1, model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"CelestineTan03":9,"craigtonlian":51,"-":77}},{"path":"src/test/java/seedu/staffsnap/logic/commands/ConfirmationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AustinHuang1203"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"AustinHuang1203"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"AustinHuang1203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"AustinHuang1203"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"AustinHuang1203"},"content":"public class ConfirmationCommandTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AustinHuang1203"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"AustinHuang1203"},"content":"    public void execute_emptyApplicantBook_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"AustinHuang1203"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"AustinHuang1203"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"AustinHuang1203"},"content":"        assertCommandSuccess(new ConfirmationCommand(), model, ConfirmationCommand.CONFIRM, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"AustinHuang1203"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"AustinHuang1203"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AustinHuang1203":20}},{"path":"src/test/java/seedu/staffsnap/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_SECOND_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    private Model model \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList().get(INDEX_FIRST_APPLICANT.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"                Messages.format(applicantToDelete));","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList().get(INDEX_FIRST_APPLICANT.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"                Messages.format(applicantToDelete));","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"        Model expectedModel \u003d new ModelManager(model.getApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"        expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        showNoApplicant(expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"        // ensures that outOfBoundIndex is still in bounds of applicant book list","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getApplicantBook().getApplicantList().size());","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"    private void showNoApplicant(Model model) {","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"        model.updateFilteredApplicantList(p -\u003e false);","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(model.getFilteredApplicantList().isEmpty());","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"craigtonlian":42,"-":78}},{"path":"src/test/java/seedu/staffsnap/logic/commands/DeleteInterviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_INTERVIEW;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"class DeleteInterviewCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"        DeleteInterviewCommand deleteInterviewCommand \u003d new DeleteInterviewCommand(","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"                INDEX_FIRST_APPLICANT, INDEX_FIRST_INTERVIEW);","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(deleteInterviewCommand, deleteInterviewCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(deleteInterviewCommand,","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"                new DeleteInterviewCommand(INDEX_FIRST_APPLICANT, INDEX_FIRST_INTERVIEW));","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"        DeleteInterviewCommand deleteInterviewCommand \u003d new DeleteInterviewCommand(","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"                INDEX_FIRST_APPLICANT, INDEX_FIRST_INTERVIEW);","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"        String expected \u003d DeleteInterviewCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"                + \"{targetApplicantIndex\u003d\" + INDEX_FIRST_APPLICANT + \", \"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"                + \"targetInterviewIndex\u003d\" + INDEX_FIRST_INTERVIEW + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expected, deleteInterviewCommand.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"craigtonlian":28}},{"path":"src/test/java/seedu/staffsnap/logic/commands/EditApplicantDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"public class EditApplicantDescriptorTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor descriptorWithSameValues \u003d new EditApplicantDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY).withPosition(VALID_POSITION_BOB).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"        String expected \u003d EditApplicantDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"                + editApplicantDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"                + editApplicantDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"                + editApplicantDescriptor.getEmail().orElse(null) + \", position\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"                + editApplicantDescriptor.getPosition().orElse(null) + \", status\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"                + editApplicantDescriptor.getStatus().orElse(null) + \", score\u003d\"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"                + editApplicantDescriptor.getScore().orElse(null) + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expected, editApplicantDescriptor.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"CelestineTan03":2,"craigtonlian":24,"-":41,"ivanleekk":1}},{"path":"src/test/java/seedu/staffsnap/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_SECOND_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    private Model model \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(editedApplicant).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_APPLICANT, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        Model expectedModel \u003d new ModelManager(new ApplicantBook(model.getApplicantBook()), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        expectedModel.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"        Index indexLastApplicant \u003d Index.fromOneBased(model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        Applicant lastApplicant \u003d model.getFilteredApplicantList().get(indexLastApplicant.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBuilder applicantInList \u003d new ApplicantBuilder(lastApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"        Applicant editedApplicant \u003d applicantInList.withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"                .withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastApplicant, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"        Model expectedModel \u003d new ModelManager(new ApplicantBook(model.getApplicantBook()), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        expectedModel.setApplicant(lastApplicant, editedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_APPLICANT, new EditApplicantDescriptor());","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        Applicant editedApplicant \u003d model.getFilteredApplicantList().get(INDEX_FIRST_APPLICANT.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"        Model expectedModel \u003d new ModelManager(new ApplicantBook(model.getApplicantBook()), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicantInFilteredList \u003d model.getFilteredApplicantList().get(INDEX_FIRST_APPLICANT.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"CelestineTan03"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder(applicantInFilteredList).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_APPLICANT,","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"CelestineTan03"},"content":"                new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY).build());","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"        Model expectedModel \u003d new ModelManager(new ApplicantBook(model.getApplicantBook()), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"        expectedModel.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"    public void execute_duplicateApplicantUnfilteredList_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"        Applicant firstApplicant \u003d model.getFilteredApplicantList().get(INDEX_FIRST_APPLICANT.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(firstApplicant).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_APPLICANT, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"    public void execute_duplicateApplicantFilteredList_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"        // edit applicant in filtered list into a duplicate in applicant book","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicantInList \u003d model.getApplicantBook()","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"                .getApplicantList().get(INDEX_SECOND_APPLICANT.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"craigtonlian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_APPLICANT,","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"craigtonlian"},"content":"                new EditApplicantDescriptorBuilder(applicantInList).build());","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"craigtonlian"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"CelestineTan03"},"content":"    public void execute_duplicateEmailUnfilteredList_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"CelestineTan03"},"content":"        Applicant firstApplicant \u003d model.getFilteredApplicantList().get(INDEX_FIRST_APPLICANT.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"CelestineTan03"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(firstApplicant)","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"CelestineTan03"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"CelestineTan03"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_APPLICANT, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"CelestineTan03"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"CelestineTan03"},"content":"    public void execute_duplicateEmailFilteredList_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"CelestineTan03"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"CelestineTan03"},"content":"        // edit applicant in filtered list into a duplicate in applicant book","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"CelestineTan03"},"content":"        Applicant applicantInList \u003d model.getApplicantBook()","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"CelestineTan03"},"content":"                .getApplicantList().get(INDEX_FIRST_APPLICANT.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"CelestineTan03"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(applicantInList)","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"CelestineTan03"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"CelestineTan03"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_APPLICANT,","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"CelestineTan03"},"content":"                new EditApplicantDescriptorBuilder(descriptor).build());","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"CelestineTan03"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"CelestineTan03"},"content":"    public void execute_duplicatePhoneUnfilteredList_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"CelestineTan03"},"content":"        Applicant firstApplicant \u003d model.getFilteredApplicantList().get(INDEX_FIRST_APPLICANT.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"CelestineTan03"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(firstApplicant)","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"CelestineTan03"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"CelestineTan03"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_APPLICANT, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"CelestineTan03"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"CelestineTan03"},"content":"    public void execute_duplicatePhoneFilteredList_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"CelestineTan03"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"CelestineTan03"},"content":"        // edit applicant in filtered list into a duplicate in applicant book","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"CelestineTan03"},"content":"        Applicant applicantInList \u003d model.getApplicantBook()","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"CelestineTan03"},"content":"                .getApplicantList().get(INDEX_FIRST_APPLICANT.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"CelestineTan03"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(applicantInList)","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"CelestineTan03"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"CelestineTan03"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_APPLICANT,","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"CelestineTan03"},"content":"                new EditApplicantDescriptorBuilder(descriptor).build());","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"CelestineTan03"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":180,"author":{"gitId":"craigtonlian"},"content":"    public void execute_invalidApplicantIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"craigtonlian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":185,"author":{"gitId":"craigtonlian"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":190,"author":{"gitId":"craigtonlian"},"content":"     * but smaller than size of applicant book","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":193,"author":{"gitId":"craigtonlian"},"content":"    public void execute_invalidApplicantIndexFilteredList_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"craigtonlian"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"craigtonlian"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"craigtonlian"},"content":"        // ensures that outOfBoundIndex is still in bounds of applicant book list","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getApplicantBook().getApplicantList().size());","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":200,"author":{"gitId":"craigtonlian"},"content":"                new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":202,"author":{"gitId":"craigtonlian"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":207,"author":{"gitId":"craigtonlian"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_APPLICANT, DESC_AMY);","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":210,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor copyDescriptor \u003d new EditApplicantDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"craigtonlian"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_APPLICANT, copyDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":221,"author":{"gitId":"AustinHuang1203"},"content":"        assertFalse(standardCommand.equals(new ClearCommand(\"yes\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":224,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_APPLICANT, DESC_AMY)));","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":227,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_APPLICANT, DESC_BOB)));","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-12"},{"lineNumber":234,"author":{"gitId":"craigtonlian"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editApplicantDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"craigtonlian"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editApplicantDescriptor\u003d\"","lastModifiedDate":"2023-10-12"},{"lineNumber":236,"author":{"gitId":"craigtonlian"},"content":"                + editApplicantDescriptor + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"CelestineTan03":56,"AustinHuang1203":1,"craigtonlian":85,"-":98}},{"path":"src/test/java/seedu/staffsnap/logic/commands/EditInterviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_INTERVIEW;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"class EditInterviewCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"        EditInterviewCommand editInterviewCommand \u003d new EditInterviewCommand(","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"                INDEX_FIRST_APPLICANT, INDEX_FIRST_INTERVIEW, new EditInterviewCommand.EditInterviewDescriptor());","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(editInterviewCommand, editInterviewCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(editInterviewCommand,","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"                new EditInterviewCommand(","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"                        INDEX_FIRST_APPLICANT,","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"                        INDEX_FIRST_INTERVIEW,","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"                        new EditInterviewCommand.EditInterviewDescriptor()));","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"craigtonlian":22}},{"path":"src/test/java/seedu/staffsnap/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"craigtonlian":5,"-":15}},{"path":"src/test/java/seedu/staffsnap/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.CARL;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.DANIEL;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.ELLE;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.FIONA;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.CustomFilterPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"class FilterCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"    private Model model \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        Name name1 \u003d BENSON.getName();","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"        Phone phone1 \u003d BENSON.getPhone();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"        Email email1 \u003d BENSON.getEmail();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"        Position position1 \u003d BENSON.getPosition();","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"        List\u003cInterview\u003e interviewList1 \u003d BENSON.getInterviews();","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"        Status status1 \u003d BENSON.getStatus();","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"        Name name2 \u003d CARL.getName();","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"        Phone phone2 \u003d CARL.getPhone();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"        Email email2 \u003d CARL.getEmail();","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"        Position position2 \u003d CARL.getPosition();","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"        List\u003cInterview\u003e interviewList2 \u003d CARL.getInterviews();","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"        Status status2 \u003d CARL.getStatus();","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"        CustomFilterPredicate firstPredicate \u003d new CustomFilterPredicate(name1, phone1, email1, position1,","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"                interviewList1, status1, null, null);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"        CustomFilterPredicate secondPredicate \u003d new CustomFilterPredicate(name2, phone2, email2, position2,","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"                interviewList2, status2, null, null);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"        FilterCommand findFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(filterFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"    public void execute_zeroKeywords_allApplicantsFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 8);","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"        CustomFilterPredicate predicate \u003d new CustomFilterPredicate(null, null, null, null, null, null, null, null);","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(expectedModel.getFilteredApplicantList(), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"    public void execute_partialName_multipleApplicantsFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"        CustomFilterPredicate predicate \u003d new CustomFilterPredicate(new Name(\"a\"), null, null, null, null, null,","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"                null, null);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, DANIEL, FIONA), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"    public void execute_multipleKeywords_singleApplicantFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"        CustomFilterPredicate predicate \u003d new CustomFilterPredicate(FIONA.getName(), FIONA.getPhone(), null, null,","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"                null, null, null, null);","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(Arrays.asList(FIONA), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"ivanleekk"},"content":"    public void execute_multipleKeywords_zeroApplicantsFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"ivanleekk"},"content":"        CustomFilterPredicate predicate \u003d new CustomFilterPredicate(ALICE.getName(), BENSON.getPhone(),","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"ivanleekk"},"content":"                CARL.getEmail(), DANIEL.getPosition(), ELLE.getInterviews(), FIONA.getStatus(), null, null);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"ivanleekk"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(model.getFilteredApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(Arrays.asList(), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"ivanleekk"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"ivanleekk"},"content":"        CustomFilterPredicate predicate \u003d new CustomFilterPredicate(FIONA.getName(), null, null, null, null, null,","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"ivanleekk"},"content":"                null, null);","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"ivanleekk"},"content":"        FilterCommand findCommand \u003d new FilterCommand(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"ivanleekk"},"content":"        String expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ivanleekk":133}},{"path":"src/test/java/seedu/staffsnap/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.CARL;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.DANIEL;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.ELLE;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.FIONA;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    private Model model \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"    public void execute_zeroKeywords_noApplicantFound() {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"    public void execute_multipleKeywords_multipleApplicantsFound() {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"jingting1412"},"content":"    public void execute_multipleKeywords_singleApplicantFound() {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"jingting1412"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"jingting1412"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Fiona Fluorescence\");","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"jingting1412"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"jingting1412"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"jingting1412"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"jingting1412"},"content":"        assertEquals(Arrays.asList(FIONA), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"jingting1412"},"content":"    public void execute_singleIncompleteKeyword_multipleApplicantsFound() {","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"jingting1412"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"jingting1412"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Mei\");","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"jingting1412"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"jingting1412"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"jingting1412"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"jingting1412"},"content":"        System.out.println(model.getFilteredApplicantList());","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"jingting1412"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"craigtonlian":22,"jingting1412":22,"-":71}},{"path":"src/test/java/seedu/staffsnap/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.HelpCommand.MESSAGE_SHOW_HELP;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SHOW_HELP, true, false);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"craigtonlian":6,"-":14}},{"path":"src/test/java/seedu/staffsnap/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        model \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        expectedModel \u003d new ModelManager(model.getApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_APPLICANT);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"    public void execute_sortAndList_success() throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        // Execute the SortCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"        SortCommand sortCommand \u003d new SortCommand(Descriptor.NAME, false);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        CommandResult sortResult \u003d sortCommand.execute(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        // Create a ListCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        CommandResult listResult \u003d listCommand.execute(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"        // Assert that both commands were successful","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(SortCommand.MESSAGE_SUCCESS, sortResult.getFeedbackToUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(ListCommand.MESSAGE_SUCCESS, listResult.getFeedbackToUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"        // Assert that the actual and expected models are the same","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"craigtonlian":31,"-":28,"ivanleekk":1}},{"path":"src/test/java/seedu/staffsnap/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getApplicantsSortedByEmail;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getApplicantsSortedByName;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getApplicantsSortedByPhone;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getApplicantsSortedByPosition;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getApplicantsSortedByScore;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getApplicantsSortedByStatus;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getUnsortedApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"class SortCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    private Model model;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"    void execute_sortName_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        model \u003d new ModelManager(getUnsortedApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"            new SortCommand(Descriptor.NAME, false).execute(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(model.getFilteredApplicantList(), (getApplicantsSortedByName()));","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"    void execute_sortPhone_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        model \u003d new ModelManager(getUnsortedApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"            new SortCommand(Descriptor.PHONE, false).execute(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(model.getFilteredApplicantList(), (getApplicantsSortedByPhone()));","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"    void execute_sortScore_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"        model \u003d new ModelManager(getUnsortedApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"            new SortCommand(Descriptor.SCORE, false).execute(model);","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(model.getFilteredApplicantList(), (getApplicantsSortedByScore()));","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"    void execute_sortStatus_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"        model \u003d new ModelManager(getUnsortedApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"            new SortCommand(Descriptor.STATUS, false).execute(model);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(model.getFilteredApplicantList(), (getApplicantsSortedByStatus()));","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"    void execute_sortEmail_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"        model \u003d new ModelManager(getUnsortedApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"            new SortCommand(Descriptor.EMAIL, false).execute(model);","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(model.getFilteredApplicantList(), (getApplicantsSortedByEmail()));","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"    void execute_sortPosition_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"        model \u003d new ModelManager(getUnsortedApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"            new SortCommand(Descriptor.POSITION, false).execute(model);","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(model.getFilteredApplicantList(), (getApplicantsSortedByPosition()));","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"    void execute_sortName_descending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"        model \u003d new ModelManager(getUnsortedApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"            new SortCommand(Descriptor.NAME, true).execute(model);","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"        List\u003cApplicant\u003e applicantList \u003d getApplicantsSortedByName();","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"        Collections.reverse(applicantList);","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(model.getFilteredApplicantList(), (applicantList));","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"craigtonlian":3,"ivanleekk":103}},{"path":"src/test/java/seedu/staffsnap/logic/commands/StatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getUnsortedApplicantBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"class StatusCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    void execute_setStatus_offered() {","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"        Model model \u003d new ModelManager(getUnsortedApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"            new StatusCommand(Index.fromOneBased(1), Status.OFFERED).execute(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(model.getFilteredApplicantList().get(0).getStatus() \u003d\u003d Status.OFFERED);","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"    void execute_setStatus_rejected() {","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"        Model model \u003d new ModelManager(getUnsortedApplicantBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"            new StatusCommand(Index.fromOneBased(1), Status.REJECTED).execute(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(model.getFilteredApplicantList().get(0).getStatus() \u003d\u003d Status.REJECTED);","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"    void execute_testEquals_sameParams() {","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"        StatusCommand command1 \u003d new StatusCommand(Index.fromOneBased(1), Status.OFFERED);","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"        StatusCommand command2 \u003d new StatusCommand(Index.fromOneBased(1), Status.OFFERED);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(command1.equals(command2));","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"    void execute_testEquals_differentParams() {","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"        StatusCommand command1 \u003d new StatusCommand(Index.fromOneBased(1), Status.OFFERED);","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"        StatusCommand command2 \u003d new StatusCommand(Index.fromOneBased(2), Status.REJECTED);","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"        assertFalse(command1.equals(command2));","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"    void testToString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"        StatusCommand command \u003d new StatusCommand(Index.fromOneBased(1), Status.OFFERED);","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"        String expected \u003d StatusCommand.class.getCanonicalName() + \"{index\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"                + command.getIndex() + \", status\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"                + command.getStatus() + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(expected,","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"                command.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"ivanleekk":66}},{"path":"src/test/java/seedu/staffsnap/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.POSITION_DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.TYPE_DESC_TECHNICAL;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.AddCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        Applicant expectedApplicantWithWhitespace \u003d new ApplicantBuilder(BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"                + POSITION_DESC_BOB, new AddCommand(expectedApplicantWithWhitespace));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        // without whitespace preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        Applicant expectedApplicantWithoutWhitespace \u003d new ApplicantBuilder(BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB,","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"                new AddCommand(expectedApplicantWithoutWhitespace));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"    public void parse_repeatedNonInterviewValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"        String validExpectedApplicantString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"                + POSITION_DESC_BOB + TYPE_DESC_TECHNICAL;","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        // multiple emails","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"        // multiple positions","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, POSITION_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POSITION));","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"                validExpectedApplicantString + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"                        + NAME_DESC_AMY + POSITION_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"                        PREFIX_NAME, PREFIX_POSITION, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedApplicantString,","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"        // invalid email","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedApplicantString,","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedApplicantString,","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"        // invalid position","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, INVALID_POSITION_DESC + validExpectedApplicantString,","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POSITION));","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"        // invalid email","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"        // invalid position","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_POSITION_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POSITION));","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"craigtonlian"},"content":"        // zero interviews","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"craigtonlian"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(AMY).withInterviews().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"craigtonlian"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + POSITION_DESC_AMY,","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"craigtonlian"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB,","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB,","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + POSITION_DESC_BOB,","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"craigtonlian"},"content":"        // missing position prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_POSITION_BOB,","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_POSITION_BOB,","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"craigtonlian"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"craigtonlian"},"content":"                + INVALID_PHONE_DESC + EMAIL_DESC_BOB + POSITION_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"craigtonlian"},"content":"                + PHONE_DESC_BOB + INVALID_EMAIL_DESC + POSITION_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"craigtonlian"},"content":"        // invalid position","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"craigtonlian"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_POSITION_DESC, Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"craigtonlian"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_POSITION_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"craigtonlian"},"content":"                + POSITION_DESC_BOB, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"craigtonlian":99,"-":85}},{"path":"src/test/java/seedu/staffsnap/logic/parser/AddInterviewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.INVALID_RATING_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.INVALID_TYPE_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.POSITION_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.TYPE_DESC_BEHAVIORAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.TYPE_DESC_TECHNICAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_TYPE_TECHNICAL;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"class AddInterviewCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInterviewCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"    private AddInterviewCommandParser parser \u003d new AddInterviewCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        // no index specified","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, VALID_TYPE_TECHNICAL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        // no field specified","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"    public void parse_multipleInterviewValue_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"        String validExpectedApplicantString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"                + POSITION_DESC_BOB + TYPE_DESC_TECHNICAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"        // multiple types","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, TYPE_DESC_BEHAVIORAL + validExpectedApplicantString,","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"        // multiple ratings","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, TYPE_DESC_BEHAVIORAL + validExpectedApplicantString,","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInterviewCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"        // missing index","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, TYPE_DESC_BEHAVIORAL, expectedMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"        // missing interview type","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"        String index \u003d \"1 \";","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, index, expectedMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"        // missing interview prefix","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, index + VALID_TYPE_TECHNICAL, expectedMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"        // invalid index","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, \"a\" + TYPE_DESC_TECHNICAL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"        // invalid type","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TYPE_DESC, Interview.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"CelestineTan03"},"content":"        // invalid rating","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, \"1\" + TYPE_DESC_TECHNICAL + INVALID_RATING_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"CelestineTan03"},"content":"                Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"CelestineTan03":52,"craigtonlian":28}},{"path":"src/test/java/seedu/staffsnap/logic/parser/ApplicantBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.AddCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.FindCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.ListCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.SortCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantBookParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    private final ApplicantBookParser parser \u003d new ApplicantBookParser();","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ApplicantUtil.getAddCommand(applicant));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(new AddCommand(applicant), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"AustinHuang1203"},"content":"    /*","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"AustinHuang1203"},"content":"    */","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"AustinHuang1203"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"        DeleteCommand command \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"                (DeleteCommand) parser.parseCommand(DeleteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"                        + INDEX_FIRST_APPLICANT.getOneBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_APPLICANT), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(applicant).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"        EditCommand command \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"                (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"                        + INDEX_FIRST_APPLICANT.getOneBased() + \" \"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"                        + ApplicantUtil.getEditApplicantDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_APPLICANT, descriptor), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"        FindCommand command \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"                (FindCommand) parser.parseCommand(FindCommand.COMMAND_WORD + \" \" + keywords.stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"                        .collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \" + \"d/ name\") instanceof SortCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(parser.parseCommand(FilterCommand.COMMAND_WORD + \" \" + \"d/ name\") instanceof FilterCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"ivanleekk"},"content":"    public void parseCommand_addi() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(parser.parseCommand(AddInterviewCommand.COMMAND_WORD + \" 1 \" + \"t/ technical\")","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"ivanleekk"},"content":"                instanceof AddInterviewCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"AustinHuang1203":3,"craigtonlian":28,"-":63,"ivanleekk":31}},{"path":"src/test/java/seedu/staffsnap/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        String argsString \u003d \"  some random string /t interview with leading and trailing spaces \";","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"craigtonlian":2,"-":148}},{"path":"src/test/java/seedu/staffsnap/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.Command;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"craigtonlian":3,"-":36}},{"path":"src/test/java/seedu/staffsnap/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_SECOND_APPLICANT;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_APPLICANT));","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        assertParseSuccess(parser, \"2\", new DeleteCommand(INDEX_SECOND_APPLICANT));","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        // input is not integer","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"        // input is whitespace","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        // input is empty string","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"craigtonlian":20,"-":24}},{"path":"src/test/java/seedu/staffsnap/logic/parser/DeleteInterviewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"class DeleteInterviewCommandParserTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"    public void parse_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"        DeleteInterviewCommandParser deleteInterviewCommandParser \u003d new DeleteInterviewCommandParser();","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteInterviewCommandParser.parse(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"craigtonlian":13}},{"path":"src/test/java/seedu/staffsnap/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.POSITION_DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_POSITION_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_SECOND_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_THIRD_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"        // no prefix specified","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, \"1\" + VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, \"\" + PREFIX_EMAIL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"        // nothing specified","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"CelestineTan03"},"content":"        // whitespace being parsed as preamble","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"CelestineTan03"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_POSITION_DESC, Position.MESSAGE_CONSTRAINTS); // invalid position","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"                        + VALID_POSITION_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"        Index targetIndex \u003d INDEX_SECOND_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"                + EMAIL_DESC_AMY + POSITION_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withPosition(VALID_POSITION_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"        Index targetIndex \u003d INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"craigtonlian"},"content":"        Index targetIndex \u003d INDEX_THIRD_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"craigtonlian"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"craigtonlian"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"craigtonlian"},"content":"        // email","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"craigtonlian"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"craigtonlian"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"craigtonlian"},"content":"        // position","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"craigtonlian"},"content":"        userInput \u003d targetIndex.getOneBased() + POSITION_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"craigtonlian"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withPosition(VALID_POSITION_AMY).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"craigtonlian"},"content":"        // AddCommandParserTest#parse_repeatedNonInterviewValue_failure()","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"craigtonlian"},"content":"        Index targetIndex \u003d INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"craigtonlian"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"craigtonlian"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + POSITION_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"craigtonlian"},"content":"                 + PHONE_DESC_AMY + POSITION_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"craigtonlian"},"content":"                 + PHONE_DESC_BOB + POSITION_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"craigtonlian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSITION));","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"craigtonlian"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_POSITION_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"craigtonlian"},"content":"                + INVALID_PHONE_DESC + INVALID_POSITION_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"craigtonlian"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSITION));","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"CelestineTan03":9,"craigtonlian":70,"-":104}},{"path":"src/test/java/seedu/staffsnap/logic/parser/EditInterviewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"class EditInterviewCommandParserTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"    public void parse_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"        EditInterviewCommandParser editInterviewCommandParser \u003d new EditInterviewCommandParser();","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e editInterviewCommandParser.parse(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"craigtonlian":13}},{"path":"src/test/java/seedu/staffsnap/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.CustomFilterPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"class FilterCommandParserTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"            FilterCommand.MESSAGE_FAILURE);","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    void parse_missingParts_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    void parse_nameOnly_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"        assertParseSuccess(parser, \" n/ Name\", new FilterCommand(new CustomFilterPredicate(new Name(\"Name\"), null,","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"                null, null, null, null, null, null)));","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"    void parse_emailOnly_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"        assertParseSuccess(parser, \" e/ test@test.com\", new FilterCommand(new CustomFilterPredicate(null, null,","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"                new Email(\"test@test.com\"), null, null, null, null, null)));","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"    void parse_positionOnly_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"        assertParseSuccess(parser, \" p/ Software Engineer\", new FilterCommand(new CustomFilterPredicate(null, null,","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"                null, new Position(\"Software Engineer\"), null, null, null, null)));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"    void parse_phoneOnly_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"        assertParseSuccess(parser, \" hp/ 98765432\", new FilterCommand(new CustomFilterPredicate(null, new Phone(","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"                \"98765432\"), null, null, null, null, null, null)));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"    void parse_statusOnly_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"        assertParseSuccess(parser, \" s/ o\", new FilterCommand(new CustomFilterPredicate(null, null, null, null,","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"                null, Status.OFFERED, null, null)));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"ivanleekk":59}},{"path":"src/test/java/seedu/staffsnap/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.FindCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"craigtonlian":6,"-":28}},{"path":"src/test/java/seedu/staffsnap/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    private static final String INVALID_POSITION \u003d \" \";","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    private static final String INVALID_TYPE \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    private static final String INVALID_DESCRIPTOR \u003d \"nam\";","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"    private static final String INVALID_RATING \u003d \"15.0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"    private static final String VALID_POSITION \u003d \"Software Engineer\";","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"    private static final String VALID_TYPE_1 \u003d \"behavioral\";","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"    private static final String VALID_TYPE_2 \u003d \"technical\";","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"    private static final String VALID_DESCRIPTOR \u003d \"name\";","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"    private static final String VALID_RATING \u003d \"5.0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"    private static final String CAPITALIZED_NAME \u003d \"RACHEL WALKER\";","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(INDEX_FIRST_APPLICANT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(INDEX_FIRST_APPLICANT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"    public void parsePosition_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePosition((String) null));","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"    public void parsePosition_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePosition(INVALID_POSITION));","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"craigtonlian"},"content":"    public void parsePosition_validValueWithoutWhitespace_returnsPosition() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"craigtonlian"},"content":"        Position expectedPosition \u003d new Position(VALID_POSITION);","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedPosition, ParserUtil.parsePosition(VALID_POSITION));","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"craigtonlian"},"content":"    public void parsePosition_validValueWithWhitespace_returnsTrimmedPosition() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"craigtonlian"},"content":"        String positionWithWhitespace \u003d WHITESPACE + VALID_POSITION + WHITESPACE;","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"craigtonlian"},"content":"        Position expectedPosition \u003d new Position(VALID_POSITION);","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedPosition, ParserUtil.parsePosition(positionWithWhitespace));","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"craigtonlian"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"craigtonlian"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"craigtonlian"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"craigtonlian"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"craigtonlian"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"craigtonlian"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"craigtonlian"},"content":"    public void parseInterview_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInterview(null, null));","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"CelestineTan03"},"content":"    public void parseInterview_invalidType_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInterview(INVALID_TYPE, VALID_RATING));","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"CelestineTan03"},"content":"    public void parseInterview_invalidRating_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ParserUtil.parseInterview(VALID_TYPE_1, INVALID_RATING));","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"craigtonlian"},"content":"    public void parseInterview_validValueWithoutWhitespace_returnsInterview() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"CelestineTan03"},"content":"        Interview expectedInterview \u003d new Interview(VALID_TYPE_1, new Rating(VALID_RATING));","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(expectedInterview, ParserUtil.parseInterview(VALID_TYPE_1, VALID_RATING));","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"CelestineTan03"},"content":"    public void parseInterview_validValuesWithWhitespace_returnsTrimmedInterview() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"CelestineTan03"},"content":"        String typeWithWhitespace \u003d WHITESPACE + VALID_TYPE_1 + WHITESPACE;","lastModifiedDate":"2023-10-23"},{"lineNumber":183,"author":{"gitId":"CelestineTan03"},"content":"        String ratingWithWhitespace \u003d WHITESPACE + VALID_RATING + WHITESPACE;","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"CelestineTan03"},"content":"        Interview expectedInterview \u003d new Interview(VALID_TYPE_1, new Rating(VALID_RATING));","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(expectedInterview, ParserUtil.parseInterview(typeWithWhitespace, ratingWithWhitespace));","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"craigtonlian"},"content":"    public void parseInterviews_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInterviews(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"craigtonlian"},"content":"    public void parseInterviews_collectionWithInvalidInterviews_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"CelestineTan03"},"content":"                .parseInterviews(Arrays.asList(VALID_TYPE_1, INVALID_TYPE)));","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"craigtonlian"},"content":"    public void parseInterviews_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(ParserUtil.parseInterviews(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"craigtonlian"},"content":"    public void parseInterviews_collectionWithValidInterviews_returnsInterviewList() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"craigtonlian"},"content":"        List\u003cInterview\u003e actualInterviewList \u003d ParserUtil","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"CelestineTan03"},"content":"                .parseInterviews(Arrays.asList(VALID_TYPE_1, VALID_TYPE_2));","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"craigtonlian"},"content":"        List\u003cInterview\u003e expectedInterviewList \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"CelestineTan03"},"content":"                Arrays.asList(new Interview(VALID_TYPE_1, new Rating(\"-\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"CelestineTan03"},"content":"                        new Interview(VALID_TYPE_2, new Rating(\"-\"))));","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedInterviewList, actualInterviewList);","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":215,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":216,"author":{"gitId":"ivanleekk"},"content":"    public void parseDescriptor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":217,"author":{"gitId":"ivanleekk"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescriptor((String) null));","lastModifiedDate":"2023-10-14"},{"lineNumber":218,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":219,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":220,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":221,"author":{"gitId":"ivanleekk"},"content":"    public void parseDescriptor_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":222,"author":{"gitId":"ivanleekk"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescriptor(INVALID_DESCRIPTOR));","lastModifiedDate":"2023-10-14"},{"lineNumber":223,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":224,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":225,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":226,"author":{"gitId":"ivanleekk"},"content":"    public void parseDescriptor_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":227,"author":{"gitId":"ivanleekk"},"content":"        Descriptor expectedDescriptor \u003d Descriptor.NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":228,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(expectedDescriptor, ParserUtil.parseDescriptor(VALID_DESCRIPTOR));","lastModifiedDate":"2023-10-14"},{"lineNumber":229,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":230,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":231,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":232,"author":{"gitId":"ivanleekk"},"content":"    public void parseDescriptor_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":233,"author":{"gitId":"ivanleekk"},"content":"        String descriptorWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTOR + WHITESPACE;","lastModifiedDate":"2023-10-14"},{"lineNumber":234,"author":{"gitId":"ivanleekk"},"content":"        Descriptor expectedDescriptor \u003d Descriptor.NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":235,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(expectedDescriptor, ParserUtil.parseDescriptor(descriptorWithWhitespace));","lastModifiedDate":"2023-10-14"},{"lineNumber":236,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":237,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":238,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":239,"author":{"gitId":"CelestineTan03"},"content":"    public void standardizeCapitalization_validValueWithCapitalization_returnsCapitalizedString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":240,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(VALID_NAME, ParserUtil.standardizeCapitalization(CAPITALIZED_NAME));","lastModifiedDate":"2023-10-16"},{"lineNumber":241,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"CelestineTan03"},"content":"    public void parseType_validValuesWithUppercaseType_returnsLowercaseType() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"CelestineTan03"},"content":"        String typeWithUppercase \u003d VALID_TYPE_1.toUpperCase();","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(VALID_TYPE_1, ParserUtil.parseType(typeWithUppercase));","lastModifiedDate":"2023-10-23"},{"lineNumber":247,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":249,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"CelestineTan03"},"content":"    public void parseType_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseType((String) null));","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"CelestineTan03"},"content":"    public void parseType_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseType(INVALID_TYPE));","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"CelestineTan03"},"content":"    public void parseType_validValueWithoutWhitespace_returnsType() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"CelestineTan03"},"content":"        String typeWithoutWhitespace \u003d VALID_TYPE_1;","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(VALID_TYPE_1, ParserUtil.parseType(typeWithoutWhitespace));","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"CelestineTan03"},"content":"    public void parseType_validValueWithWhitespace_returnsTrimmedType() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"CelestineTan03"},"content":"        String typeWithWhitespace \u003d WHITESPACE + VALID_TYPE_1 + WHITESPACE;","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(VALID_TYPE_1, ParserUtil.parseType(typeWithWhitespace));","lastModifiedDate":"2023-10-23"},{"lineNumber":269,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":272,"author":{"gitId":"CelestineTan03"},"content":"    public void parseRating_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":273,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRating((String) null));","lastModifiedDate":"2023-10-23"},{"lineNumber":274,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":275,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":276,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":277,"author":{"gitId":"CelestineTan03"},"content":"    public void parseRating_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":278,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRating(INVALID_RATING));","lastModifiedDate":"2023-10-23"},{"lineNumber":279,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"CelestineTan03"},"content":"    public void parseRating_validValueWithoutWhitespace_returnsRating() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":283,"author":{"gitId":"CelestineTan03"},"content":"        Rating expectedRating \u003d new Rating(VALID_RATING);","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(expectedRating, ParserUtil.parseRating(VALID_RATING));","lastModifiedDate":"2023-10-23"},{"lineNumber":285,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":286,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":287,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":288,"author":{"gitId":"CelestineTan03"},"content":"    public void parseRating_validValueWithWhitespace_returnsTrimmedRating() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":289,"author":{"gitId":"CelestineTan03"},"content":"        String ratingWithWhitespace \u003d WHITESPACE + VALID_RATING + WHITESPACE;","lastModifiedDate":"2023-10-23"},{"lineNumber":290,"author":{"gitId":"CelestineTan03"},"content":"        Rating expectedRating \u003d new Rating(VALID_RATING);","lastModifiedDate":"2023-10-23"},{"lineNumber":291,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(expectedRating, ParserUtil.parseRating(ratingWithWhitespace));","lastModifiedDate":"2023-10-23"},{"lineNumber":292,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"CelestineTan03":83,"craigtonlian":52,"-":132,"ivanleekk":26}},{"path":"src/test/java/seedu/staffsnap/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.SortCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"class SortCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    public void parse_descriptorOnly_success() throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"        SortCommand expectedStatusCommand \u003d new SortCommand(Descriptor.PHONE, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"        assertParseSuccess(parser, \" d/phone\", expectedStatusCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    public void parse_descriptorOnly_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" d/help\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    public void parse_descriptorAndAscending_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"        SortCommand expectedStatusCommand \u003d new SortCommand(Descriptor.PHONE, false);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"        assertParseSuccess(parser, \" d/phone asc/\", expectedStatusCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"    public void parse_descriptorAndAscending_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" d/help asc/\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"    public void parse_descriptorAndDescending_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        SortCommand expectedStatusCommand \u003d new SortCommand(Descriptor.PHONE, true);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"        assertParseSuccess(parser, \" d/phone dsc/\", expectedStatusCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"    public void parse_descriptorAndDescending_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" d/help dsc/\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"ivanleekk":48}},{"path":"src/test/java/seedu/staffsnap/logic/parser/StatusCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package seedu.staffsnap.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import static seedu.staffsnap.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.logic.commands.StatusCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"class StatusCommandParserTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    private StatusCommandParser parser \u003d new StatusCommandParser();","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    void parse_validArgs_returnsStatusCommand() {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"        StatusCommand expectedStatusCommand \u003d new StatusCommand(Index.fromOneBased(1), Status.OFFERED);","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"        assertParseSuccess(parser, \"1 s/ o\", expectedStatusCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    void parse_missingStatus_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"        assertParseFailure(parser, \"1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_NO_STATUS));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"    void parse_missingIndex_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"        assertParseFailure(parser, \"s/ o\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"                StatusCommand.MESSAGE_NO_INDEX));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"craigtonlian":1,"ivanleekk":39}},{"path":"src/test/java/seedu/staffsnap/model/ApplicantBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_INTERVIEW_BEHAVIORAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantBookTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    private final ApplicantBook applicantBook \u003d new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(Collections.emptyList(), applicantBook.getApplicantList());","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e applicantBook.resetData(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    public void resetData_withValidReadOnlyApplicantBook_replacesData() {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook newData \u003d getTypicalApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        applicantBook.resetData(newData);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(newData, applicantBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"    public void resetData_withDuplicateApplicants_throwsDuplicateApplicantException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        // Two applicants with the same identity fields","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE)","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"                .withPosition(VALID_POSITION_BOB).withInterviews(VALID_INTERVIEW_BEHAVIORAL).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e newApplicants \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBookStub newData \u003d new ApplicantBookStub(newApplicants);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e applicantBook.resetData(newData));","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"    public void hasApplicant_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e applicantBook.hasApplicant(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"    public void hasApplicant_applicantNotInApplicantBook_returnsFalse() {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(applicantBook.hasApplicant(ALICE));","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"    public void hasApplicant_applicantInApplicantBook_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"        applicantBook.addApplicant(ALICE);","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(applicantBook.hasApplicant(ALICE));","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"    public void hasApplicant_applicantWithSameIdentityFieldsInApplicantBook_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"        applicantBook.addApplicant(ALICE);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE)","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"                .withPosition(VALID_POSITION_BOB).withInterviews(VALID_INTERVIEW_BEHAVIORAL).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(applicantBook.hasApplicant(editedAlice));","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"    public void getApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e applicantBook.getApplicantList().remove(0));","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"        String expected \u003d ApplicantBook.class.getCanonicalName()","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"                + \"{applicants\u003d\" + applicantBook.getApplicantList() + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expected, applicantBook.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"     * A stub ReadOnlyApplicantBook whose applicants list can violate interface constraints.","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"    private static class ApplicantBookStub implements ReadOnlyApplicantBook {","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"        private final ObservableList\u003cApplicant\u003e applicants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBookStub(Collection\u003cApplicant\u003e applicants) {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"            this.applicants.setAll(applicants);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"        public ObservableList\u003cApplicant\u003e getApplicantList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"            return applicants;","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"CelestineTan03":3,"craigtonlian":46,"-":60}},{"path":"src/test/java/seedu/staffsnap/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Descriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBookBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(new ApplicantBook(), new ApplicantBook(modelManager.getApplicantBook()));","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        userPrefs.setApplicantBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        userPrefs.setApplicantBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicantBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setApplicantBookFilePath(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicantBookFilePath_validPath_setsApplicantBookFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        modelManager.setApplicantBookFilePath(path);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(path, modelManager.getApplicantBookFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"    public void hasApplicant_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasApplicant(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"    public void hasApplicant_applicantNotInApplicantBook_returnsFalse() {","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(modelManager.hasApplicant(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"    public void hasApplicant_applicantInApplicantBook_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"        modelManager.addApplicant(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(modelManager.hasApplicant(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"    public void getFilteredApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredApplicantList().remove(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"    public void updateSortedApplicantList_setDescriptor_changesDescriptor() {","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"        modelManager.updateSortedApplicantList(Descriptor.PHONE, false);","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"        assert(Applicant.getDescriptor() \u003d\u003d Descriptor.PHONE);","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook applicantBook \u003d new ApplicantBookBuilder().withApplicant(ALICE).withApplicant(BENSON).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook differentApplicantBook \u003d new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"        modelManager \u003d new ModelManager(applicantBook, userPrefs);","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(applicantBook, userPrefs);","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"craigtonlian"},"content":"        // different applicantBook -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentApplicantBook, userPrefs)));","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":128,"author":{"gitId":"craigtonlian"},"content":"        modelManager.updateFilteredApplicantList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(modelManager.equals(new ModelManager(applicantBook, userPrefs)));","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"craigtonlian"},"content":"        modelManager.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"craigtonlian"},"content":"        differentUserPrefs.setApplicantBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(modelManager.equals(new ModelManager(applicantBook, differentUserPrefs)));","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"craigtonlian":36,"-":96,"ivanleekk":7}},{"path":"src/test/java/seedu/staffsnap/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicantBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setApplicantBookFilePath(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"craigtonlian":4,"-":17}},{"path":"src/test/java/seedu/staffsnap/model/applicant/ApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_INTERVIEW_BEHAVIORAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_POSITION_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e applicant.getInterviews().remove(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    public void isSameApplicant() {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"        assertTrue(AMY.isSameApplicant(AMY));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(AMY.isSameApplicant(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"        // same phone number, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"        assertTrue(BOB.isSameApplicant(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"        // same email, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"        assertTrue(BOB.isSameApplicant(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"        // same email and same phone number, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"        assertTrue(BOB.isSameApplicant(editedAlice));","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"        // different phone number and email, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(ALICE.isSameApplicant(editedAlice));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"        // email differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"        Applicant editedBob \u003d new ApplicantBuilder(BOB).withEmail(VALID_EMAIL_BOB.toUpperCase()).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"        assertTrue(BOB.isSameApplicant(editedBob));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        editedBob \u003d new ApplicantBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"        assertTrue(BOB.isSameApplicant(editedBob));","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"        Applicant aliceCopy \u003d new ApplicantBuilder(ALICE).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withPosition(VALID_POSITION_AMY).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"        // different interviews -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"CelestineTan03"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withInterviews(VALID_INTERVIEW_BEHAVIORAL).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"    public void compareByName_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(false);","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(ALICE.compareByName(BOB) \u003c 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"    public void compareByName_descending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(true);","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(ALICE.compareByName(BOB) \u003e 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"ivanleekk"},"content":"    public void compareByPhone_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(false);","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant1 \u003d new ApplicantBuilder(ALICE).withPhone(\"88888888\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant2 \u003d new ApplicantBuilder(ALICE).withPhone(\"99999999\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(applicant1.compareByPhone(applicant2) \u003c 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"ivanleekk"},"content":"    public void compareByPhone_descending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(true);","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant1 \u003d new ApplicantBuilder(ALICE).withPhone(\"88888888\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant2 \u003d new ApplicantBuilder(ALICE).withPhone(\"99999999\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(applicant1.compareByPhone(applicant2) \u003e 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"ivanleekk"},"content":"    public void compareByScore_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(false);","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant1 \u003d new ApplicantBuilder(ALICE).withScore(new Score(10, 5, 2)).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant2 \u003d new ApplicantBuilder(ALICE).withScore(new Score(20, 10, 2)).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(applicant1.compareByScore(applicant2) \u003c 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"ivanleekk"},"content":"    public void compareByScore_descending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(true);","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant1 \u003d new ApplicantBuilder(ALICE).withScore(new Score(10, 5, 2)).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant2 \u003d new ApplicantBuilder(ALICE).withScore(new Score(20, 10, 2)).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(applicant1.compareByScore(applicant2) \u003e 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"ivanleekk"},"content":"    public void compareByEmail_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(false);","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant1 \u003d new ApplicantBuilder(ALICE).withEmail(\"abc@example.com\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant2 \u003d new ApplicantBuilder(ALICE).withEmail(\"bbc@example.com\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(applicant1.compareByEmail(applicant2) \u003c 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"ivanleekk"},"content":"    public void compareByEmail_descending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(true);","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant1 \u003d new ApplicantBuilder(ALICE).withEmail(\"abc@example.com\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant2 \u003d new ApplicantBuilder(ALICE).withEmail(\"bbc@example.com\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(applicant1.compareByEmail(applicant2) \u003e 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"ivanleekk"},"content":"    public void compareByStatus_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(false);","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant1 \u003d new ApplicantBuilder(ALICE).withStatus(\"UNDECIDED\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant2 \u003d new ApplicantBuilder(ALICE).withStatus(\"OFFERED\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(applicant1.compareByStatus(applicant2) \u003c 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"ivanleekk"},"content":"    public void compareByStatus_descending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(true);","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant1 \u003d new ApplicantBuilder(ALICE).withStatus(\"UNDECIDED\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant2 \u003d new ApplicantBuilder(ALICE).withStatus(\"OFFERED\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(applicant1.compareByStatus(applicant2) \u003e 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":177,"author":{"gitId":"ivanleekk"},"content":"    public void compareByPosition_ascending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(false);","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant1 \u003d new ApplicantBuilder(ALICE).withPosition(\"abc\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant2 \u003d new ApplicantBuilder(ALICE).withPosition(\"bbc\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(applicant1.compareByPosition(applicant2) \u003c 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"ivanleekk"},"content":"    public void compareByPosition_descending() {","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"ivanleekk"},"content":"        Applicant.setIsDescendingOrder(true);","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant1 \u003d new ApplicantBuilder(ALICE).withPosition(\"abc\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"ivanleekk"},"content":"        Applicant applicant2 \u003d new ApplicantBuilder(ALICE).withPosition(\"bbc\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(applicant1.compareByPosition(applicant2) \u003e 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":190,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"craigtonlian"},"content":"        String expected \u003d Applicant.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName()","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"craigtonlian"},"content":"                + \", phone\u003d\" + ALICE.getPhone() + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"ivanleekk"},"content":"                + \", position\u003d\" + ALICE.getPosition() + \", interviews\u003d\" + ALICE.getInterviews()","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"ivanleekk"},"content":"                + \", status\u003d\" + ALICE.getStatus() + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"CelestineTan03":23,"craigtonlian":26,"-":58,"ivanleekk":93}},{"path":"src/test/java/seedu/staffsnap/model/applicant/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // exceed 30 characters","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        // local part has two consecutive periods","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"        // mixture of alphanumeric and special characters","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"craigtonlian":7,"-":82}},{"path":"src/test/java/seedu/staffsnap/model/applicant/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"        // Name contains single keyword","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"A\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jingting1412"},"content":"        // Name contains multiple keywords","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"jingting1412"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"bo\", \"ali\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jingting1412"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        // Keywords match phone, email and position, but does not match name","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"                .withEmail(\"alice@email.com\").withPosition(\"Main Street\").build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"craigtonlian":12,"jingting1412":7,"-":74}},{"path":"src/test/java/seedu/staffsnap/model/applicant/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // exceeds 25 characters","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"craigtonlian":4,"-":57}},{"path":"src/test/java/seedu/staffsnap/model/applicant/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"craigtonlian":2,"-":58}},{"path":"src/test/java/seedu/staffsnap/model/applicant/PositionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"public class PositionTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Position(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    public void constructor_invalidPosition_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"        String invalidPosition \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Position(invalidPosition));","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    public void isValidPosition() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"        // null position","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e Position.isValidPosition(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        // invalid positions","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(Position.isValidPosition(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(Position.isValidPosition(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        // valid positions","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(Position.isValidPosition(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(Position.isValidPosition(\"-\")); // one character","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(Position.isValidPosition(","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"                \"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long position","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        Position position \u003d new Position(\"Valid Position\");","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(position.equals(new Position(\"Valid Position\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(position.equals(position));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(position.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(position.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(position.equals(new Position(\"Other Valid Position\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"craigtonlian":57}},{"path":"src/test/java/seedu/staffsnap/model/applicant/ScoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"public class ScoreTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"    public void constructor_invalidScore_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"        // negative total score","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Score(-1, 0, 0));","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"        // more than 1dp total score","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Score(2.222, 1, 0));","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"        // negative average score","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Score(0, -1, 0));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"        // more than 1dp average score","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Score(0, 1.11, 1));","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"        // negative number of ratings","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Score(0, 0, -1));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"    public void getNumberOfDecimals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"        // 1dp","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(1, Score.getNumberOfDecimals(1.1));","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"        // 2dp","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(2, Score.getNumberOfDecimals(1.11));","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"    public void isValidScore() {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"        // negative total score","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(Score.isValidScore(-1, 0, 0));","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"        // more than 1dp total score","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(Score.isValidScore(2.222, 1, 0));","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"        // negative average score","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(Score.isValidScore(0, -1, 0));","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"        // more than 1dp average score","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(Score.isValidScore(0, 1.11, 1));","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"        // negative number of ratings","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(Score.isValidScore(0, 0, -1));","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"    public void updateScore_newInterview() {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"        Interview newInterview \u003d new Interview(\"technical\", new Rating(\"10\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"        Applicant applicant \u003d new ApplicantBuilder(ALICE).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"        applicant.getScore().updateScoreAfterAdd(newInterview);","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(10.0, applicant.getScore().getAverageScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(10.0, applicant.getScore().getTotalScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(1, applicant.getScore().getNumberOfRatings());","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"    public void updateScore_editInterview() {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"        Interview newInterview \u003d new Interview(\"technical\", new Rating(\"10\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"        Applicant applicant \u003d new ApplicantBuilder(BENSON).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"        applicant.getScore().updateScoreAfterEdit(applicant.getInterviews().get(0),","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"CelestineTan03"},"content":"                newInterview);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(10.0, applicant.getScore().getAverageScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(10.0, applicant.getScore().getTotalScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(1, applicant.getScore().getNumberOfRatings());","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"CelestineTan03"},"content":"    public void decreaseScore_deleteInterview() {","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"CelestineTan03"},"content":"        Applicant applicant \u003d new ApplicantBuilder(ALICE)","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"CelestineTan03"},"content":"                .withScore(new Score(8.1, 8.1, 1)).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"CelestineTan03"},"content":"        Interview interviewToBeDeleted \u003d new Interview(\"technical\", new Rating(\"8.1\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"CelestineTan03"},"content":"        applicant.getScore().updateScoreAfterDelete(interviewToBeDeleted);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(0.0, ALICE.getScore().getAverageScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(0.0, ALICE.getScore().getTotalScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(0, ALICE.getScore().getNumberOfRatings());","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"CelestineTan03"},"content":"    public void hasRating_noInterviews() {","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(false, ALICE.getScore().hasRating());","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"CelestineTan03"},"content":"    public void hasRating_validInterviews() {","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(true, BENSON.getScore().hasRating());","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"CelestineTan03"},"content":"    public void getAverageScore_noInterviews() {","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(0.0, ALICE.getScore().getAverageScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"CelestineTan03"},"content":"    public void getAverageScore_validInterviews() {","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(8.0, BENSON.getScore().getAverageScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"CelestineTan03"},"content":"    public void getTotalScore_noInterviews() {","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(0.0, ALICE.getScore().getTotalScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"CelestineTan03"},"content":"    public void getTotalScore_validInterviews() {","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(8.0, BENSON.getScore().getTotalScore());","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"CelestineTan03"},"content":"    public void getNumberOfRatings_noInterviews() {","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(0, ALICE.getScore().getNumberOfRatings());","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"CelestineTan03"},"content":"    public void getNumberOfRatings_validInterviews() {","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(1, BENSON.getScore().getNumberOfRatings());","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"CelestineTan03"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(\"8.0\", BENSON.getScore().toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"CelestineTan03":137}},{"path":"src/test/java/seedu/staffsnap/model/applicant/UniqueApplicantListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_INTERVIEW_BEHAVIORAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"public class UniqueApplicantListTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    private final UniqueApplicantList uniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    public void contains_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.contains(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    public void contains_applicantNotInList_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(uniqueApplicantList.contains(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"    public void contains_applicantInList_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(uniqueApplicantList.contains(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    public void contains_applicantWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE)","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"                .withPosition(VALID_POSITION_BOB).withInterviews(VALID_INTERVIEW_BEHAVIORAL).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        assertTrue(uniqueApplicantList.contains(editedAlice));","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"    public void add_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.add(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"    public void add_duplicateApplicant_throwsDuplicateApplicantException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.add(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicant_nullTargetApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicant(null, ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicant_nullEditedApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, null));","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicant_targetApplicantNotInList_throwsApplicantNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(ApplicantNotFoundException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicant_editedApplicantIsSameApplicant_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.setApplicant(ALICE, ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"        expectedUniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicant_editedApplicantHasSameIdentity_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE)","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"CelestineTan03"},"content":"                .withPosition(VALID_POSITION_BOB).withInterviews(VALID_INTERVIEW_BEHAVIORAL).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.setApplicant(ALICE, editedAlice);","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"        expectedUniqueApplicantList.add(editedAlice);","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicant_editedApplicantHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.setApplicant(ALICE, BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicant_editedApplicantHasNonUniqueIdentity_throwsDuplicateApplicantException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, BOB));","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"    public void remove_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.remove(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"    public void remove_applicantDoesNotExist_throwsApplicantNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(ApplicantNotFoundException.class, () -\u003e uniqueApplicantList.remove(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"craigtonlian"},"content":"    public void remove_existingApplicant_removesApplicant() {","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.remove(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"craigtonlian"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicants_nullUniqueApplicantList_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicants((UniqueApplicantList) null));","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicants_uniqueApplicantList_replacesOwnListWithProvidedUniqueApplicantList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"craigtonlian"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"craigtonlian"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.setApplicants(expectedUniqueApplicantList);","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicants_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicants((List\u003cApplicant\u003e) null));","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicants_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e applicantList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"craigtonlian"},"content":"        uniqueApplicantList.setApplicants(applicantList);","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"craigtonlian"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"craigtonlian"},"content":"    public void setApplicants_listWithDuplicateApplicants_throwsDuplicateApplicantException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"craigtonlian"},"content":"        List\u003cApplicant\u003e listWithDuplicateApplicants \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.setApplicants(","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"craigtonlian"},"content":"                listWithDuplicateApplicants));","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"craigtonlian"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"craigtonlian"},"content":"            -\u003e uniqueApplicantList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"craigtonlian"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(uniqueApplicantList.asUnmodifiableObservableList().toString(), uniqueApplicantList.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"CelestineTan03":3,"craigtonlian":173}},{"path":"src/test/java/seedu/staffsnap/model/interview/InterviewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.model.interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_INTERVIEW_BEHAVIORAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_INTERVIEW_TECHNICAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_TYPE_TECHNICAL;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"public class InterviewTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Interview(null, null));","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    public void constructor_invalidInterviewName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"        String invalidType \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"        Rating validRating \u003d BENSON.getInterviews().get(0).getRating();","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Interview(invalidType, validRating));","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    public void isValidInterviewName() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        // null interview name","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e Interview.isValidType(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    void isValidType() {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"    void getType() {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(BENSON.getInterviews().get(0).getType(), VALID_TYPE_TECHNICAL);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"    void testEquals_nullInterview() {","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(BENSON.getInterviews().get(0).equals(null), false);","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    public void testEquals_sameInterview() {","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(BENSON.getInterviews().get(0).equals(BENSON.getInterviews().get(0)), true);","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"    public void testEquals_differentInterview() {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(BENSON.getInterviews().get(0).equals(VALID_INTERVIEW_BEHAVIORAL), false);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(BENSON.getInterviews().get(0).hashCode(), BENSON.getInterviews().get(0).hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"    void compareTo() {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"        Rating rating \u003d VALID_INTERVIEW_BEHAVIORAL.getRating();","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals((new Interview(\"a\", rating)).compareTo(new Interview(\"a\", rating)), 0);","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals((new Interview(\"a\", rating)).compareTo(new Interview(\"b\", rating)), -1);","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals((new Interview(\"b\", rating)).compareTo(new Interview(\"a\", rating)), 1);","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"    public void isSameInterview() {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"        // same interview type -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"        assertTrue(VALID_INTERVIEW_TECHNICAL.isContainedIn(BENSON.getInterviews()));","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"CelestineTan03"},"content":"        // different interview type -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(VALID_INTERVIEW_BEHAVIORAL.isContainedIn(BENSON.getInterviews()));","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"CelestineTan03":22,"craigtonlian":57}},{"path":"src/test/java/seedu/staffsnap/model/interview/RatingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package seedu.staffsnap.model.interview;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.CARL;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.DANIEL;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"public class RatingTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Rating(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"    public void constructor_invalidRating_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"        String invalidRating \u003d \"a\";","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rating(invalidRating));","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"    public void isValidRating() {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"        // null rating","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"        assertThrows(NullPointerException.class, () -\u003e Rating.isValidRating(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"        // negative rating","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(Rating.isValidRating(\"-1\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"        // rating out of range","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(Rating.isValidRating(\"15\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"        // non numeric rating","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(Rating.isValidRating(\"a\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"    public void equals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"        // same rating -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"        Rating sameRating \u003d new Rating(DANIEL.getInterviews().get(0).getRating().value);","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"        assertTrue(BENSON.getInterviews().get(0).getRating().equals(sameRating));","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"        assertTrue(sameRating.equals(sameRating));","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(sameRating.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"        // different rating -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"        Rating differentRating \u003d CARL.getInterviews().get(0).getRating();","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"        assertFalse(sameRating.equals(differentRating));","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"        String expected \u003d BENSON.getInterviews().get(0).getRating().value;","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(expected, BENSON.getInterviews().get(0).getRating().toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"        // same object -\u003e equal hashcode","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"        String rating \u003d BENSON.getInterviews().get(0).getRating().value;","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(rating.hashCode(), rating.hashCode());","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"        // same rating -\u003e equal hashcode","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"        String sameRating \u003d DANIEL.getInterviews().get(0).getRating().value;","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(rating.hashCode(), sameRating.hashCode());","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"CelestineTan03":74}},{"path":"src/test/java/seedu/staffsnap/storage/JsonAdaptedApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.storage.JsonAdaptedApplicant.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"public class JsonAdaptedApplicantTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    private static final String INVALID_POSITION \u003d \" \";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"    private static final String INVALID_INTERVIEW \u003d \"#friend\";","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    private static final String INVALID_TYPE \u003d \" \";","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"    private static final String INVALID_RATING \u003d \"15.0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    private static final String INVALID_STATUS \u003d \"POP\";","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    private static final String VALID_POSITION \u003d BENSON.getPosition().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    private static final List\u003cJsonAdaptedInterview\u003e VALID_INTERVIEWS \u003d BENSON.getInterviews().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"            .map(JsonAdaptedInterview::new)","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"    private static final String VALID_STATUS \u003d \"O\";","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"    private static final double VALID_TOTAL_SCORE \u003d 0.0;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"    private static final double VALID_AVERAGE_SCORE \u003d 0.0;","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"    public void toModelType_validApplicantDetails_returnsApplicant() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(BENSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(BENSON, applicant.toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"                new JsonAdaptedApplicant(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_POSITION, VALID_INTERVIEWS,","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"                        VALID_STATUS, VALID_AVERAGE_SCORE, VALID_TOTAL_SCORE);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_POSITION, VALID_INTERVIEWS, VALID_STATUS,","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"                VALID_AVERAGE_SCORE, VALID_TOTAL_SCORE);","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"                new JsonAdaptedApplicant(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_POSITION, VALID_INTERVIEWS,","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"                        VALID_STATUS, VALID_AVERAGE_SCORE, VALID_TOTAL_SCORE);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"                VALID_NAME, null, VALID_EMAIL, VALID_POSITION, VALID_INTERVIEWS, VALID_STATUS,","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"CelestineTan03"},"content":"                VALID_AVERAGE_SCORE, VALID_TOTAL_SCORE);","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"                new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_POSITION, VALID_INTERVIEWS,","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"CelestineTan03"},"content":"                        VALID_STATUS, VALID_AVERAGE_SCORE, VALID_TOTAL_SCORE);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"CelestineTan03"},"content":"                VALID_NAME, VALID_PHONE, null, VALID_POSITION, VALID_INTERVIEWS, VALID_STATUS,","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"CelestineTan03"},"content":"                VALID_AVERAGE_SCORE, VALID_TOTAL_SCORE);","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"    public void toModelType_invalidPosition_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"                new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_POSITION, VALID_INTERVIEWS,","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"CelestineTan03"},"content":"                        VALID_STATUS, VALID_AVERAGE_SCORE, VALID_TOTAL_SCORE);","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d Position.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"    public void toModelType_nullPosition_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"CelestineTan03"},"content":"                VALID_EMAIL, null, VALID_INTERVIEWS, VALID_STATUS, VALID_AVERAGE_SCORE, VALID_TOTAL_SCORE);","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Position.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"craigtonlian"},"content":"    public void toModelType_invalidInterviews_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"        List\u003cJsonAdaptedInterview\u003e invalidInterviews \u003d new ArrayList\u003c\u003e(VALID_INTERVIEWS);","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"CelestineTan03"},"content":"        invalidInterviews.add(new JsonAdaptedInterview(INVALID_TYPE, INVALID_RATING));","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ivanleekk"},"content":"                new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_POSITION, invalidInterviews,","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"CelestineTan03"},"content":"                        VALID_STATUS, VALID_AVERAGE_SCORE, VALID_TOTAL_SCORE);","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, applicant::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"CelestineTan03":17,"craigtonlian":48,"-":56,"ivanleekk":7}},{"path":"src/test/java/seedu/staffsnap/storage/JsonApplicantBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.HOON;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.IDA;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"public class JsonApplicantBookStorageTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonApplicantBookStorageTest\");","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"    @TempDir","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    public void readApplicantBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e readApplicantBook(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    private java.util.Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook(String filePath) throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        return new JsonApplicantBookStorage(","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"                Paths.get(filePath)).readApplicantBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"                : null;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        assertFalse(readApplicantBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readApplicantBook(\"notJsonFormatApplicantBook.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"    public void readApplicantBook_invalidApplicantApplicantBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readApplicantBook(\"invalidApplicantApplicantBook.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"    public void readApplicantBook_invalidAndValidApplicantApplicantBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readApplicantBook(\"invalidAndValidApplicantApplicantBook.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"    public void readAndSaveApplicantBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        Path filePath \u003d testFolder.resolve(\"TempApplicantBook.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook original \u003d getTypicalApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"        JsonApplicantBookStorage jsonApplicantBookStorage \u003d new JsonApplicantBookStorage(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"        jsonApplicantBookStorage.saveApplicantBook(original, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"        ReadOnlyApplicantBook readBack \u003d jsonApplicantBookStorage.readApplicantBook(filePath).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(original, new ApplicantBook(readBack));","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"        original.addApplicant(HOON);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"        original.removeApplicant(ALICE);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"        jsonApplicantBookStorage.saveApplicantBook(original, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"        readBack \u003d jsonApplicantBookStorage.readApplicantBook(filePath).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(original, new ApplicantBook(readBack));","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"        original.addApplicant(IDA);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"        jsonApplicantBookStorage.saveApplicantBook(original); // file path not specified","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"        readBack \u003d jsonApplicantBookStorage.readApplicantBook().get(); // file path not specified","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(original, new ApplicantBook(readBack));","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"    public void saveApplicantBook_nullApplicantBook_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveApplicantBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"     * Saves {@code applicantBook} at the specified {@code filePath}.","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"    private void saveApplicantBook(ReadOnlyApplicantBook applicantBook, String filePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"            new JsonApplicantBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"                    .saveApplicantBook(applicantBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"craigtonlian"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"craigtonlian"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"craigtonlian"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"    public void saveApplicantBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveApplicantBook(new ApplicantBook(), null));","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"craigtonlian":111}},{"path":"src/test/java/seedu/staffsnap/storage/JsonSerializableApplicantBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.util.JsonUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.testutil.TypicalApplicants;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"public class JsonSerializableApplicantBookTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"            .get(\"src\", \"test\", \"data\", \"JsonSerializableApplicantBookTest\");","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"    private static final Path TYPICAL_APPLICANTS_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"            .resolve(\"typicalApplicantsApplicantBook.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    private static final Path INVALID_APPLICANT_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"            .resolve(\"invalidApplicantApplicantBook.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    private static final Path DUPLICATE_APPLICANT_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"            .resolve(\"duplicateApplicantApplicantBook.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    public void toModelType_typicalApplicantsFile_success() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        JsonSerializableApplicantBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_APPLICANTS_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"                JsonSerializableApplicantBook.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook applicantBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"        ApplicantBook typicalApplicantsApplicantBook \u003d TypicalApplicants.getTypicalApplicantBookJsonTest();","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(applicantBookFromFile, typicalApplicantsApplicantBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"    public void toModelType_invalidApplicantFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"        JsonSerializableApplicantBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_APPLICANT_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"                JsonSerializableApplicantBook.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"    public void toModelType_duplicateApplicants_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"        JsonSerializableApplicantBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_APPLICANT_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"                JsonSerializableApplicantBook.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableApplicantBook.MESSAGE_DUPLICATE_APPLICANT,","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"craigtonlian":50,"ivanleekk":1}},{"path":"src/test/java/seedu/staffsnap/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"        userPrefs.setApplicantBookFilePath(Paths.get(\"applicantBook.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"craigtonlian":6,"-":117}},{"path":"src/test/java/seedu/staffsnap/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.GuiSettings;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ReadOnlyApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.UserPrefs;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        JsonApplicantBookStorage applicantBookStorage \u003d new JsonApplicantBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"        storageManager \u003d new StorageManager(applicantBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"    public void applicantBookReadSave() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"         * {@link JsonApplicantBookStorage} class.","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonApplicantBookStorageTest} class.","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook original \u003d getTypicalApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        storageManager.saveApplicantBook(original);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"        ReadOnlyApplicantBook retrieved \u003d storageManager.readApplicantBook().get();","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"        assertEquals(original, new ApplicantBook(retrieved));","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"    public void getApplicantBookFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"        assertNotNull(storageManager.getApplicantBookFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":17,"-":51}},{"path":"src/test/java/seedu/staffsnap/testutil/ApplicantBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":" * A utility class to help with building ApplicantBook objects.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":" *     {@code ApplicantBook ab \u003d new ApplicantBookBuilder().withApplicant(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantBookBuilder {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"    private ApplicantBook applicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBookBuilder() {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"        applicantBook \u003d new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBookBuilder(ApplicantBook applicantBook) {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"        this.applicantBook \u003d applicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"     * Adds a new {@code Applicant} to the {@code ApplicantBook} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBookBuilder withApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"        applicantBook.addApplicant(applicant);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBook build() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"        return applicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"craigtonlian":34}},{"path":"src/test/java/seedu/staffsnap/testutil/ApplicantBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.applicant.Score;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":" * A utility class to help with building Applicant objects.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantBuilder {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    public static final String DEFAULT_POSITION \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"    public static final String DEFAULT_STATUS \u003d \"UNDECIDED\";","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    private Name name;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    private Email email;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"    private Position position;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    private List\u003cInterview\u003e interviews;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"    private Status status;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"    private Score score;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"     * Creates a {@code ApplicantBuilder} with the default details.","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBuilder() {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        position \u003d new Position(DEFAULT_POSITION);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"        interviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"        status \u003d Status.findByName(DEFAULT_STATUS);","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"        score \u003d new Score(interviews);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"     * Initializes the ApplicantBuilder with the data of {@code applicantToCopy}.","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBuilder(Applicant applicantToCopy) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        name \u003d applicantToCopy.getName();","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"        phone \u003d applicantToCopy.getPhone();","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"        email \u003d applicantToCopy.getEmail();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"        position \u003d applicantToCopy.getPosition();","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"        interviews \u003d new ArrayList\u003c\u003e(applicantToCopy.getInterviews());","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"        status \u003d applicantToCopy.getStatus();","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"        score \u003d applicantToCopy.getScore();","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"     * Sets the {@code Name} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBuilder withName(String name) {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"     * Parses the {@code interviews} into a {@code List\u003cInterview\u003e} and set it to the {@code Applicant} that we are","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"     * building.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"    public ApplicantBuilder withInterviews(Interview ... interviews) {","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"        this.interviews \u003d SampleDataUtil.getInterviewList(interviews);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"     * Sets the {@code Position} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBuilder withPosition(String position) {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"        this.position \u003d new Position(position);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"     * Sets the {@code Phone} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"craigtonlian"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"     * Sets the {@code Email} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"craigtonlian"},"content":"    public ApplicantBuilder withEmail(String email) {","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"craigtonlian"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"     * Sets the {@code Status} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"    public ApplicantBuilder withStatus(String status) {","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"        this.status \u003d Status.findByName(status);","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"CelestineTan03"},"content":"     * Sets the {@code Score} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"CelestineTan03"},"content":"    public ApplicantBuilder withScore(Score score) {","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"CelestineTan03"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"CelestineTan03"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"craigtonlian"},"content":"    public Applicant build() {","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"CelestineTan03"},"content":"        return new Applicant(name, phone, email, position, interviews, status, score);","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"CelestineTan03":14,"craigtonlian":95,"ivanleekk":13}},{"path":"src/test/java/seedu/staffsnap/testutil/ApplicantUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.testutil;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.AddCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":" * A utility class for Applicant.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"public class ApplicantUtil {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"     * Returns an add command string for adding the {@code applicant}.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"    public static String getAddCommand(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getApplicantDetails(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"     * Returns the part of command string for the given {@code applicant}\u0027s details.","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    public static String getApplicantDetails(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"        sb.append(PREFIX_NAME + applicant.getName().fullName + \" \");","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"        sb.append(PREFIX_PHONE + applicant.getPhone().value + \" \");","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"        sb.append(PREFIX_EMAIL + applicant.getEmail().value + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"        sb.append(PREFIX_POSITION + applicant.getPosition().value + \" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"        applicant.getInterviews().stream().forEach(","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"            s -\u003e sb.append(PREFIX_TYPE + s.type + \" \")","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"     * Returns the part of command string for the given {@code EditApplicantDescriptor}\u0027s details.","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"    public static String getEditApplicantDescriptorDetails(EditApplicantDescriptor descriptor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value)","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"                .append(\" \"));","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"        descriptor.getPosition().ifPresent(position -\u003e sb.append(PREFIX_POSITION).append(position.value).append(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"        if (descriptor.getInterviews().isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"            List\u003cInterview\u003e interviews \u003d descriptor.getInterviews().get();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"            if (!interviews.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"                interviews.forEach(s -\u003e sb.append(PREFIX_TYPE).append(s.type).append(\" \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"CelestineTan03":1,"craigtonlian":32,"-":28}},{"path":"src/test/java/seedu/staffsnap/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.testutil;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"craigtonlian":1,"-":33}},{"path":"src/test/java/seedu/staffsnap/testutil/EditApplicantDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Position;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Score;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"import seedu.staffsnap.model.applicant.Status;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"craigtonlian"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":" * A utility class to help with building EditApplicantDescriptor objects.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"craigtonlian"},"content":"public class EditApplicantDescriptorBuilder {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"craigtonlian"},"content":"    private EditApplicantDescriptor descriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"craigtonlian"},"content":"    public EditApplicantDescriptorBuilder() {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"        descriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"craigtonlian"},"content":"    public EditApplicantDescriptorBuilder(EditApplicantDescriptor descriptor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"craigtonlian"},"content":"        this.descriptor \u003d new EditApplicantDescriptor(descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"craigtonlian"},"content":"     * Returns an {@code EditApplicantDescriptor} with fields containing {@code applicant}\u0027s details","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    public EditApplicantDescriptorBuilder(Applicant applicant) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"craigtonlian"},"content":"        descriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"craigtonlian"},"content":"        descriptor.setName(applicant.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        descriptor.setPhone(applicant.getPhone());","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"        descriptor.setEmail(applicant.getEmail());","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"craigtonlian"},"content":"        descriptor.setPosition(applicant.getPosition());","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"craigtonlian"},"content":"        descriptor.setInterviews(applicant.getInterviews());","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"        descriptor.setScore(applicant.getScore());","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"craigtonlian"},"content":"     * Sets the {@code Name} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    public EditApplicantDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"     * Sets the {@code Phone} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"craigtonlian"},"content":"    public EditApplicantDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"craigtonlian"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"craigtonlian"},"content":"     * Sets the {@code Email} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"craigtonlian"},"content":"    public EditApplicantDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"craigtonlian"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"craigtonlian"},"content":"     * Sets the {@code Position} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"craigtonlian"},"content":"    public EditApplicantDescriptorBuilder withPosition(String position) {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"craigtonlian"},"content":"        descriptor.setPosition(new Position(position));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"craigtonlian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"craigtonlian"},"content":"     * Parses the {@code interviews} into a {@code List\u003cInterview\u003e} and set it to the {@code EditApplicantDescriptor}","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"craigtonlian"},"content":"     * that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"craigtonlian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"craigtonlian"},"content":"    public EditApplicantDescriptorBuilder withInterviews(String... interviews) {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"CelestineTan03"},"content":"        List\u003cInterview\u003e interviewList \u003d Stream.of(interviews).map(interview -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"CelestineTan03"},"content":"                new Interview(interview, new Rating(\"-\"))).collect(Collectors.toList());","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"craigtonlian"},"content":"        descriptor.setInterviews(interviewList);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"craigtonlian"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"craigtonlian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"     * Sets the {@code score} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"    public EditApplicantDescriptorBuilder withScore(Score score) {","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"        descriptor.setScore(new Score(score));","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"     * Sets the {@code score} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"    public EditApplicantDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"        descriptor.setStatus(Status.findByName(status));","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"craigtonlian"},"content":"    public EditApplicantDescriptor build() {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"craigtonlian"},"content":"        return descriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"craigtonlian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"craigtonlian"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"CelestineTan03":3,"craigtonlian":86,"ivanleekk":19}},{"path":"src/test/java/seedu/staffsnap/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.testutil;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":1,"-":71}},{"path":"src/test/java/seedu/staffsnap/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.testutil;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"     * Returns the middle index of the applicant in the {@code model}\u0027s applicant list.","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"craigtonlian"},"content":"        return Index.fromOneBased(model.getFilteredApplicantList().size() / 2);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"     * Returns the last index of the applicant in the {@code model}\u0027s applicant list.","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"        return Index.fromOneBased(model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"craigtonlian"},"content":"     * Returns the applicant in the {@code model}\u0027s applicant list at {@code index}.","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"    public static Applicant getApplicant(Model model, Index index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"craigtonlian"},"content":"        return model.getFilteredApplicantList().get(index.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"craigtonlian":11,"-":44}},{"path":"src/test/java/seedu/staffsnap/testutil/TypicalApplicants.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.testutil;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_INTERVIEW_BEHAVIORAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_INTERVIEW_TECHNICAL;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_POSITION_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.ApplicantBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.model.applicant.Applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"import seedu.staffsnap.model.applicant.Score;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"craigtonlian"},"content":" * A utility class containing a list of {@code Applicant} objects to be used in tests.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"craigtonlian"},"content":"public class TypicalApplicants {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant ALICE \u003d new ApplicantBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"            .withPosition(\"Software Engineer\").withEmail(\"alice@example.com\").withPhone(\"94351253\")","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant BENSON \u003d new ApplicantBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"craigtonlian"},"content":"            .withPosition(\"Frontend Engineer\").withEmail(\"benson@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"            .withInterviews(VALID_INTERVIEW_TECHNICAL)","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"            .withScore(new Score(8.0, 8.0, 1))","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"            .withStatus(\"OFFERED\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant CARL \u003d new ApplicantBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"            .withEmail(\"carl@example.com\").withPosition(\"Backend Engineer\").withInterviews(VALID_INTERVIEW_BEHAVIORAL)","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"            .withScore(new Score(8.5, 8.5, 1))","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"            .withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant DANIEL \u003d new ApplicantBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"            .withEmail(\"daniel@example.com\").withPosition(\"Testing Engineer\").withInterviews(VALID_INTERVIEW_TECHNICAL)","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant ELLE \u003d new ApplicantBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"elle@example.com\").withPosition(\"Frontend Engineer\")","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant FIONA \u003d new ApplicantBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"fiona@example.com\").withPosition(\"Backend Engineer\")","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant GEORGE \u003d new ApplicantBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"george@example.com\").withPosition(\"Software Engineer\")","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant HOON \u003d new ApplicantBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"hoon@example.com\").withPosition(\"Staff Engineer\")","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant IDA \u003d new ApplicantBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"ida@example.com\").withPosition(\"Senior Software Engineer\")","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"    // References only for JsonSerializableApplicantBookTest","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"    public static final Applicant ALICE1 \u003d new ApplicantBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"            .withPosition(\"Software Engineer\").withEmail(\"alice@example.com\").withPhone(\"94351253\")","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"    public static final Applicant BENSON1 \u003d new ApplicantBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"            .withPosition(\"Frontend Engineer\").withEmail(\"benson@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"            .withInterviews(VALID_INTERVIEW_TECHNICAL)","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"            .withScore(new Score(8.0, 8.0, 1))","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"            .withStatus(\"OFFERED\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"    public static final Applicant CARL1 \u003d new ApplicantBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"carl@example.com\").withPosition(\"Backend Engineer\").withInterviews(VALID_INTERVIEW_BEHAVIORAL)","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"            .withScore(new Score(8.5, 8.5, 1))","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"            .withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"    public static final Applicant DANIEL1 \u003d new ApplicantBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"daniel@example.com\").withPosition(\"Testing Engineer\").withInterviews(VALID_INTERVIEW_TECHNICAL)","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"    public static final Applicant ELLE1 \u003d new ApplicantBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"elle@example.com\").withPosition(\"Frontend Engineer\")","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"    public static final Applicant FIONA1 \u003d new ApplicantBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"fiona@example.com\").withPosition(\"Backend Engineer\")","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"    public static final Applicant GEORGE1 \u003d new ApplicantBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"george@example.com\").withPosition(\"Software Engineer\")","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"    public static final Applicant HOON1 \u003d new ApplicantBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"hoon@example.com\").withPosition(\"Staff Engineer\")","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"    public static final Applicant IDA1 \u003d new ApplicantBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(\"ida@example.com\").withPosition(\"Senior Software Engineer\")","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"    public static final Applicant BOB1 \u003d new ApplicantBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(VALID_EMAIL_BOB).withPosition(VALID_POSITION_BOB)","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"            .withScore(new Score(8.7, 8.7, 1)).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":95,"author":{"gitId":"craigtonlian"},"content":"    // Manually added - Applicant\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant AMY \u003d new ApplicantBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(VALID_EMAIL_AMY).withPosition(VALID_POSITION_AMY)","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"            .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"craigtonlian"},"content":"    public static final Applicant BOB \u003d new ApplicantBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"            .withEmail(VALID_EMAIL_BOB).withPosition(VALID_POSITION_BOB)","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"            .withScore(new Score(8.7, 8.7, 1)).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"    private TypicalApplicants() {","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"craigtonlian"},"content":"     * Returns an {@code ApplicantBook} with all the typical applicants.","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"craigtonlian"},"content":"    public static ApplicantBook getTypicalApplicantBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook ab \u003d new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"craigtonlian"},"content":"        for (Applicant applicant : getTypicalApplicants()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"craigtonlian"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"craigtonlian"},"content":"     * Returns an {@code ApplicantBook} with all the typical applicants in non-alphabetical order.","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"craigtonlian"},"content":"    public static ApplicantBook getUnsortedApplicantBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook ab \u003d new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"ivanleekk"},"content":"        List\u003cApplicant\u003e unsorted \u003d getTypicalApplicants();","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"ivanleekk"},"content":"        Collections.reverse(unsorted);","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"ivanleekk"},"content":"        for (Applicant applicant : unsorted) {","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"ivanleekk"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"ivanleekk"},"content":"        return ab;","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"craigtonlian"},"content":"     * Returns an {@code ApplicantBook} with all the typical applicants sorted by Name.","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"craigtonlian"},"content":"    public static ApplicantBook getSortedByNameApplicantBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook ab \u003d new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"ivanleekk"},"content":"        for (Applicant applicant : getApplicantsSortedByName()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"ivanleekk"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"ivanleekk"},"content":"        return ab;","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"craigtonlian"},"content":"     * Returns an {@code ApplicantBook} with all the typical applicants sorted by Phone.","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"craigtonlian"},"content":"    public static ApplicantBook getSortedByPhoneApplicantBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"craigtonlian"},"content":"        ApplicantBook ab \u003d new ApplicantBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"ivanleekk"},"content":"        for (Applicant applicant : getApplicantsSortedByPhone()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"ivanleekk"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"ivanleekk"},"content":"        return ab;","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"craigtonlian"},"content":"    public static List\u003cApplicant\u003e getTypicalApplicants() {","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"CelestineTan03"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, BOB, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":157,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"ivanleekk"},"content":"    public static List\u003cApplicant\u003e getApplicantsSortedByName() {","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"CelestineTan03"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, BOB, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"ivanleekk"},"content":"    public static List\u003cApplicant\u003e getApplicantsSortedByPhone() {","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"CelestineTan03"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BOB, DANIEL, ALICE, ELLE, FIONA, GEORGE, CARL, BENSON));","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"ivanleekk"},"content":"    public static List\u003cApplicant\u003e getApplicantsSortedByStatus() {","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"ivanleekk"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(GEORGE, FIONA, ELLE, DANIEL, BOB, ALICE, BENSON, CARL));","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"ivanleekk"},"content":"    public static List\u003cApplicant\u003e getApplicantsSortedByEmail() {","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"ivanleekk"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, BOB, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"ivanleekk"},"content":"    public static List\u003cApplicant\u003e getApplicantsSortedByPosition() {","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"ivanleekk"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FIONA, CARL, ELLE, BENSON, GEORGE, BOB, ALICE, DANIEL));","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":177,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"ivanleekk"},"content":"    public static List\u003cApplicant\u003e getApplicantsSortedByScore() {","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"ivanleekk"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(GEORGE, FIONA, ELLE, DANIEL, ALICE, BENSON, CARL, BOB));","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"ivanleekk"},"content":"    public static List\u003cApplicant\u003e getApplicantsJsonTest() {","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"ivanleekk"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE1, BENSON1, BOB1, CARL1, DANIEL1, ELLE1, FIONA1, GEORGE1));","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"ivanleekk"},"content":"    public static ApplicantBook getTypicalApplicantBookJsonTest() {","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"ivanleekk"},"content":"        ApplicantBook ab \u003d new ApplicantBook();","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"ivanleekk"},"content":"        for (Applicant applicant : getApplicantsJsonTest()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"ivanleekk"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2023-10-30"},{"lineNumber":190,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"ivanleekk"},"content":"        return ab;","lastModifiedDate":"2023-10-30"},{"lineNumber":192,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"CelestineTan03":9,"craigtonlian":41,"-":23,"ivanleekk":120}},{"path":"src/test/java/seedu/staffsnap/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.testutil;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.commons.core.index.Index;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"craigtonlian"},"content":"    public static final Index INDEX_FIRST_APPLICANT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"craigtonlian"},"content":"    public static final Index INDEX_SECOND_APPLICANT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"craigtonlian"},"content":"    public static final Index INDEX_THIRD_APPLICANT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"craigtonlian"},"content":"    public static final Index INDEX_FIRST_INTERVIEW \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"craigtonlian"},"content":"    public static final Index INDEX_SECOND_INTERVIEW \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"    public static final Index INDEX_THIRD_INTERVIEW \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"craigtonlian":8,"-":7}},{"path":"src/test/java/seedu/staffsnap/ui/ApplicantCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingting1412"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"jingting1412"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"jingting1412"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"jingting1412"},"content":"import static seedu.staffsnap.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"jingting1412"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"jingting1412"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"jingting1412"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"jingting1412"},"content":"import org.testfx.framework.junit5.ApplicationExtension;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"jingting1412"},"content":"import org.testfx.framework.junit5.Start;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"jingting1412"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"jingting1412"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"jingting1412"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"jingting1412"},"content":"import seedu.staffsnap.model.interview.Interview;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"jingting1412"},"content":"import seedu.staffsnap.model.interview.Rating;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"jingting1412"},"content":"@ExtendWith(ApplicationExtension.class)","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"jingting1412"},"content":"public class ApplicantCardTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"jingting1412"},"content":"    private Stage stage;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"jingting1412"},"content":"    private ApplicantCard testCard \u003d new ApplicantCard(BENSON, 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"jingting1412"},"content":"    @BeforeAll","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"jingting1412"},"content":"    public static void setUpClass() {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"jingting1412"},"content":"        // Initialize JavaFX runtime.","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"jingting1412"},"content":"        Platform.startup(() -\u003e {});","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"jingting1412"},"content":"    @Start","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"jingting1412"},"content":"    private void start(Stage stage) {","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"jingting1412"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"jingting1412"},"content":"        Scene scene \u003d new Scene(testCard.getRoot());","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"jingting1412"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"jingting1412"},"content":"        stage.show();","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"jingting1412"},"content":"    public void displayApplicantId_newApplicant_applicantIdDisplayed() {","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"jingting1412"},"content":"        HBox idLabel \u003d (HBox) stage.getScene().lookup(\"#details\");","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(idLabel);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"jingting1412"},"content":"        Label id \u003d (Label) idLabel.lookup(\"#id\");","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"jingting1412"},"content":"        assertEquals(\"1. \", id.getText());","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"jingting1412"},"content":"    public void displayApplicantDetails_newApplicant_applicantDetailsDisplayed() {","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"jingting1412"},"content":"        HBox idLabel \u003d (HBox) stage.getScene().lookup(\"#details\");","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(idLabel);","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"jingting1412"},"content":"        HBox phone \u003d (HBox) stage.getScene().lookup(\"#phone\");","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(phone);","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"jingting1412"},"content":"        HBox email \u003d (HBox) stage.getScene().lookup(\"#email\");","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(email);","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"jingting1412"},"content":"        HBox position \u003d (HBox) stage.getScene().lookup(\"#position\");","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(position);","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"jingting1412"},"content":"        Label name \u003d (Label) idLabel.lookup(\"#name\");","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(name);","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"jingting1412"},"content":"        Label phoneNumber \u003d (Label) phone.getChildren().get(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(phoneNumber);","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"jingting1412"},"content":"        Label emailAddress \u003d (Label) email.getChildren().get(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(emailAddress);","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"jingting1412"},"content":"        Label positionApplied \u003d (Label) position.getChildren().get(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(positionApplied);","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(name);","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(phoneNumber);","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(emailAddress);","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(positionApplied);","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"jingting1412"},"content":"        assertEquals(BENSON.getName().fullName, name.getText());","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"jingting1412"},"content":"        assertEquals(BENSON.getPhone().toString(), phoneNumber.getText());","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"jingting1412"},"content":"        assertEquals(BENSON.getEmail().toString(), emailAddress.getText());","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"jingting1412"},"content":"        assertEquals(BENSON.getPosition().toString(), positionApplied.getText());","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"jingting1412"},"content":"    public void displayApplicantStatus_newApplicant_applicantStatusDisplayed() {","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"jingting1412"},"content":"        HBox idLabel \u003d (HBox) stage.getScene().lookup(\"#details\");","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"jingting1412"},"content":"        Label status \u003d (Label) idLabel.lookup(\"#status\");","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(status);","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(\"OFFERED\", status.getText());","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"jingting1412"},"content":"    public void displayApplicantScore_newInterview_correctScore() {","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"jingting1412"},"content":"        StackPane overallRating \u003d (StackPane) stage.getScene().lookup(\"#overallRating\");","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(overallRating);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"jingting1412"},"content":"        Label ratingLabel \u003d (Label) overallRating.getChildren().get(2);","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(ratingLabel);","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"jingting1412"},"content":"        String correctScore \u003d Double.toString(BENSON.getScore().getAverageScore());","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"jingting1412"},"content":"        assertEquals(correctScore, ratingLabel.getText());","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"jingting1412"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"jingting1412"},"content":"    public void displayApplicantScore_updateScore_scoreUpdated() {","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"jingting1412"},"content":"        Interview newInterview \u003d new Interview(\"test\", new Rating(\"9.0\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"jingting1412"},"content":"        BENSON.addInterview(newInterview);","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"jingting1412"},"content":"        StackPane overallRating \u003d (StackPane) stage.getScene().lookup(\"#overallRating\");","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"jingting1412"},"content":"        Label ratingLabel \u003d (Label) overallRating.getChildren().get(2);","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"jingting1412"},"content":"        assertNotNull(ratingLabel);","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"jingting1412"},"content":"        String correctScore \u003d Double.toString(BENSON.getScore().getAverageScore());","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"jingting1412"},"content":"        assertEquals(correctScore, ratingLabel.getText());","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"jingting1412"},"content":"        BENSON.deleteInterview(newInterview);","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"jingting1412"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"jingting1412"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"jingting1412"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"jingting1412":113,"ivanleekk":1}},{"path":"src/test/java/seedu/staffsnap/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"craigtonlian":1,"-":44}},{"path":"src/test/java/seedu/staffsnap/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"craigtonlian"},"content":"package seedu.staffsnap.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"craigtonlian"},"content":"import static seedu.staffsnap.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"craigtonlian"},"content":"import seedu.staffsnap.MainApp;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"craigtonlian":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"\u003c?import seedu.staffsnap.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"craigtonlian":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"craigtonlian"},"content":"\u003c?import seedu.staffsnap.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"craigtonlian"},"content":"\u003cfx:root type\u003d\"seedu.staffsnap.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"craigtonlian":2,"-":5}}]
